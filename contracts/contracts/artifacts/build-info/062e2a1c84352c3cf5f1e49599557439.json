{
	"id": "062e2a1c84352c3cf5f1e49599557439",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/VolumPhaseManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract VolumPhaseManager {\r\n    enum Phase { Buy, Sell }\r\n    Phase public currentPhase;\r\n    uint256 public lastPhaseShiftTimestamp;\r\n    uint256 public constant PHASE_DURATION = 1 days;\r\n\r\n    event PhaseShifted(Phase newPhase);\r\n\r\n    constructor() {\r\n        currentPhase = Phase.Buy; // Start with the Buy phase\r\n        lastPhaseShiftTimestamp = block.timestamp;\r\n    }\r\n\r\n    function getCurrentPhase() public view returns (Phase) {\r\n        if (block.timestamp >= lastPhaseShiftTimestamp + PHASE_DURATION) {\r\n            return (currentPhase == Phase.Buy) ? Phase.Sell : Phase.Buy;\r\n        }\r\n        return currentPhase;\r\n    }\r\n\r\n    function shiftPhase() external {\r\n        require(block.timestamp >= lastPhaseShiftTimestamp + PHASE_DURATION, \"Cannot shift phase yet\");\r\n        currentPhase = (currentPhase == Phase.Buy) ? Phase.Sell : Phase.Buy;\r\n        lastPhaseShiftTimestamp = block.timestamp;\r\n        emit PhaseShifted(currentPhase);\r\n    }\r\n\r\n    // Additional functions to integrate with the VolumToken contract for applying phase-based incentives\r\n    // would be added here, depending on the specific mechanisms of the VolumToken contract.\r\n}\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/VolumPhaseManager.sol": {
				"VolumPhaseManager": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "enum VolumPhaseManager.Phase",
									"name": "newPhase",
									"type": "uint8"
								}
							],
							"name": "PhaseShifted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "PHASE_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentPhase",
							"outputs": [
								{
									"internalType": "enum VolumPhaseManager.Phase",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPhase",
							"outputs": [
								{
									"internalType": "enum VolumPhaseManager.Phase",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastPhaseShiftTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shiftPhase",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/VolumPhaseManager.sol\":60:1229  contract VolumPhaseManager {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/VolumPhaseManager.sol\":300:437  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/VolumPhaseManager.sol\":340:349  Phase.Buy */\n  0x00\n    /* \"contracts/VolumPhaseManager.sol\":325:337  currentPhase */\n  dup1\n  0x00\n    /* \"contracts/VolumPhaseManager.sol\":325:349  currentPhase = Phase.Buy */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x01\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  tag_5\n  tag_6\n  jump\t// in\ntag_5:\ntag_4:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/VolumPhaseManager.sol\":414:429  block.timestamp */\n  timestamp\n    /* \"contracts/VolumPhaseManager.sol\":388:411  lastPhaseShiftTimestamp */\n  0x01\n    /* \"contracts/VolumPhaseManager.sol\":388:429  lastPhaseShiftTimestamp = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/VolumPhaseManager.sol\":60:1229  contract VolumPhaseManager {... */\n  jump(tag_7)\n    /* \"#utility.yul\":7:187   */\ntag_6:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x21\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"contracts/VolumPhaseManager.sol\":60:1229  contract VolumPhaseManager {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/VolumPhaseManager.sol\":60:1229  contract VolumPhaseManager {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x055ad42e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1296a823\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4ae2b849\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x91e6de41\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa3a40ea5\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/VolumPhaseManager.sol\":124:149  Phase public currentPhase */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/VolumPhaseManager.sol\":707:1023  function shiftPhase() external {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/VolumPhaseManager.sol\":201:248  uint256 public constant PHASE_DURATION = 1 days */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/VolumPhaseManager.sol\":156:194  uint256 public lastPhaseShiftTimestamp */\n    tag_6:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/VolumPhaseManager.sol\":445:699  function getCurrentPhase() public view returns (Phase) {... */\n    tag_7:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/VolumPhaseManager.sol\":124:149  Phase public currentPhase */\n    tag_9:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/VolumPhaseManager.sol\":707:1023  function shiftPhase() external {... */\n    tag_13:\n        /* \"contracts/VolumPhaseManager.sol\":242:248  1 days */\n      0x015180\n        /* \"contracts/VolumPhaseManager.sol\":776:799  lastPhaseShiftTimestamp */\n      sload(0x01)\n        /* \"contracts/VolumPhaseManager.sol\":776:816  lastPhaseShiftTimestamp + PHASE_DURATION */\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"contracts/VolumPhaseManager.sol\":757:772  block.timestamp */\n      timestamp\n        /* \"contracts/VolumPhaseManager.sol\":757:816  block.timestamp >= lastPhaseShiftTimestamp + PHASE_DURATION */\n      lt\n      iszero\n        /* \"contracts/VolumPhaseManager.sol\":749:843  require(block.timestamp >= lastPhaseShiftTimestamp + PHASE_DURATION, \"Cannot shift phase yet\") */\n      tag_27\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_28\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_27:\n        /* \"contracts/VolumPhaseManager.sol\":886:895  Phase.Buy */\n      0x00\n        /* \"contracts/VolumPhaseManager.sol\":870:895  currentPhase == Phase.Buy */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n    tag_30:\n        /* \"contracts/VolumPhaseManager.sol\":870:882  currentPhase */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/VolumPhaseManager.sol\":870:895  currentPhase == Phase.Buy */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_33\n      jumpi\n      tag_34\n      tag_32\n      jump\t// in\n    tag_34:\n    tag_33:\n      eq\n        /* \"contracts/VolumPhaseManager.sol\":869:921  (currentPhase == Phase.Buy) ? Phase.Sell : Phase.Buy */\n      tag_35\n      jumpi\n        /* \"contracts/VolumPhaseManager.sol\":912:921  Phase.Buy */\n      0x00\n        /* \"contracts/VolumPhaseManager.sol\":869:921  (currentPhase == Phase.Buy) ? Phase.Sell : Phase.Buy */\n      jump(tag_36)\n    tag_35:\n        /* \"contracts/VolumPhaseManager.sol\":899:909  Phase.Sell */\n      0x01\n        /* \"contracts/VolumPhaseManager.sol\":869:921  (currentPhase == Phase.Buy) ? Phase.Sell : Phase.Buy */\n    tag_36:\n        /* \"contracts/VolumPhaseManager.sol\":854:866  currentPhase */\n      0x00\n      dup1\n        /* \"contracts/VolumPhaseManager.sol\":854:921  currentPhase = (currentPhase == Phase.Buy) ? Phase.Sell : Phase.Buy */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x01\n      dup2\n      gt\n      iszero\n      tag_37\n      jumpi\n      tag_38\n      tag_32\n      jump\t// in\n    tag_38:\n    tag_37:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/VolumPhaseManager.sol\":958:973  block.timestamp */\n      timestamp\n        /* \"contracts/VolumPhaseManager.sol\":932:955  lastPhaseShiftTimestamp */\n      0x01\n        /* \"contracts/VolumPhaseManager.sol\":932:973  lastPhaseShiftTimestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/VolumPhaseManager.sol\":989:1015  PhaseShifted(currentPhase) */\n      0xcdb978b23d402e7b4de27efd0b7e0e87dab35493a244b14c1c274a1fb8ffc234\n        /* \"contracts/VolumPhaseManager.sol\":1002:1014  currentPhase */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/VolumPhaseManager.sol\":989:1015  PhaseShifted(currentPhase) */\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/VolumPhaseManager.sol\":707:1023  function shiftPhase() external {... */\n      jump\t// out\n        /* \"contracts/VolumPhaseManager.sol\":201:248  uint256 public constant PHASE_DURATION = 1 days */\n    tag_15:\n        /* \"contracts/VolumPhaseManager.sol\":242:248  1 days */\n      0x015180\n        /* \"contracts/VolumPhaseManager.sol\":201:248  uint256 public constant PHASE_DURATION = 1 days */\n      dup2\n      jump\t// out\n        /* \"contracts/VolumPhaseManager.sol\":156:194  uint256 public lastPhaseShiftTimestamp */\n    tag_19:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/VolumPhaseManager.sol\":445:699  function getCurrentPhase() public view returns (Phase) {... */\n    tag_22:\n        /* \"contracts/VolumPhaseManager.sol\":493:498  Phase */\n      0x00\n        /* \"contracts/VolumPhaseManager.sol\":242:248  1 days */\n      0x015180\n        /* \"contracts/VolumPhaseManager.sol\":534:557  lastPhaseShiftTimestamp */\n      sload(0x01)\n        /* \"contracts/VolumPhaseManager.sol\":534:574  lastPhaseShiftTimestamp + PHASE_DURATION */\n      tag_41\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_41:\n        /* \"contracts/VolumPhaseManager.sol\":515:530  block.timestamp */\n      timestamp\n        /* \"contracts/VolumPhaseManager.sol\":515:574  block.timestamp >= lastPhaseShiftTimestamp + PHASE_DURATION */\n      lt\n        /* \"contracts/VolumPhaseManager.sol\":511:662  if (block.timestamp >= lastPhaseShiftTimestamp + PHASE_DURATION) {... */\n      tag_42\n      jumpi\n        /* \"contracts/VolumPhaseManager.sol\":615:624  Phase.Buy */\n      0x00\n        /* \"contracts/VolumPhaseManager.sol\":599:624  currentPhase == Phase.Buy */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_43\n      jumpi\n      tag_44\n      tag_32\n      jump\t// in\n    tag_44:\n    tag_43:\n        /* \"contracts/VolumPhaseManager.sol\":599:611  currentPhase */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/VolumPhaseManager.sol\":599:624  currentPhase == Phase.Buy */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_45\n      jumpi\n      tag_46\n      tag_32\n      jump\t// in\n    tag_46:\n    tag_45:\n      eq\n        /* \"contracts/VolumPhaseManager.sol\":598:650  (currentPhase == Phase.Buy) ? Phase.Sell : Phase.Buy */\n      tag_47\n      jumpi\n        /* \"contracts/VolumPhaseManager.sol\":641:650  Phase.Buy */\n      0x00\n        /* \"contracts/VolumPhaseManager.sol\":598:650  (currentPhase == Phase.Buy) ? Phase.Sell : Phase.Buy */\n      jump(tag_48)\n    tag_47:\n        /* \"contracts/VolumPhaseManager.sol\":628:638  Phase.Sell */\n      0x01\n        /* \"contracts/VolumPhaseManager.sol\":598:650  (currentPhase == Phase.Buy) ? Phase.Sell : Phase.Buy */\n    tag_48:\n        /* \"contracts/VolumPhaseManager.sol\":591:650  return (currentPhase == Phase.Buy) ? Phase.Sell : Phase.Buy */\n      swap1\n      pop\n      jump(tag_40)\n        /* \"contracts/VolumPhaseManager.sol\":511:662  if (block.timestamp >= lastPhaseShiftTimestamp + PHASE_DURATION) {... */\n    tag_42:\n        /* \"contracts/VolumPhaseManager.sol\":679:691  currentPhase */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/VolumPhaseManager.sol\":672:691  return currentPhase */\n      swap1\n      pop\n        /* \"contracts/VolumPhaseManager.sol\":445:699  function getCurrentPhase() public view returns (Phase) {... */\n    tag_40:\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:187   */\n    tag_32:\n        /* \"#utility.yul\":55:132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":52:53   */\n      0x00\n        /* \"#utility.yul\":45:133   */\n      mstore\n        /* \"#utility.yul\":152:156   */\n      0x21\n        /* \"#utility.yul\":149:150   */\n      0x04\n        /* \"#utility.yul\":142:157   */\n      mstore\n        /* \"#utility.yul\":176:180   */\n      0x24\n        /* \"#utility.yul\":173:174   */\n      0x00\n        /* \"#utility.yul\":166:181   */\n      revert\n        /* \"#utility.yul\":193:305   */\n    tag_49:\n        /* \"#utility.yul\":273:274   */\n      0x02\n        /* \"#utility.yul\":266:271   */\n      dup2\n        /* \"#utility.yul\":263:275   */\n      lt\n        /* \"#utility.yul\":253:299   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":279:297   */\n      tag_63\n      tag_32\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":253:299   */\n    tag_62:\n        /* \"#utility.yul\":193:305   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":311:436   */\n    tag_50:\n        /* \"#utility.yul\":355:362   */\n      0x00\n        /* \"#utility.yul\":384:389   */\n      dup2\n        /* \"#utility.yul\":373:389   */\n      swap1\n      pop\n        /* \"#utility.yul\":390:430   */\n      tag_65\n        /* \"#utility.yul\":424:429   */\n      dup3\n        /* \"#utility.yul\":390:430   */\n      tag_49\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":311:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:567   */\n    tag_51:\n        /* \"#utility.yul\":497:506   */\n      0x00\n        /* \"#utility.yul\":530:561   */\n      tag_67\n        /* \"#utility.yul\":555:560   */\n      dup3\n        /* \"#utility.yul\":530:561   */\n      tag_50\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":517:561   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:567   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":573:714   */\n    tag_52:\n        /* \"#utility.yul\":665:707   */\n      tag_69\n        /* \"#utility.yul\":701:706   */\n      dup2\n        /* \"#utility.yul\":665:707   */\n      tag_51\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:708   */\n      mstore\n        /* \"#utility.yul\":573:714   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":720:952   */\n    tag_11:\n        /* \"#utility.yul\":818:822   */\n      0x00\n        /* \"#utility.yul\":856:858   */\n      0x20\n        /* \"#utility.yul\":845:854   */\n      dup3\n        /* \"#utility.yul\":841:859   */\n      add\n        /* \"#utility.yul\":833:859   */\n      swap1\n      pop\n        /* \"#utility.yul\":869:945   */\n      tag_71\n        /* \"#utility.yul\":942:943   */\n      0x00\n        /* \"#utility.yul\":931:940   */\n      dup4\n        /* \"#utility.yul\":927:944   */\n      add\n        /* \"#utility.yul\":918:924   */\n      dup5\n        /* \"#utility.yul\":869:945   */\n      tag_52\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":720:952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":958:1035   */\n    tag_53:\n        /* \"#utility.yul\":995:1002   */\n      0x00\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":1013:1029   */\n      swap1\n      pop\n        /* \"#utility.yul\":958:1035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1041:1159   */\n    tag_54:\n        /* \"#utility.yul\":1128:1152   */\n      tag_74\n        /* \"#utility.yul\":1146:1151   */\n      dup2\n        /* \"#utility.yul\":1128:1152   */\n      tag_53\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1123:1126   */\n      dup3\n        /* \"#utility.yul\":1116:1153   */\n      mstore\n        /* \"#utility.yul\":1041:1159   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1165:1387   */\n    tag_17:\n        /* \"#utility.yul\":1258:1262   */\n      0x00\n        /* \"#utility.yul\":1296:1298   */\n      0x20\n        /* \"#utility.yul\":1285:1294   */\n      dup3\n        /* \"#utility.yul\":1281:1299   */\n      add\n        /* \"#utility.yul\":1273:1299   */\n      swap1\n      pop\n        /* \"#utility.yul\":1309:1380   */\n      tag_76\n        /* \"#utility.yul\":1377:1378   */\n      0x00\n        /* \"#utility.yul\":1366:1375   */\n      dup4\n        /* \"#utility.yul\":1362:1379   */\n      add\n        /* \"#utility.yul\":1353:1359   */\n      dup5\n        /* \"#utility.yul\":1309:1380   */\n      tag_54\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1165:1387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1393:1573   */\n    tag_55:\n        /* \"#utility.yul\":1441:1518   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1438:1439   */\n      0x00\n        /* \"#utility.yul\":1431:1519   */\n      mstore\n        /* \"#utility.yul\":1538:1542   */\n      0x11\n        /* \"#utility.yul\":1535:1536   */\n      0x04\n        /* \"#utility.yul\":1528:1543   */\n      mstore\n        /* \"#utility.yul\":1562:1566   */\n      0x24\n        /* \"#utility.yul\":1559:1560   */\n      0x00\n        /* \"#utility.yul\":1552:1567   */\n      revert\n        /* \"#utility.yul\":1579:1770   */\n    tag_26:\n        /* \"#utility.yul\":1619:1622   */\n      0x00\n        /* \"#utility.yul\":1638:1658   */\n      tag_79\n        /* \"#utility.yul\":1656:1657   */\n      dup3\n        /* \"#utility.yul\":1638:1658   */\n      tag_53\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1633:1658   */\n      swap2\n      pop\n        /* \"#utility.yul\":1672:1692   */\n      tag_80\n        /* \"#utility.yul\":1690:1691   */\n      dup4\n        /* \"#utility.yul\":1672:1692   */\n      tag_53\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1667:1692   */\n      swap3\n      pop\n        /* \"#utility.yul\":1715:1716   */\n      dup3\n        /* \"#utility.yul\":1712:1713   */\n      dup3\n        /* \"#utility.yul\":1708:1717   */\n      add\n        /* \"#utility.yul\":1701:1717   */\n      swap1\n      pop\n        /* \"#utility.yul\":1736:1739   */\n      dup1\n        /* \"#utility.yul\":1733:1734   */\n      dup3\n        /* \"#utility.yul\":1730:1740   */\n      gt\n        /* \"#utility.yul\":1727:1763   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":1743:1761   */\n      tag_82\n      tag_55\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1727:1763   */\n    tag_81:\n        /* \"#utility.yul\":1579:1770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1776:1945   */\n    tag_56:\n        /* \"#utility.yul\":1860:1871   */\n      0x00\n        /* \"#utility.yul\":1894:1900   */\n      dup3\n        /* \"#utility.yul\":1889:1892   */\n      dup3\n        /* \"#utility.yul\":1882:1901   */\n      mstore\n        /* \"#utility.yul\":1934:1938   */\n      0x20\n        /* \"#utility.yul\":1929:1932   */\n      dup3\n        /* \"#utility.yul\":1925:1939   */\n      add\n        /* \"#utility.yul\":1910:1939   */\n      swap1\n      pop\n        /* \"#utility.yul\":1776:1945   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1951:2123   */\n    tag_57:\n        /* \"#utility.yul\":2091:2115   */\n      0x43616e6e6f742073686966742070686173652079657400000000000000000000\n        /* \"#utility.yul\":2087:2088   */\n      0x00\n        /* \"#utility.yul\":2079:2085   */\n      dup3\n        /* \"#utility.yul\":2075:2089   */\n      add\n        /* \"#utility.yul\":2068:2116   */\n      mstore\n        /* \"#utility.yul\":1951:2123   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2129:2495   */\n    tag_58:\n        /* \"#utility.yul\":2271:2274   */\n      0x00\n        /* \"#utility.yul\":2292:2359   */\n      tag_86\n        /* \"#utility.yul\":2356:2358   */\n      0x16\n        /* \"#utility.yul\":2351:2354   */\n      dup4\n        /* \"#utility.yul\":2292:2359   */\n      tag_56\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2285:2359   */\n      swap2\n      pop\n        /* \"#utility.yul\":2368:2461   */\n      tag_87\n        /* \"#utility.yul\":2457:2460   */\n      dup3\n        /* \"#utility.yul\":2368:2461   */\n      tag_57\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2486:2488   */\n      0x20\n        /* \"#utility.yul\":2481:2484   */\n      dup3\n        /* \"#utility.yul\":2477:2489   */\n      add\n        /* \"#utility.yul\":2470:2489   */\n      swap1\n      pop\n        /* \"#utility.yul\":2129:2495   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2501:2920   */\n    tag_29:\n        /* \"#utility.yul\":2667:2671   */\n      0x00\n        /* \"#utility.yul\":2705:2707   */\n      0x20\n        /* \"#utility.yul\":2694:2703   */\n      dup3\n        /* \"#utility.yul\":2690:2708   */\n      add\n        /* \"#utility.yul\":2682:2708   */\n      swap1\n      pop\n        /* \"#utility.yul\":2754:2763   */\n      dup2\n        /* \"#utility.yul\":2748:2752   */\n      dup2\n        /* \"#utility.yul\":2744:2764   */\n      sub\n        /* \"#utility.yul\":2740:2741   */\n      0x00\n        /* \"#utility.yul\":2729:2738   */\n      dup4\n        /* \"#utility.yul\":2725:2742   */\n      add\n        /* \"#utility.yul\":2718:2765   */\n      mstore\n        /* \"#utility.yul\":2782:2913   */\n      tag_89\n        /* \"#utility.yul\":2908:2912   */\n      dup2\n        /* \"#utility.yul\":2782:2913   */\n      tag_58\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2774:2913   */\n      swap1\n      pop\n        /* \"#utility.yul\":2501:2920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203677b4f3e4b51c06be69423addcdb950e2397cdaad672564c4b497d9531540b364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_31": {
									"entryPoint": null,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 68,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:190:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b505f805f6101000a81548160ff0219169083600181111561003357610032610044565b5b021790555042600181905550610071565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b61043b8061007e5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c8063055ad42e146100595780631296a823146100775780634ae2b8491461008157806391e6de411461009f578063a3a40ea5146100bd575b5f80fd5b6100616100db565b60405161006e91906102e3565b60405180910390f35b61007f6100eb565b005b6100896101f1565b6040516100969190610314565b60405180910390f35b6100a76101f8565b6040516100b49190610314565b60405180910390f35b6100c56101fe565b6040516100d291906102e3565b60405180910390f35b5f8054906101000a900460ff1681565b620151806001546100fc919061035a565b42101561013e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610135906103e7565b60405180910390fd5b5f600181111561015157610150610270565b5b5f8054906101000a900460ff1660018111156101705761016f610270565b5b1461017b575f61017e565b60015b5f806101000a81548160ff021916908360018111156101a05761019f610270565b5b0217905550426001819055507fcdb978b23d402e7b4de27efd0b7e0e87dab35493a244b14c1c274a1fb8ffc2345f8054906101000a900460ff166040516101e791906102e3565b60405180910390a1565b6201518081565b60015481565b5f62015180600154610210919061035a565b421061025d575f600181111561022957610228610270565b5b5f8054906101000a900460ff16600181111561024857610247610270565b5b14610253575f610256565b60015b905061026d565b5f8054906101000a900460ff1690505b90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600281106102ae576102ad610270565b5b50565b5f8190506102be8261029d565b919050565b5f6102cd826102b1565b9050919050565b6102dd816102c3565b82525050565b5f6020820190506102f65f8301846102d4565b92915050565b5f819050919050565b61030e816102fc565b82525050565b5f6020820190506103275f830184610305565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610364826102fc565b915061036f836102fc565b92508282019050808211156103875761038661032d565b5b92915050565b5f82825260208201905092915050565b7f43616e6e6f7420736869667420706861736520796574000000000000000000005f82015250565b5f6103d160168361038d565b91506103dc8261039d565b602082019050919050565b5f6020820190508181035f8301526103fe816103c5565b905091905056fea26469706673582212203677b4f3e4b51c06be69423addcdb950e2397cdaad672564c4b497d9531540b364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x33 JUMPI PUSH2 0x32 PUSH2 0x44 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x71 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x43B DUP1 PUSH2 0x7E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55AD42E EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x1296A823 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x4AE2B849 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x91E6DE41 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xA3A40EA5 EQ PUSH2 0xBD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0xEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x89 PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH3 0x15180 PUSH1 0x1 SLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x35A JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x13E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135 SWAP1 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x151 JUMPI PUSH2 0x150 PUSH2 0x270 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x170 JUMPI PUSH2 0x16F PUSH2 0x270 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x17B JUMPI PUSH0 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1A0 JUMPI PUSH2 0x19F PUSH2 0x270 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0xCDB978B23D402E7B4DE27EFD0B7E0E87DAB35493A244B14C1C274A1FB8FFC234 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH3 0x15180 PUSH1 0x1 SLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x35A JUMP JUMPDEST TIMESTAMP LT PUSH2 0x25D JUMPI PUSH0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x229 JUMPI PUSH2 0x228 PUSH2 0x270 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x248 JUMPI PUSH2 0x247 PUSH2 0x270 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x253 JUMPI PUSH0 PUSH2 0x256 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH2 0x26D JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x2AE JUMPI PUSH2 0x2AD PUSH2 0x270 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x2BE DUP3 PUSH2 0x29D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2CD DUP3 PUSH2 0x2B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DD DUP2 PUSH2 0x2C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F6 PUSH0 DUP4 ADD DUP5 PUSH2 0x2D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30E DUP2 PUSH2 0x2FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x327 PUSH0 DUP4 ADD DUP5 PUSH2 0x305 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x364 DUP3 PUSH2 0x2FC JUMP JUMPDEST SWAP2 POP PUSH2 0x36F DUP4 PUSH2 0x2FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x387 JUMPI PUSH2 0x386 PUSH2 0x32D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F742073686966742070686173652079657400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3D1 PUSH1 0x16 DUP4 PUSH2 0x38D JUMP JUMPDEST SWAP2 POP PUSH2 0x3DC DUP3 PUSH2 0x39D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3FE DUP2 PUSH2 0x3C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH24 0xB4F3E4B51C06BE69423ADDCDB950E2397CDAAD672564C4B4 SWAP8 0xD9 MSTORE8 ISZERO BLOCKHASH 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "60:1169:0:-:0;;;300:137;;;;;;;;;;340:9;325:12;;:24;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;414:15;388:23;:41;;;;60:1169;;7:180:1;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;60:1169:0;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@PHASE_DURATION_12": {
									"entryPoint": 497,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@currentPhase_7": {
									"entryPoint": 219,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCurrentPhase_59": {
									"entryPoint": 510,
									"id": 59,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastPhaseShiftTimestamp_9": {
									"entryPoint": 504,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@shiftPhase_95": {
									"entryPoint": 235,
									"id": 95,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Phase_$4_to_t_uint8_fromStack": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_6f8941332290c96b7474994388da461fb7e867447a7982b086a137995e1e6eea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_enum$_Phase_$4__to_t_uint8__fromStack_reversed": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6f8941332290c96b7474994388da461fb7e867447a7982b086a137995e1e6eea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Phase_$4": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Phase_$4_to_t_uint8": {
									"entryPoint": 707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 813,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_6f8941332290c96b7474994388da461fb7e867447a7982b086a137995e1e6eea": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Phase_$4": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2923:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "243:62:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "279:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "279:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "279:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "266:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "273:1:1",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "263:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "263:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "256:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:20:1"
															},
															"nodeType": "YulIf",
															"src": "253:46:1"
														}
													]
												},
												"name": "validator_assert_t_enum$_Phase_$4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "236:5:1",
														"type": ""
													}
												],
												"src": "193:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:73:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "373:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "373:7:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "424:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Phase_$4",
																	"nodeType": "YulIdentifier",
																	"src": "390:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "390:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "390:40:1"
														}
													]
												},
												"name": "cleanup_t_enum$_Phase_$4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "345:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "355:7:1",
														"type": ""
													}
												],
												"src": "311:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "507:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "517:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "555:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Phase_$4",
																	"nodeType": "YulIdentifier",
																	"src": "530:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "530:31:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "517:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Phase_$4_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "487:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "497:9:1",
														"type": ""
													}
												],
												"src": "442:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "643:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "701:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Phase_$4_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "665:35:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "665:42:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "653:55:1"
														}
													]
												},
												"name": "abi_encode_t_enum$_Phase_$4_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "631:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "638:3:1",
														"type": ""
													}
												],
												"src": "573:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:129:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "833:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "845:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "856:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "841:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "841:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "833:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "918:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "931:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "942:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "927:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "927:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Phase_$4_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "869:48:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:76:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "869:76:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Phase_$4__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "795:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "807:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "818:4:1",
														"type": ""
													}
												],
												"src": "720:232:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1003:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1013:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1024:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1013:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "985:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "995:7:1",
														"type": ""
													}
												],
												"src": "958:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1106:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1123:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1146:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1128:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1128:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1116:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1116:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1094:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1101:3:1",
														"type": ""
													}
												],
												"src": "1041:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1263:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1273:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1285:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1296:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1281:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1281:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1273:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1353:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1366:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1377:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1362:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1362:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1309:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1309:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1235:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1247:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1258:4:1",
														"type": ""
													}
												],
												"src": "1165:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1421:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1438:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1441:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1431:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1431:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1535:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1538:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1528:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1528:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1528:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1559:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1562:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1552:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1552:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1552:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1393:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1623:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1633:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1656:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1638:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1633:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1667:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1690:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1672:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1672:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1667:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1701:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1715:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1708:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1708:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1701:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1741:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1743:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1743:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1733:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1730:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1730:10:1"
															},
															"nodeType": "YulIf",
															"src": "1727:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1610:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1613:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1619:3:1",
														"type": ""
													}
												],
												"src": "1579:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1872:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1889:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1894:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1882:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1882:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1882:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1910:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1929:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1934:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1925:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1925:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1910:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1844:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1849:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1860:11:1",
														"type": ""
													}
												],
												"src": "1776:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2057:66:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2079:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2087:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2075:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2075:14:1"
																	},
																	{
																		"hexValue": "43616e6e6f7420736869667420706861736520796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2091:24:1",
																		"type": "",
																		"value": "Cannot shift phase yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2068:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2068:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2068:48:1"
														}
													]
												},
												"name": "store_literal_in_memory_6f8941332290c96b7474994388da461fb7e867447a7982b086a137995e1e6eea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2049:6:1",
														"type": ""
													}
												],
												"src": "1951:172:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2275:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2285:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2351:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2356:2:1",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2292:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2292:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2285:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2457:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6f8941332290c96b7474994388da461fb7e867447a7982b086a137995e1e6eea",
																	"nodeType": "YulIdentifier",
																	"src": "2368:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2368:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2368:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2470:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2481:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2486:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2477:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2470:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6f8941332290c96b7474994388da461fb7e867447a7982b086a137995e1e6eea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2263:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2271:3:1",
														"type": ""
													}
												],
												"src": "2129:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2672:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2682:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2694:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2705:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2690:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2690:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2682:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2729:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2740:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2748:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2754:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2744:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2744:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2718:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2718:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2718:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2774:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2908:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6f8941332290c96b7474994388da461fb7e867447a7982b086a137995e1e6eea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2782:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2782:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2774:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6f8941332290c96b7474994388da461fb7e867447a7982b086a137995e1e6eea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2652:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2667:4:1",
														"type": ""
													}
												],
												"src": "2501:419:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Phase_$4(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Phase_$4(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Phase_$4(value)\n    }\n\n    function convert_t_enum$_Phase_$4_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Phase_$4(value)\n    }\n\n    function abi_encode_t_enum$_Phase_$4_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Phase_$4_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Phase_$4__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Phase_$4_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6f8941332290c96b7474994388da461fb7e867447a7982b086a137995e1e6eea(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot shift phase yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f8941332290c96b7474994388da461fb7e867447a7982b086a137995e1e6eea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_6f8941332290c96b7474994388da461fb7e867447a7982b086a137995e1e6eea(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6f8941332290c96b7474994388da461fb7e867447a7982b086a137995e1e6eea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6f8941332290c96b7474994388da461fb7e867447a7982b086a137995e1e6eea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610055575f3560e01c8063055ad42e146100595780631296a823146100775780634ae2b8491461008157806391e6de411461009f578063a3a40ea5146100bd575b5f80fd5b6100616100db565b60405161006e91906102e3565b60405180910390f35b61007f6100eb565b005b6100896101f1565b6040516100969190610314565b60405180910390f35b6100a76101f8565b6040516100b49190610314565b60405180910390f35b6100c56101fe565b6040516100d291906102e3565b60405180910390f35b5f8054906101000a900460ff1681565b620151806001546100fc919061035a565b42101561013e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610135906103e7565b60405180910390fd5b5f600181111561015157610150610270565b5b5f8054906101000a900460ff1660018111156101705761016f610270565b5b1461017b575f61017e565b60015b5f806101000a81548160ff021916908360018111156101a05761019f610270565b5b0217905550426001819055507fcdb978b23d402e7b4de27efd0b7e0e87dab35493a244b14c1c274a1fb8ffc2345f8054906101000a900460ff166040516101e791906102e3565b60405180910390a1565b6201518081565b60015481565b5f62015180600154610210919061035a565b421061025d575f600181111561022957610228610270565b5b5f8054906101000a900460ff16600181111561024857610247610270565b5b14610253575f610256565b60015b905061026d565b5f8054906101000a900460ff1690505b90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600281106102ae576102ad610270565b5b50565b5f8190506102be8261029d565b919050565b5f6102cd826102b1565b9050919050565b6102dd816102c3565b82525050565b5f6020820190506102f65f8301846102d4565b92915050565b5f819050919050565b61030e816102fc565b82525050565b5f6020820190506103275f830184610305565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610364826102fc565b915061036f836102fc565b92508282019050808211156103875761038661032d565b5b92915050565b5f82825260208201905092915050565b7f43616e6e6f7420736869667420706861736520796574000000000000000000005f82015250565b5f6103d160168361038d565b91506103dc8261039d565b602082019050919050565b5f6020820190508181035f8301526103fe816103c5565b905091905056fea26469706673582212203677b4f3e4b51c06be69423addcdb950e2397cdaad672564c4b497d9531540b364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x55AD42E EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x1296A823 EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x4AE2B849 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x91E6DE41 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xA3A40EA5 EQ PUSH2 0xBD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0xEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x89 PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x96 SWAP2 SWAP1 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH3 0x15180 PUSH1 0x1 SLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x35A JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x13E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135 SWAP1 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x151 JUMPI PUSH2 0x150 PUSH2 0x270 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x170 JUMPI PUSH2 0x16F PUSH2 0x270 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x17B JUMPI PUSH0 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1A0 JUMPI PUSH2 0x19F PUSH2 0x270 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0xCDB978B23D402E7B4DE27EFD0B7E0E87DAB35493A244B14C1C274A1FB8FFC234 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH3 0x15180 PUSH1 0x1 SLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x35A JUMP JUMPDEST TIMESTAMP LT PUSH2 0x25D JUMPI PUSH0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x229 JUMPI PUSH2 0x228 PUSH2 0x270 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x248 JUMPI PUSH2 0x247 PUSH2 0x270 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x253 JUMPI PUSH0 PUSH2 0x256 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH2 0x26D JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x2AE JUMPI PUSH2 0x2AD PUSH2 0x270 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x2BE DUP3 PUSH2 0x29D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2CD DUP3 PUSH2 0x2B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DD DUP2 PUSH2 0x2C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F6 PUSH0 DUP4 ADD DUP5 PUSH2 0x2D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30E DUP2 PUSH2 0x2FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x327 PUSH0 DUP4 ADD DUP5 PUSH2 0x305 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x364 DUP3 PUSH2 0x2FC JUMP JUMPDEST SWAP2 POP PUSH2 0x36F DUP4 PUSH2 0x2FC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x387 JUMPI PUSH2 0x386 PUSH2 0x32D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F742073686966742070686173652079657400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3D1 PUSH1 0x16 DUP4 PUSH2 0x38D JUMP JUMPDEST SWAP2 POP PUSH2 0x3DC DUP3 PUSH2 0x39D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3FE DUP2 PUSH2 0x3C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH24 0xB4F3E4B51C06BE69423ADDCDB950E2397CDAAD672564C4B4 SWAP8 0xD9 MSTORE8 ISZERO BLOCKHASH 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "60:1169:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;124:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;707:316;;;:::i;:::-;;201:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;156:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;445:254;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;124:25;;;;;;;;;;;;:::o;707:316::-;242:6;776:23;;:40;;;;:::i;:::-;757:15;:59;;749:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;886:9;870:25;;;;;;;;:::i;:::-;;:12;;;;;;;;;;:25;;;;;;;;:::i;:::-;;;869:52;;912:9;869:52;;;899:10;869:52;854:12;;:67;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;958:15;932:23;:41;;;;989:26;1002:12;;;;;;;;;;989:26;;;;;;:::i;:::-;;;;;;;;707:316::o;201:47::-;242:6;201:47;:::o;156:38::-;;;;:::o;445:254::-;493:5;242:6;534:23;;:40;;;;:::i;:::-;515:15;:59;511:151;;615:9;599:25;;;;;;;;:::i;:::-;;:12;;;;;;;;;;:25;;;;;;;;:::i;:::-;;;598:52;;641:9;598:52;;;628:10;598:52;591:59;;;;511:151;679:12;;;;;;;;;;672:19;;445:254;;:::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:112;273:1;266:5;263:12;253:46;;279:18;;:::i;:::-;253:46;193:112;:::o;311:125::-;355:7;384:5;373:16;;390:40;424:5;390:40;:::i;:::-;311:125;;;:::o;442:::-;497:9;530:31;555:5;530:31;:::i;:::-;517:44;;442:125;;;:::o;573:141::-;665:42;701:5;665:42;:::i;:::-;660:3;653:55;573:141;;:::o;720:232::-;818:4;856:2;845:9;841:18;833:26;;869:76;942:1;931:9;927:17;918:6;869:76;:::i;:::-;720:232;;;;:::o;958:77::-;995:7;1024:5;1013:16;;958:77;;;:::o;1041:118::-;1128:24;1146:5;1128:24;:::i;:::-;1123:3;1116:37;1041:118;;:::o;1165:222::-;1258:4;1296:2;1285:9;1281:18;1273:26;;1309:71;1377:1;1366:9;1362:17;1353:6;1309:71;:::i;:::-;1165:222;;;;:::o;1393:180::-;1441:77;1438:1;1431:88;1538:4;1535:1;1528:15;1562:4;1559:1;1552:15;1579:191;1619:3;1638:20;1656:1;1638:20;:::i;:::-;1633:25;;1672:20;1690:1;1672:20;:::i;:::-;1667:25;;1715:1;1712;1708:9;1701:16;;1736:3;1733:1;1730:10;1727:36;;;1743:18;;:::i;:::-;1727:36;1579:191;;;;:::o;1776:169::-;1860:11;1894:6;1889:3;1882:19;1934:4;1929:3;1925:14;1910:29;;1776:169;;;;:::o;1951:172::-;2091:24;2087:1;2079:6;2075:14;2068:48;1951:172;:::o;2129:366::-;2271:3;2292:67;2356:2;2351:3;2292:67;:::i;:::-;2285:74;;2368:93;2457:3;2368:93;:::i;:::-;2486:2;2481:3;2477:12;2470:19;;2129:366;;;:::o;2501:419::-;2667:4;2705:2;2694:9;2690:18;2682:26;;2754:9;2748:4;2744:20;2740:1;2729:9;2725:17;2718:47;2782:131;2908:4;2782:131;:::i;:::-;2774:139;;2501:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "216600",
								"executionCost": "46665",
								"totalCost": "263265"
							},
							"external": {
								"PHASE_DURATION()": "347",
								"currentPhase()": "2529",
								"getCurrentPhase()": "infinite",
								"lastPhaseShiftTimestamp()": "2469",
								"shiftPhase()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 1229,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 1229,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 1229,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 300,
									"end": 437,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 300,
									"end": 437,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 437,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 300,
									"end": 437,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 300,
									"end": 437,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 300,
									"end": 437,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 300,
									"end": 437,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 300,
									"end": 437,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 300,
									"end": 437,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 300,
									"end": 437,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 300,
									"end": 437,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 340,
									"end": 349,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 325,
									"end": 337,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 325,
									"end": 337,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 325,
									"end": 349,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 325,
									"end": 349,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 325,
									"end": 349,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 325,
									"end": 349,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 325,
									"end": 349,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 325,
									"end": 349,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 325,
									"end": 349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 325,
									"end": 349,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 325,
									"end": 349,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 325,
									"end": 349,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 414,
									"end": 429,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 388,
									"end": 411,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 388,
									"end": 429,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 388,
									"end": 429,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 388,
									"end": 429,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 388,
									"end": 429,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 60,
									"end": 1229,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 60,
									"end": 1229,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 60,
									"end": 1229,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1229,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 1229,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1229,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 1229,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1229,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1229,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1229,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203677b4f3e4b51c06be69423addcdb950e2397cdaad672564c4b497d9531540b364736f6c63430008140033",
									".code": [
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "55AD42E"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "1296A823"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "4AE2B849"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "91E6DE41"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "A3A40EA5"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1229,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 124,
											"end": 149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 124,
											"end": 149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 124,
											"end": 149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 124,
											"end": 149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 124,
											"end": 149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 707,
											"end": 1023,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 707,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 707,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 707,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 707,
											"end": 1023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 707,
											"end": 1023,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 707,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 707,
											"end": 1023,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 201,
											"end": 248,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 201,
											"end": 248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 201,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 201,
											"end": 248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 201,
											"end": 248,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 201,
											"end": 248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 201,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 201,
											"end": 248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 201,
											"end": 248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 201,
											"end": 248,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 201,
											"end": 248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 201,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 201,
											"end": 248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 248,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 201,
											"end": 248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 201,
											"end": 248,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 156,
											"end": 194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 156,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 156,
											"end": 194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 156,
											"end": 194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 156,
											"end": 194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 156,
											"end": 194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 156,
											"end": 194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 156,
											"end": 194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 156,
											"end": 194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 445,
											"end": 699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 445,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 445,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 445,
											"end": 699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 445,
											"end": 699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 445,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 445,
											"end": 699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 124,
											"end": 149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 124,
											"end": 149,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 124,
											"end": 149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 124,
											"end": 149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 707,
											"end": 1023,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 707,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 242,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 776,
											"end": 799,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 776,
											"end": 799,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 776,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 776,
											"end": 816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 776,
											"end": 816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 776,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 776,
											"end": 816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 776,
											"end": 816,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 776,
											"end": 816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 757,
											"end": 772,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 757,
											"end": 816,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 757,
											"end": 816,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 749,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 749,
											"end": 843,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 749,
											"end": 843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 843,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 749,
											"end": 843,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 749,
											"end": 843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 749,
											"end": 843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 749,
											"end": 843,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 749,
											"end": 843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 749,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 749,
											"end": 843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 749,
											"end": 843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 749,
											"end": 843,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 749,
											"end": 843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 749,
											"end": 843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 749,
											"end": 843,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 749,
											"end": 843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 843,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 749,
											"end": 843,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 749,
											"end": 843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 749,
											"end": 843,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 749,
											"end": 843,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 749,
											"end": 843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 886,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 870,
											"end": 895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 870,
											"end": 895,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 870,
											"end": 895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 870,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 870,
											"end": 895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 870,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 870,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 870,
											"end": 895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 870,
											"end": 895,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 870,
											"end": 895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 870,
											"end": 895,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 870,
											"end": 895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 870,
											"end": 882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 870,
											"end": 882,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 870,
											"end": 882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 870,
											"end": 882,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 870,
											"end": 882,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 870,
											"end": 882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 870,
											"end": 882,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 870,
											"end": 882,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 870,
											"end": 882,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 870,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 870,
											"end": 895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 870,
											"end": 895,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 870,
											"end": 895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 870,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 870,
											"end": 895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 870,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 870,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 870,
											"end": 895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 870,
											"end": 895,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 870,
											"end": 895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 870,
											"end": 895,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 870,
											"end": 895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 870,
											"end": 895,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 869,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 869,
											"end": 921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 912,
											"end": 921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 869,
											"end": 921,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 869,
											"end": 921,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 869,
											"end": 921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 899,
											"end": 909,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 869,
											"end": 921,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 869,
											"end": 921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 854,
											"end": 866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 854,
											"end": 921,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 854,
											"end": 921,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 854,
											"end": 921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 854,
											"end": 921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 854,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 854,
											"end": 921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 854,
											"end": 921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 854,
											"end": 921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 854,
											"end": 921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 958,
											"end": 973,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 932,
											"end": 955,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 932,
											"end": 973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 932,
											"end": 973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 932,
											"end": 973,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 932,
											"end": 973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1015,
											"name": "PUSH",
											"source": 0,
											"value": "CDB978B23D402E7B4DE27EFD0B7E0E87DAB35493A244B14C1C274A1FB8FFC234"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1002,
											"end": 1014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 989,
											"end": 1015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 989,
											"end": 1015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 989,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1015,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 989,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 989,
											"end": 1015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 989,
											"end": 1015,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 707,
											"end": 1023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 201,
											"end": 248,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 201,
											"end": 248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 242,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 201,
											"end": 248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 201,
											"end": 248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 156,
											"end": 194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 156,
											"end": 194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 156,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 445,
											"end": 699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 493,
											"end": 498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 248,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 534,
											"end": 557,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 534,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 534,
											"end": 574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 534,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 534,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 534,
											"end": 574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 534,
											"end": 574,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 534,
											"end": 574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 515,
											"end": 530,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 515,
											"end": 574,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 511,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 615,
											"end": 624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 624,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 599,
											"end": 624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 599,
											"end": 624,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 599,
											"end": 624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 599,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 599,
											"end": 624,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 599,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 599,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 599,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 599,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 599,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 599,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 599,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 599,
											"end": 611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 599,
											"end": 611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 599,
											"end": 611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 599,
											"end": 611,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 599,
											"end": 611,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 599,
											"end": 611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 599,
											"end": 624,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 599,
											"end": 624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 599,
											"end": 624,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 599,
											"end": 624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 599,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 599,
											"end": 624,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 599,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 599,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 599,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 599,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 599,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 599,
											"end": 624,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 599,
											"end": 624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 599,
											"end": 624,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 598,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 598,
											"end": 650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 641,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 598,
											"end": 650,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 598,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 598,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 598,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 591,
											"end": 650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 591,
											"end": 650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 591,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 591,
											"end": 650,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 511,
											"end": 662,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 511,
											"end": 662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 691,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 679,
											"end": 691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 679,
											"end": 691,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 679,
											"end": 691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 691,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 679,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 679,
											"end": 691,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 672,
											"end": 691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 445,
											"end": 699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 45,
											"end": 133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 193,
											"end": 305,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 193,
											"end": 305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 273,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 266,
											"end": 271,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 263,
											"end": 275,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 253,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 253,
											"end": 299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 279,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 279,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 279,
											"end": 297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 279,
											"end": 297,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 279,
											"end": 297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 253,
											"end": 299,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 253,
											"end": 299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 193,
											"end": 305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 193,
											"end": 305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 311,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 311,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 355,
											"end": 362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 373,
											"end": 389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 373,
											"end": 389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 390,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 424,
											"end": 429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 390,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 390,
											"end": 430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 390,
											"end": 430,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 390,
											"end": 430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 311,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 311,
											"end": 436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 311,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 311,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 567,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 442,
											"end": 567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 555,
											"end": 560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 530,
											"end": 561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 530,
											"end": 561,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 530,
											"end": 561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 517,
											"end": 561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 567,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 442,
											"end": 567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 442,
											"end": 567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 714,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 573,
											"end": 714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 701,
											"end": 706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 665,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 665,
											"end": 707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 665,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 665,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 653,
											"end": 708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 573,
											"end": 714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 720,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 858,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 833,
											"end": 859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 833,
											"end": 859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 869,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 942,
											"end": 943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 940,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 927,
											"end": 944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 918,
											"end": 924,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 869,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 869,
											"end": 945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 869,
											"end": 945,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 869,
											"end": 945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 720,
											"end": 952,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 720,
											"end": 952,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 720,
											"end": 952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1035,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 958,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 995,
											"end": 1002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1035,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 958,
											"end": 1035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1159,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1041,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1146,
											"end": 1151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1128,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1128,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1126,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1387,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1165,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1377,
											"end": 1378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1309,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1380,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1309,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1387,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1387,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1573,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1393,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1441,
											"end": 1518,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1438,
											"end": 1439,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1542,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1535,
											"end": 1536,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1528,
											"end": 1543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1566,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1559,
											"end": 1560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1567,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1770,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1579,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1656,
											"end": 1657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1690,
											"end": 1691,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1672,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1672,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1692,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 1717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1740,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1763,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1727,
											"end": 1763,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1743,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1743,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1761,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1743,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1763,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1727,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1770,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1770,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1579,
											"end": 1770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1945,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1776,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1882,
											"end": 1901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 1938,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1929,
											"end": 1932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 1939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1945,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1945,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 2123,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1951,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2115,
											"name": "PUSH",
											"source": 1,
											"value": "43616E6E6F742073686966742070686173652079657400000000000000000000"
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2116,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 2123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 2123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2495,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2129,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2356,
											"end": 2358,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2351,
											"end": 2354,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2292,
											"end": 2359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2292,
											"end": 2359,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2292,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2285,
											"end": 2359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2457,
											"end": 2460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2368,
											"end": 2461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2461,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2368,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2488,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2481,
											"end": 2484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2920,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2501,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 2671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2707,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2694,
											"end": 2703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2682,
											"end": 2708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2682,
											"end": 2708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2764,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2738,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2765,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2908,
											"end": 2912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2782,
											"end": 2913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2913,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2782,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/VolumPhaseManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"PHASE_DURATION()": "4ae2b849",
							"currentPhase()": "055ad42e",
							"getCurrentPhase()": "a3a40ea5",
							"lastPhaseShiftTimestamp()": "91e6de41",
							"shiftPhase()": "1296a823"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum VolumPhaseManager.Phase\",\"name\":\"newPhase\",\"type\":\"uint8\"}],\"name\":\"PhaseShifted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PHASE_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentPhase\",\"outputs\":[{\"internalType\":\"enum VolumPhaseManager.Phase\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPhase\",\"outputs\":[{\"internalType\":\"enum VolumPhaseManager.Phase\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPhaseShiftTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shiftPhase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VolumPhaseManager.sol\":\"VolumPhaseManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/VolumPhaseManager.sol\":{\"keccak256\":\"0xf45873ca3730f0d186513ccaf12806853846d3400d73bc69359ce72651b62c37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c48a8382b40df6b810653b1cd831600da59c1d5726e87341968c9cbd5548229f\",\"dweb:/ipfs/QmcyxHr36xJoVP6yyeXyYwnNbCnN9h1XVChEAnjM3v6Ket\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/VolumPhaseManager.sol:VolumPhaseManager",
								"label": "currentPhase",
								"offset": 0,
								"slot": "0",
								"type": "t_enum(Phase)4"
							},
							{
								"astId": 9,
								"contract": "contracts/VolumPhaseManager.sol:VolumPhaseManager",
								"label": "lastPhaseShiftTimestamp",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_enum(Phase)4": {
								"encoding": "inplace",
								"label": "enum VolumPhaseManager.Phase",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/VolumPhaseManager.sol": {
				"ast": {
					"absolutePath": "contracts/VolumPhaseManager.sol",
					"exportedSymbols": {
						"VolumPhaseManager": [
							96
						]
					},
					"id": 97,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "VolumPhaseManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 96,
							"linearizedBaseContracts": [
								96
							],
							"name": "VolumPhaseManager",
							"nameLocation": "69:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "VolumPhaseManager.Phase",
									"id": 4,
									"members": [
										{
											"id": 2,
											"name": "Buy",
											"nameLocation": "107:3:0",
											"nodeType": "EnumValue",
											"src": "107:3:0"
										},
										{
											"id": 3,
											"name": "Sell",
											"nameLocation": "112:4:0",
											"nodeType": "EnumValue",
											"src": "112:4:0"
										}
									],
									"name": "Phase",
									"nameLocation": "99:5:0",
									"nodeType": "EnumDefinition",
									"src": "94:24:0"
								},
								{
									"constant": false,
									"functionSelector": "055ad42e",
									"id": 7,
									"mutability": "mutable",
									"name": "currentPhase",
									"nameLocation": "137:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 96,
									"src": "124:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Phase_$4",
										"typeString": "enum VolumPhaseManager.Phase"
									},
									"typeName": {
										"id": 6,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 5,
											"name": "Phase",
											"nameLocations": [
												"124:5:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 4,
											"src": "124:5:0"
										},
										"referencedDeclaration": 4,
										"src": "124:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Phase_$4",
											"typeString": "enum VolumPhaseManager.Phase"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "91e6de41",
									"id": 9,
									"mutability": "mutable",
									"name": "lastPhaseShiftTimestamp",
									"nameLocation": "171:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 96,
									"src": "156:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "156:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4ae2b849",
									"id": 12,
									"mutability": "constant",
									"name": "PHASE_DURATION",
									"nameLocation": "225:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 96,
									"src": "201:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "201:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "242:6:0",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "cdb978b23d402e7b4de27efd0b7e0e87dab35493a244b14c1c274a1fb8ffc234",
									"id": 17,
									"name": "PhaseShifted",
									"nameLocation": "263:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"mutability": "mutable",
												"name": "newPhase",
												"nameLocation": "282:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "276:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Phase_$4",
													"typeString": "enum VolumPhaseManager.Phase"
												},
												"typeName": {
													"id": 14,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 13,
														"name": "Phase",
														"nameLocations": [
															"276:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4,
														"src": "276:5:0"
													},
													"referencedDeclaration": 4,
													"src": "276:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$4",
														"typeString": "enum VolumPhaseManager.Phase"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:16:0"
									},
									"src": "257:35:0"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "314:123:0",
										"statements": [
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "currentPhase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "325:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$4",
															"typeString": "enum VolumPhaseManager.Phase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 21,
															"name": "Phase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "340:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Phase_$4_$",
																"typeString": "type(enum VolumPhaseManager.Phase)"
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "346:3:0",
														"memberName": "Buy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2,
														"src": "340:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$4",
															"typeString": "enum VolumPhaseManager.Phase"
														}
													},
													"src": "325:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$4",
														"typeString": "enum VolumPhaseManager.Phase"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "325:24:0"
											},
											{
												"expression": {
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 25,
														"name": "lastPhaseShiftTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "388:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 26,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "414:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "420:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "414:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "388:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "388:41:0"
											}
										]
									},
									"id": 31,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "311:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:0:0"
									},
									"scope": 96,
									"src": "300:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "500:199:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 37,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "515:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "521:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "515:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 39,
															"name": "lastPhaseShiftTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "534:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 40,
															"name": "PHASE_DURATION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "560:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "534:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "515:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 55,
												"nodeType": "IfStatement",
												"src": "511:151:0",
												"trueBody": {
													"id": 54,
													"nodeType": "Block",
													"src": "576:86:0",
													"statements": [
														{
															"expression": {
																"condition": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_enum$_Phase_$4",
																				"typeString": "enum VolumPhaseManager.Phase"
																			},
																			"id": 46,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 43,
																				"name": "currentPhase",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 7,
																				"src": "599:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_Phase_$4",
																					"typeString": "enum VolumPhaseManager.Phase"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"expression": {
																					"id": 44,
																					"name": "Phase",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4,
																					"src": "615:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_Phase_$4_$",
																						"typeString": "type(enum VolumPhaseManager.Phase)"
																					}
																				},
																				"id": 45,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "621:3:0",
																				"memberName": "Buy",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2,
																				"src": "615:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_Phase_$4",
																					"typeString": "enum VolumPhaseManager.Phase"
																				}
																			},
																			"src": "599:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 47,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "598:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"expression": {
																		"id": 50,
																		"name": "Phase",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4,
																		"src": "641:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Phase_$4_$",
																			"typeString": "type(enum VolumPhaseManager.Phase)"
																		}
																	},
																	"id": 51,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "647:3:0",
																	"memberName": "Buy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2,
																	"src": "641:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Phase_$4",
																		"typeString": "enum VolumPhaseManager.Phase"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "598:52:0",
																"trueExpression": {
																	"expression": {
																		"id": 48,
																		"name": "Phase",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4,
																		"src": "628:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Phase_$4_$",
																			"typeString": "type(enum VolumPhaseManager.Phase)"
																		}
																	},
																	"id": 49,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "634:4:0",
																	"memberName": "Sell",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3,
																	"src": "628:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Phase_$4",
																		"typeString": "enum VolumPhaseManager.Phase"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$4",
																	"typeString": "enum VolumPhaseManager.Phase"
																}
															},
															"functionReturnParameters": 36,
															"id": 53,
															"nodeType": "Return",
															"src": "591:59:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 56,
													"name": "currentPhase",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "679:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$4",
														"typeString": "enum VolumPhaseManager.Phase"
													}
												},
												"functionReturnParameters": 36,
												"id": 57,
												"nodeType": "Return",
												"src": "672:19:0"
											}
										]
									},
									"functionSelector": "a3a40ea5",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPhase",
									"nameLocation": "454:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "493:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Phase_$4",
													"typeString": "enum VolumPhaseManager.Phase"
												},
												"typeName": {
													"id": 34,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 33,
														"name": "Phase",
														"nameLocations": [
															"493:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4,
														"src": "493:5:0"
													},
													"referencedDeclaration": 4,
													"src": "493:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$4",
														"typeString": "enum VolumPhaseManager.Phase"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:7:0"
									},
									"scope": 96,
									"src": "445:254:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "738:285:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 63,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "757:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "763:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "757:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 65,
																	"name": "lastPhaseShiftTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "776:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 66,
																	"name": "PHASE_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "802:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "776:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "757:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420736869667420706861736520796574",
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "818:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f8941332290c96b7474994388da461fb7e867447a7982b086a137995e1e6eea",
																"typeString": "literal_string \"Cannot shift phase yet\""
															},
															"value": "Cannot shift phase yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f8941332290c96b7474994388da461fb7e867447a7982b086a137995e1e6eea",
																"typeString": "literal_string \"Cannot shift phase yet\""
															}
														],
														"id": 62,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "749:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "749:94:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "749:94:0"
											},
											{
												"expression": {
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 72,
														"name": "currentPhase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "854:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$4",
															"typeString": "enum VolumPhaseManager.Phase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_enum$_Phase_$4",
																		"typeString": "enum VolumPhaseManager.Phase"
																	},
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 73,
																		"name": "currentPhase",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 7,
																		"src": "870:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Phase_$4",
																			"typeString": "enum VolumPhaseManager.Phase"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 74,
																			"name": "Phase",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4,
																			"src": "886:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_Phase_$4_$",
																				"typeString": "type(enum VolumPhaseManager.Phase)"
																			}
																		},
																		"id": 75,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "892:3:0",
																		"memberName": "Buy",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2,
																		"src": "886:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Phase_$4",
																			"typeString": "enum VolumPhaseManager.Phase"
																		}
																	},
																	"src": "870:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 77,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "869:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"expression": {
																"id": 80,
																"name": "Phase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "912:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Phase_$4_$",
																	"typeString": "type(enum VolumPhaseManager.Phase)"
																}
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "918:3:0",
															"memberName": "Buy",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2,
															"src": "912:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Phase_$4",
																"typeString": "enum VolumPhaseManager.Phase"
															}
														},
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "869:52:0",
														"trueExpression": {
															"expression": {
																"id": 78,
																"name": "Phase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "899:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Phase_$4_$",
																	"typeString": "type(enum VolumPhaseManager.Phase)"
																}
															},
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "905:4:0",
															"memberName": "Sell",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3,
															"src": "899:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Phase_$4",
																"typeString": "enum VolumPhaseManager.Phase"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$4",
															"typeString": "enum VolumPhaseManager.Phase"
														}
													},
													"src": "854:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$4",
														"typeString": "enum VolumPhaseManager.Phase"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "854:67:0"
											},
											{
												"expression": {
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 85,
														"name": "lastPhaseShiftTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "932:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 86,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "958:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "964:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "958:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "932:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "932:41:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 91,
															"name": "currentPhase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1002:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Phase_$4",
																"typeString": "enum VolumPhaseManager.Phase"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Phase_$4",
																"typeString": "enum VolumPhaseManager.Phase"
															}
														],
														"id": 90,
														"name": "PhaseShifted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "989:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_enum$_Phase_$4_$returns$__$",
															"typeString": "function (enum VolumPhaseManager.Phase)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "989:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "EmitStatement",
												"src": "984:31:0"
											}
										]
									},
									"functionSelector": "1296a823",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shiftPhase",
									"nameLocation": "716:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "726:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "738:0:0"
									},
									"scope": 96,
									"src": "707:316:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 97,
							"src": "60:1169:0",
							"usedErrors": [],
							"usedEvents": [
								17
							]
						}
					],
					"src": "33:1200:0"
				},
				"id": 0
			}
		}
	}
}