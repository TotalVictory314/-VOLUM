{
	"id": "baba87ceab264dbd40d0b9b2f047720d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/VolumProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\";\r\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract VolumProxy is ERC1967Upgrade, ERC1967Proxy, Ownable {\r\n    address public pendingImplementation;\r\n\r\n    event NewImplementationProposed(address indexed newImplementation);\r\n    event ImplementationUpgraded(address indexed newImplementation);\r\n\r\n    constructor(address _logic, address _admin, bytes memory _data)\r\n        ERC1967Proxy(_logic, _data)\r\n        Ownable(_admin)\r\n    {\r\n    }\r\n\r\n    function proposeNewImplementation(address newImplementation) public onlyOwner {\r\n        require(newImplementation != address(0), \"New implementation cannot be the zero address\");\r\n        pendingImplementation = newImplementation;\r\n        emit NewImplementationProposed(newImplementation);\r\n    }\r\n\r\n    function approveNewImplementation() public onlyOwner {\r\n        require(pendingImplementation != address(0), \"No new implementation proposed\");\r\n        _upgradeTo(pendingImplementation);\r\n        emit ImplementationUpgraded(pendingImplementation);\r\n        pendingImplementation = address(0);\r\n    }\r\n\r\n    function getImplementation() public view returns (address) {\r\n        return _getImplementation();\r\n    }\r\n\r\n    receive() external payable {\r\n        // Handle incoming ether transactions\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.20;\n\nimport {Proxy} from \"../Proxy.sol\";\nimport {ERC1967Utils} from \"./ERC1967Utils.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n     * encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     *\n     * Requirements:\n     *\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    constructor(address implementation, bytes memory _data) payable {\n        ERC1967Utils.upgradeToAndCall(implementation, _data);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return ERC1967Utils.getImplementation();\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/IERC1967.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967Upgrade is IERC1967 {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(_isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Returns true if `account` is a contract.\n     */\n    function _isContract(address account) internal view returns (bool) {\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    // Other functions omitted for brevity...\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"ERC1967Proxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1080:1213  constructor(address implementation, bytes memory _data) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1154:1206  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n  tag_5\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1184:1198  implementation */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1200:1205  _data */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1154:1183  ERC1967Utils.upgradeToAndCall */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1154:1206  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1080:1213  constructor(address implementation, bytes memory _data) payable {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n  jump(tag_7)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\ntag_6:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n  tag_9\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2931:2948  newImplementation */\n  dup2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2978:2979  0 */\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2968  data */\n  dup2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n  mload\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n  iszero\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n  tag_12\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n  jump(tag_14)\ntag_11:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n  tag_15\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\ntag_10:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n  dup2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2349:2366  newImplementation */\n  dup1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n  mload(0x40)\n  0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2443:2460  newImplementation */\n  dup1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2434  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n  tag_21\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2414:2433  IMPLEMENTATION_SLOT */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2413  StorageSlot.getAddressSlot */\n  shl(0x20, tag_22)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2434  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2440  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n  mload(0x40)\n  tag_24\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_28\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_27)\ntag_28:\n  0x60\n  swap2\n  pop\ntag_27:\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap2\n  pop\n  swap2\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n  tag_29\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n  shl(0x20, tag_30)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n  swap3\n  pop\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\ntag_16:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6660:6661  0 */\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n  callvalue\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n  gt\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n  mload(0x40)\n  0xb398979f00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1745:1766  AddressSlot storage r */\n  0x00\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1854:1858  slot */\n  dup2\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1844:1858  r.slot := slot */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\ntag_30:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n  tag_36\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n  shl(0x20, tag_37)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n  jump(tag_38)\ntag_35:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n  eq\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n  dup1\n  iszero\n  tag_39\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n  eq\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\ntag_39:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n  iszero\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n  mload(0x40)\n  0x9996b31500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_41\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_41:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\ntag_40:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n  swap1\n  pop\n  jump(tag_34)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\ntag_34:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\ntag_37:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n  iszero\n  tag_43\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n  add\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n  mload(0x40)\n  0x1425ea4200000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"#utility.yul\":7:82   */\ntag_45:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_46:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_47:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_48:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_49:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_72\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_48\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_50:\n    /* \"#utility.yul\":641:665   */\n  tag_74\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_49\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_75:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_51:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_77\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_50\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_52:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  dup1\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1085   */\ntag_53:\n    /* \"#utility.yul\":1077:1078   */\n  0x00\n    /* \"#utility.yul\":1074:1075   */\n  dup1\n    /* \"#utility.yul\":1067:1079   */\n  revert\n    /* \"#utility.yul\":1091:1193   */\ntag_54:\n    /* \"#utility.yul\":1132:1138   */\n  0x00\n    /* \"#utility.yul\":1183:1185   */\n  0x1f\n    /* \"#utility.yul\":1179:1186   */\n  not\n    /* \"#utility.yul\":1174:1176   */\n  0x1f\n    /* \"#utility.yul\":1167:1172   */\n  dup4\n    /* \"#utility.yul\":1163:1177   */\n  add\n    /* \"#utility.yul\":1159:1187   */\n  and\n    /* \"#utility.yul\":1149:1187   */\n  swap1\n  pop\n    /* \"#utility.yul\":1091:1193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1199:1379   */\ntag_55:\n    /* \"#utility.yul\":1247:1324   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1237:1325   */\n  mstore\n    /* \"#utility.yul\":1344:1348   */\n  0x41\n    /* \"#utility.yul\":1341:1342   */\n  0x04\n    /* \"#utility.yul\":1334:1349   */\n  mstore\n    /* \"#utility.yul\":1368:1372   */\n  0x24\n    /* \"#utility.yul\":1365:1366   */\n  0x00\n    /* \"#utility.yul\":1358:1373   */\n  revert\n    /* \"#utility.yul\":1385:1666   */\ntag_56:\n    /* \"#utility.yul\":1468:1495   */\n  tag_83\n    /* \"#utility.yul\":1490:1494   */\n  dup3\n    /* \"#utility.yul\":1468:1495   */\n  tag_54\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1460:1466   */\n  dup2\n    /* \"#utility.yul\":1456:1496   */\n  add\n    /* \"#utility.yul\":1598:1604   */\n  dup2\n    /* \"#utility.yul\":1586:1596   */\n  dup2\n    /* \"#utility.yul\":1583:1605   */\n  lt\n    /* \"#utility.yul\":1562:1580   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1550:1560   */\n  dup3\n    /* \"#utility.yul\":1547:1581   */\n  gt\n    /* \"#utility.yul\":1544:1606   */\n  or\n    /* \"#utility.yul\":1541:1629   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":1609:1627   */\n  tag_85\n  tag_55\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":1541:1629   */\ntag_84:\n    /* \"#utility.yul\":1649:1659   */\n  dup1\n    /* \"#utility.yul\":1645:1647   */\n  0x40\n    /* \"#utility.yul\":1638:1660   */\n  mstore\n    /* \"#utility.yul\":1428:1666   */\n  pop\n    /* \"#utility.yul\":1385:1666   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1672:1801   */\ntag_57:\n    /* \"#utility.yul\":1706:1712   */\n  0x00\n    /* \"#utility.yul\":1733:1753   */\n  tag_87\n  tag_45\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1723:1753   */\n  swap1\n  pop\n    /* \"#utility.yul\":1762:1795   */\n  tag_88\n    /* \"#utility.yul\":1790:1794   */\n  dup3\n    /* \"#utility.yul\":1782:1788   */\n  dup3\n    /* \"#utility.yul\":1762:1795   */\n  tag_56\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1672:1801   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1807:2114   */\ntag_58:\n    /* \"#utility.yul\":1868:1872   */\n  0x00\n    /* \"#utility.yul\":1958:1976   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1950:1956   */\n  dup3\n    /* \"#utility.yul\":1947:1977   */\n  gt\n    /* \"#utility.yul\":1944:2000   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":1980:1998   */\n  tag_91\n  tag_55\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1944:2000   */\ntag_90:\n    /* \"#utility.yul\":2018:2047   */\n  tag_92\n    /* \"#utility.yul\":2040:2046   */\n  dup3\n    /* \"#utility.yul\":2018:2047   */\n  tag_54\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2010:2047   */\n  swap1\n  pop\n    /* \"#utility.yul\":2102:2106   */\n  0x20\n    /* \"#utility.yul\":2096:2100   */\n  dup2\n    /* \"#utility.yul\":2092:2107   */\n  add\n    /* \"#utility.yul\":2084:2107   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:2114   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2120:2366   */\ntag_59:\n    /* \"#utility.yul\":2201:2202   */\n  0x00\n    /* \"#utility.yul\":2211:2324   */\ntag_94:\n    /* \"#utility.yul\":2225:2231   */\n  dup4\n    /* \"#utility.yul\":2222:2223   */\n  dup2\n    /* \"#utility.yul\":2219:2232   */\n  lt\n    /* \"#utility.yul\":2211:2324   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":2310:2311   */\n  dup1\n    /* \"#utility.yul\":2305:2308   */\n  dup3\n    /* \"#utility.yul\":2301:2312   */\n  add\n    /* \"#utility.yul\":2295:2313   */\n  mload\n    /* \"#utility.yul\":2291:2292   */\n  dup2\n    /* \"#utility.yul\":2286:2289   */\n  dup5\n    /* \"#utility.yul\":2282:2293   */\n  add\n    /* \"#utility.yul\":2275:2314   */\n  mstore\n    /* \"#utility.yul\":2247:2249   */\n  0x20\n    /* \"#utility.yul\":2244:2245   */\n  dup2\n    /* \"#utility.yul\":2240:2250   */\n  add\n    /* \"#utility.yul\":2235:2250   */\n  swap1\n  pop\n    /* \"#utility.yul\":2211:2324   */\n  jump(tag_94)\ntag_96:\n    /* \"#utility.yul\":2358:2359   */\n  0x00\n    /* \"#utility.yul\":2349:2355   */\n  dup5\n    /* \"#utility.yul\":2344:2347   */\n  dup5\n    /* \"#utility.yul\":2340:2356   */\n  add\n    /* \"#utility.yul\":2333:2360   */\n  mstore\n    /* \"#utility.yul\":2182:2366   */\n  pop\n    /* \"#utility.yul\":2120:2366   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2372:2804   */\ntag_60:\n    /* \"#utility.yul\":2460:2465   */\n  0x00\n    /* \"#utility.yul\":2485:2550   */\n  tag_98\n    /* \"#utility.yul\":2501:2549   */\n  tag_99\n    /* \"#utility.yul\":2542:2548   */\n  dup5\n    /* \"#utility.yul\":2501:2549   */\n  tag_58\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2485:2550   */\n  tag_57\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2476:2550   */\n  swap1\n  pop\n    /* \"#utility.yul\":2573:2579   */\n  dup3\n    /* \"#utility.yul\":2566:2571   */\n  dup2\n    /* \"#utility.yul\":2559:2580   */\n  mstore\n    /* \"#utility.yul\":2611:2615   */\n  0x20\n    /* \"#utility.yul\":2604:2609   */\n  dup2\n    /* \"#utility.yul\":2600:2616   */\n  add\n    /* \"#utility.yul\":2649:2652   */\n  dup5\n    /* \"#utility.yul\":2640:2646   */\n  dup5\n    /* \"#utility.yul\":2635:2638   */\n  dup5\n    /* \"#utility.yul\":2631:2647   */\n  add\n    /* \"#utility.yul\":2628:2653   */\n  gt\n    /* \"#utility.yul\":2625:2737   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":2656:2735   */\n  tag_101\n  tag_53\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2625:2737   */\ntag_100:\n    /* \"#utility.yul\":2746:2798   */\n  tag_102\n    /* \"#utility.yul\":2791:2797   */\n  dup5\n    /* \"#utility.yul\":2786:2789   */\n  dup3\n    /* \"#utility.yul\":2781:2784   */\n  dup6\n    /* \"#utility.yul\":2746:2798   */\n  tag_59\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2466:2804   */\n  pop\n    /* \"#utility.yul\":2372:2804   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2823:3176   */\ntag_61:\n    /* \"#utility.yul\":2889:2894   */\n  0x00\n    /* \"#utility.yul\":2938:2941   */\n  dup3\n    /* \"#utility.yul\":2931:2935   */\n  0x1f\n    /* \"#utility.yul\":2923:2929   */\n  dup4\n    /* \"#utility.yul\":2919:2936   */\n  add\n    /* \"#utility.yul\":2915:2942   */\n  slt\n    /* \"#utility.yul\":2905:3027   */\n  tag_104\n  jumpi\n    /* \"#utility.yul\":2946:3025   */\n  tag_105\n  tag_52\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2905:3027   */\ntag_104:\n    /* \"#utility.yul\":3056:3062   */\n  dup2\n    /* \"#utility.yul\":3050:3063   */\n  mload\n    /* \"#utility.yul\":3081:3170   */\n  tag_106\n    /* \"#utility.yul\":3166:3169   */\n  dup5\n    /* \"#utility.yul\":3158:3164   */\n  dup3\n    /* \"#utility.yul\":3151:3155   */\n  0x20\n    /* \"#utility.yul\":3143:3149   */\n  dup7\n    /* \"#utility.yul\":3139:3156   */\n  add\n    /* \"#utility.yul\":3081:3170   */\n  tag_60\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3072:3170   */\n  swap2\n  pop\n    /* \"#utility.yul\":2895:3176   */\n  pop\n    /* \"#utility.yul\":2823:3176   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3182:3860   */\ntag_2:\n    /* \"#utility.yul\":3270:3276   */\n  0x00\n    /* \"#utility.yul\":3278:3284   */\n  dup1\n    /* \"#utility.yul\":3327:3329   */\n  0x40\n    /* \"#utility.yul\":3315:3324   */\n  dup4\n    /* \"#utility.yul\":3306:3313   */\n  dup6\n    /* \"#utility.yul\":3302:3325   */\n  sub\n    /* \"#utility.yul\":3298:3330   */\n  slt\n    /* \"#utility.yul\":3295:3414   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":3333:3412   */\n  tag_109\n  tag_46\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3295:3414   */\ntag_108:\n    /* \"#utility.yul\":3453:3454   */\n  0x00\n    /* \"#utility.yul\":3478:3542   */\n  tag_110\n    /* \"#utility.yul\":3534:3541   */\n  dup6\n    /* \"#utility.yul\":3525:3531   */\n  dup3\n    /* \"#utility.yul\":3514:3523   */\n  dup7\n    /* \"#utility.yul\":3510:3532   */\n  add\n    /* \"#utility.yul\":3478:3542   */\n  tag_51\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3468:3542   */\n  swap3\n  pop\n    /* \"#utility.yul\":3424:3552   */\n  pop\n    /* \"#utility.yul\":3612:3614   */\n  0x20\n    /* \"#utility.yul\":3601:3610   */\n  dup4\n    /* \"#utility.yul\":3597:3615   */\n  add\n    /* \"#utility.yul\":3591:3616   */\n  mload\n    /* \"#utility.yul\":3643:3661   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3635:3641   */\n  dup2\n    /* \"#utility.yul\":3632:3662   */\n  gt\n    /* \"#utility.yul\":3629:3746   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":3665:3744   */\n  tag_112\n  tag_47\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3629:3746   */\ntag_111:\n    /* \"#utility.yul\":3770:3843   */\n  tag_113\n    /* \"#utility.yul\":3835:3842   */\n  dup6\n    /* \"#utility.yul\":3826:3832   */\n  dup3\n    /* \"#utility.yul\":3815:3824   */\n  dup7\n    /* \"#utility.yul\":3811:3833   */\n  add\n    /* \"#utility.yul\":3770:3843   */\n  tag_61\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3760:3843   */\n  swap2\n  pop\n    /* \"#utility.yul\":3562:3853   */\n  pop\n    /* \"#utility.yul\":3182:3860   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3866:3984   */\ntag_62:\n    /* \"#utility.yul\":3953:3977   */\n  tag_115\n    /* \"#utility.yul\":3971:3976   */\n  dup2\n    /* \"#utility.yul\":3953:3977   */\n  tag_49\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3948:3951   */\n  dup3\n    /* \"#utility.yul\":3941:3978   */\n  mstore\n    /* \"#utility.yul\":3866:3984   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3990:4212   */\ntag_20:\n    /* \"#utility.yul\":4083:4087   */\n  0x00\n    /* \"#utility.yul\":4121:4123   */\n  0x20\n    /* \"#utility.yul\":4110:4119   */\n  dup3\n    /* \"#utility.yul\":4106:4124   */\n  add\n    /* \"#utility.yul\":4098:4124   */\n  swap1\n  pop\n    /* \"#utility.yul\":4134:4205   */\n  tag_117\n    /* \"#utility.yul\":4202:4203   */\n  0x00\n    /* \"#utility.yul\":4191:4200   */\n  dup4\n    /* \"#utility.yul\":4187:4204   */\n  add\n    /* \"#utility.yul\":4178:4184   */\n  dup5\n    /* \"#utility.yul\":4134:4205   */\n  tag_62\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3990:4212   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4218:4316   */\ntag_63:\n    /* \"#utility.yul\":4269:4275   */\n  0x00\n    /* \"#utility.yul\":4303:4308   */\n  dup2\n    /* \"#utility.yul\":4297:4309   */\n  mload\n    /* \"#utility.yul\":4287:4309   */\n  swap1\n  pop\n    /* \"#utility.yul\":4218:4316   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4322:4469   */\ntag_64:\n    /* \"#utility.yul\":4423:4434   */\n  0x00\n    /* \"#utility.yul\":4460:4463   */\n  dup2\n    /* \"#utility.yul\":4445:4463   */\n  swap1\n  pop\n    /* \"#utility.yul\":4322:4469   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4475:4861   */\ntag_65:\n    /* \"#utility.yul\":4579:4582   */\n  0x00\n    /* \"#utility.yul\":4607:4645   */\n  tag_121\n    /* \"#utility.yul\":4639:4644   */\n  dup3\n    /* \"#utility.yul\":4607:4645   */\n  tag_63\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4661:4749   */\n  tag_122\n    /* \"#utility.yul\":4742:4748   */\n  dup2\n    /* \"#utility.yul\":4737:4740   */\n  dup6\n    /* \"#utility.yul\":4661:4749   */\n  tag_64\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4654:4749   */\n  swap4\n  pop\n    /* \"#utility.yul\":4758:4823   */\n  tag_123\n    /* \"#utility.yul\":4816:4822   */\n  dup2\n    /* \"#utility.yul\":4811:4814   */\n  dup6\n    /* \"#utility.yul\":4804:4808   */\n  0x20\n    /* \"#utility.yul\":4797:4802   */\n  dup7\n    /* \"#utility.yul\":4793:4809   */\n  add\n    /* \"#utility.yul\":4758:4823   */\n  tag_59\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4848:4854   */\n  dup1\n    /* \"#utility.yul\":4843:4846   */\n  dup5\n    /* \"#utility.yul\":4839:4855   */\n  add\n    /* \"#utility.yul\":4832:4855   */\n  swap2\n  pop\n    /* \"#utility.yul\":4583:4861   */\n  pop\n    /* \"#utility.yul\":4475:4861   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4867:5138   */\ntag_25:\n    /* \"#utility.yul\":4997:5000   */\n  0x00\n    /* \"#utility.yul\":5019:5112   */\n  tag_125\n    /* \"#utility.yul\":5108:5111   */\n  dup3\n    /* \"#utility.yul\":5099:5105   */\n  dup5\n    /* \"#utility.yul\":5019:5112   */\n  tag_65\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":5012:5112   */\n  swap2\n  pop\n    /* \"#utility.yul\":5129:5132   */\n  dup2\n    /* \"#utility.yul\":5122:5132   */\n  swap1\n  pop\n    /* \"#utility.yul\":4867:5138   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n      mstore(0x40, 0x80)\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      tag_5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2658  _fallback */\n      tag_6\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":599:1715  contract ERC1967Proxy is Proxy {... */\n      stop\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n    tag_6:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      tag_8\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      tag_9\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2396  _implementation */\n      tag_10\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      jump\t// in\n    tag_9:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2380  _delegate */\n      tag_11\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      jump\t// in\n    tag_8:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1581:1713  function _implementation() internal view virtual override returns (address) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1648:1655  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1674:1706  ERC1967Utils.getImplementation() */\n      tag_13\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1674:1704  ERC1967Utils.getImplementation */\n      tag_14\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1674:1706  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_13:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1667:1706  return ERC1967Utils.getImplementation() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1581:1713  function _implementation() internal view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":949:1844  function _delegate(address implementation) internal virtual {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1287:1301  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1284:1285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1281:1282  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1268:1302  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1501:1502  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1498:1499  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1482:1496  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1479:1480  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1463:1477  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1456:1461  gas() */\n      gas\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1443:1503  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1577:1593  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1574:1575  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1571:1572  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1556:1594  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1615:1621  result */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1687:1688  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n      dup2\n      eq\n      tag_17\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1797:1813  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1794:1795  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1787:1814  return(0, returndatasize()) */\n      return\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1717:1733  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1714:1715  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1707:1734  revert(0, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2009:2016  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2082  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_19\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2062:2081  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2061  StorageSlot.getAddressSlot */\n      tag_20\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2082  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_19:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2028:2088  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1745:1766  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1854:1858  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1844:1858  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122015f57705b31b3ca854ad88df61c4ee20d45c9fffdae9afa45de2a76ac780383664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_203": {
									"entryPoint": null,
									"id": 203,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkNonPayable_687": {
									"entryPoint": 533,
									"id": 687,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_986": {
									"entryPoint": 749,
									"id": 986,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_473": {
									"entryPoint": 192,
									"id": 473,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_906": {
									"entryPoint": 399,
									"id": 906,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1049": {
									"entryPoint": 593,
									"id": 1049,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@upgradeToAndCall_507": {
									"entryPoint": 60,
									"id": 507,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_946": {
									"entryPoint": 602,
									"id": 946,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr_fromMemory": {
									"entryPoint": 1156,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr_fromMemory": {
									"entryPoint": 1221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 1266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 817,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 1396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1116,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 924,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5141:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "934:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "951:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1057:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1074:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1077:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1067:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1067:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "968:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1139:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1149:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1167:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1163:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1183:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1179:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1122:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1132:6:12",
														"type": ""
													}
												],
												"src": "1091:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1227:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1247:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1237:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1344:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1358:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1199:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1428:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1438:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1490:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1468:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1468:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1456:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1442:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1607:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1609:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1609:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1550:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1562:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1547:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1547:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1586:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1583:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1583:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1544:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:62:12"
															},
															"nodeType": "YulIf",
															"src": "1541:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1649:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1638:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1414:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1422:4:12",
														"type": ""
													}
												],
												"src": "1385:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1713:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1723:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1733:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1733:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1782:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1790:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1762:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1762:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1762:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1697:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1706:6:12",
														"type": ""
													}
												],
												"src": "1672:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1873:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1978:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1980:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1980:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1950:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1958:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1947:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1947:30:12"
															},
															"nodeType": "YulIf",
															"src": "1944:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2010:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2040:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2018:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2010:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2084:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2096:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2102:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2084:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1857:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1868:4:12",
														"type": ""
													}
												],
												"src": "1807:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2182:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2192:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2201:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2196:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2261:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2286:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2291:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2282:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2282:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2305:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2310:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2301:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2301:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2295:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2295:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2222:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2225:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2219:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2219:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2233:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2235:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2244:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2247:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2240:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2240:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2235:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2215:3:12",
																"statements": []
															},
															"src": "2211:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2344:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2349:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2340:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2340:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2358:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2333:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2333:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2333:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2164:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2169:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2174:6:12",
														"type": ""
													}
												],
												"src": "2120:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2466:338:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2476:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2542:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2501:40:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2501:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2485:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2485:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2476:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2566:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2573:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2559:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2559:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2589:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2604:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2611:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2600:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2600:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2593:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2654:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2656:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2656:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2656:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2635:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2640:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2631:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2631:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2649:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2628:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2628:25:12"
															},
															"nodeType": "YulIf",
															"src": "2625:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2781:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2786:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2791:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2746:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2746:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2746:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2439:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2444:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2452:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2460:5:12",
														"type": ""
													}
												],
												"src": "2372:432:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2895:281:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2944:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2946:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2946:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2946:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2923:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2931:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2919:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2919:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2938:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2915:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2915:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2908:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:35:12"
															},
															"nodeType": "YulIf",
															"src": "2905:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3036:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3056:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3050:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3050:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3040:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3072:98:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3143:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3151:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3139:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3139:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3158:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3166:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3081:57:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3081:89:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3072:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2873:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2881:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2889:5:12",
														"type": ""
													}
												],
												"src": "2823:353:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3285:575:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3331:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3333:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3333:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3333:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3306:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3315:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3302:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3302:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3327:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3298:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3298:32:12"
															},
															"nodeType": "YulIf",
															"src": "3295:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3424:128:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3439:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3453:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3443:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3468:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3514:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3525:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3510:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3534:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3478:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3478:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3468:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3562:291:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3577:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3601:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3612:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3597:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3597:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3591:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3591:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3581:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3663:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3665:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3665:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3665:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3635:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3643:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3632:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3632:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3629:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3760:83:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3815:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3826:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3811:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3811:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3835:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3770:40:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3770:73:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3760:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3247:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3258:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3270:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3278:6:12",
														"type": ""
													}
												],
												"src": "3182:678:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3931:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3948:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3971:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3953:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3953:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3941:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3941:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3941:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3919:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3926:3:12",
														"type": ""
													}
												],
												"src": "3866:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4088:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4098:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4110:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4121:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4106:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4106:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4098:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4178:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4191:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4202:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4187:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4187:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4134:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4134:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4134:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4060:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4072:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4083:4:12",
														"type": ""
													}
												],
												"src": "3990:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4276:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4287:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4303:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4297:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4297:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4287:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4259:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4269:6:12",
														"type": ""
													}
												],
												"src": "4218:98:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4435:34:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4445:18:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4460:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4445:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4407:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4412:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4423:11:12",
														"type": ""
													}
												],
												"src": "4322:147:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4583:278:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4593:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4639:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4607:31:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4607:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4597:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4654:95:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4737:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4742:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4661:75:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4661:88:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4654:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4797:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4804:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4793:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4793:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4811:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4816:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4758:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4758:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4758:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4832:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4843:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4848:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4839:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4839:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4832:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4579:3:12",
														"type": ""
													}
												],
												"src": "4475:386:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5001:137:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5012:100:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5099:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5108:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5019:79:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:93:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5012:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5122:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5129:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5122:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4980:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4986:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4997:3:12",
														"type": ""
													}
												],
												"src": "4867:271:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040516106ae3803806106ae833981810160405281019061002591906104f2565b610035828261003c60201b60201c565b50506105ce565b61004b826100c060201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f815111156100ad576100a7828261018f60201b60201c565b506100bc565b6100bb61021560201b60201c565b5b5050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361011b57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610112919061055b565b60405180910390fd5b8061014d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61025160201b60201c565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff16846040516101b891906105b8565b5f60405180830381855af49150503d805f81146101f0576040519150601f19603f3d011682016040523d82523d5f602084013e6101f5565b606091505b509150915061020b85838361025a60201b60201c565b9250505092915050565b5f34111561024f576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f819050919050565b60608261027557610270826102ed60201b60201c565b6102e5565b5f825114801561029b57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156102dd57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016102d4919061055b565b60405180910390fd5b8190506102e6565b5b9392505050565b5f815111156102ff5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61036b82610342565b9050919050565b61037b81610361565b8114610385575f80fd5b50565b5f8151905061039681610372565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6103ea826103a4565b810181811067ffffffffffffffff82111715610409576104086103b4565b5b80604052505050565b5f61041b610331565b905061042782826103e1565b919050565b5f67ffffffffffffffff821115610446576104456103b4565b5b61044f826103a4565b9050602081019050919050565b5f5b8381101561047957808201518184015260208101905061045e565b5f8484015250505050565b5f6104966104918461042c565b610412565b9050828152602081018484840111156104b2576104b16103a0565b5b6104bd84828561045c565b509392505050565b5f82601f8301126104d9576104d861039c565b5b81516104e9848260208601610484565b91505092915050565b5f80604083850312156105085761050761033a565b5b5f61051585828601610388565b925050602083015167ffffffffffffffff8111156105365761053561033e565b5b610542858286016104c5565b9150509250929050565b61055581610361565b82525050565b5f60208201905061056e5f83018461054c565b92915050565b5f81519050919050565b5f81905092915050565b5f61059282610574565b61059c818561057e565b93506105ac81856020860161045c565b80840191505092915050565b5f6105c38284610588565b915081905092915050565b60d4806105da5f395ff3fe6080604052600a600c565b005b60186014601a565b6026565b565b5f60216044565b905090565b365f80375f80365f845af43d5f803e805f81146040573d5ff35b3d5ffd5b5f606e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6095565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f81905091905056fea264697066735822122015f57705b31b3ca854ad88df61c4ee20d45c9fffdae9afa45de2a76ac780383664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x6AE CODESIZE SUB DUP1 PUSH2 0x6AE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x35 DUP3 DUP3 PUSH2 0x3C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x5CE JUMP JUMPDEST PUSH2 0x4B DUP3 PUSH2 0xC0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0xAD JUMPI PUSH2 0xA7 DUP3 DUP3 PUSH2 0x18F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xBC JUMP JUMPDEST PUSH2 0xBB PUSH2 0x215 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x11B JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x14D PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x251 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x5B8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1F0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x20B DUP6 DUP4 DUP4 PUSH2 0x25A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x24F JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x275 JUMPI PUSH2 0x270 DUP3 PUSH2 0x2ED PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2E5 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x29B JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2DD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2E6 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x2FF JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x36B DUP3 PUSH2 0x342 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37B DUP2 PUSH2 0x361 JUMP JUMPDEST DUP2 EQ PUSH2 0x385 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x396 DUP2 PUSH2 0x372 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x3EA DUP3 PUSH2 0x3A4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x409 JUMPI PUSH2 0x408 PUSH2 0x3B4 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x41B PUSH2 0x331 JUMP JUMPDEST SWAP1 POP PUSH2 0x427 DUP3 DUP3 PUSH2 0x3E1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x446 JUMPI PUSH2 0x445 PUSH2 0x3B4 JUMP JUMPDEST JUMPDEST PUSH2 0x44F DUP3 PUSH2 0x3A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x479 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x45E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x496 PUSH2 0x491 DUP5 PUSH2 0x42C JUMP JUMPDEST PUSH2 0x412 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4B2 JUMPI PUSH2 0x4B1 PUSH2 0x3A0 JUMP JUMPDEST JUMPDEST PUSH2 0x4BD DUP5 DUP3 DUP6 PUSH2 0x45C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4D9 JUMPI PUSH2 0x4D8 PUSH2 0x39C JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4E9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x484 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x508 JUMPI PUSH2 0x507 PUSH2 0x33A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x515 DUP6 DUP3 DUP7 ADD PUSH2 0x388 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x536 JUMPI PUSH2 0x535 PUSH2 0x33E JUMP JUMPDEST JUMPDEST PUSH2 0x542 DUP6 DUP3 DUP7 ADD PUSH2 0x4C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x555 DUP2 PUSH2 0x361 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x56E PUSH0 DUP4 ADD DUP5 PUSH2 0x54C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x592 DUP3 PUSH2 0x574 JUMP JUMPDEST PUSH2 0x59C DUP2 DUP6 PUSH2 0x57E JUMP JUMPDEST SWAP4 POP PUSH2 0x5AC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x45C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5C3 DUP3 DUP5 PUSH2 0x588 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD4 DUP1 PUSH2 0x5DA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x26 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x21 PUSH1 0x44 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 PUSH0 DUP2 EQ PUSH1 0x40 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x6E PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH1 0x95 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO CREATE2 PUSH24 0x5B31B3CA854AD88DF61C4EE20D45C9FFFDAE9AFA45DE2A7 PUSH11 0xC780383664736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "599:1116:3:-:0;;;1080:133;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1154:52;1184:14;1200:5;1154:29;;;:52;;:::i;:::-;1080:133;;599:1116;;2779:335:5;2870:37;2889:17;2870:18;;;:37;;:::i;:::-;2931:17;2922:27;;;;;;;;;;;;2978:1;2964:4;:11;:15;2960:148;;;2995:53;3024:17;3043:4;2995:28;;;:53;;:::i;:::-;;2960:148;;;3079:18;:16;;;:18;;:::i;:::-;2960:148;2779:335;;:::o;2186:281::-;2296:1;2263:17;:29;;;:34;2259:119;;2349:17;2320:47;;;;;;;;;;;:::i;:::-;;;;;;;;2259:119;2443:17;2387:47;1327:66;2414:19;;2387:26;;;:47;;:::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;2186:281;:::o;4106:253:8:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;;;:55;;:::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:5:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;1684:190:10:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;4625:582:8:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;;;:19;;:::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:75:12;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:307::-;1868:4;1958:18;1950:6;1947:30;1944:56;;;1980:18;;:::i;:::-;1944:56;2018:29;2040:6;2018:29;:::i;:::-;2010:37;;2102:4;2096;2092:15;2084:23;;1807:307;;;:::o;2120:246::-;2201:1;2211:113;2225:6;2222:1;2219:13;2211:113;;;2310:1;2305:3;2301:11;2295:18;2291:1;2286:3;2282:11;2275:39;2247:2;2244:1;2240:10;2235:15;;2211:113;;;2358:1;2349:6;2344:3;2340:16;2333:27;2182:184;2120:246;;;:::o;2372:432::-;2460:5;2485:65;2501:48;2542:6;2501:48;:::i;:::-;2485:65;:::i;:::-;2476:74;;2573:6;2566:5;2559:21;2611:4;2604:5;2600:16;2649:3;2640:6;2635:3;2631:16;2628:25;2625:112;;;2656:79;;:::i;:::-;2625:112;2746:52;2791:6;2786:3;2781;2746:52;:::i;:::-;2466:338;2372:432;;;;;:::o;2823:353::-;2889:5;2938:3;2931:4;2923:6;2919:17;2915:27;2905:122;;2946:79;;:::i;:::-;2905:122;3056:6;3050:13;3081:89;3166:3;3158:6;3151:4;3143:6;3139:17;3081:89;:::i;:::-;3072:98;;2895:281;2823:353;;;;:::o;3182:678::-;3270:6;3278;3327:2;3315:9;3306:7;3302:23;3298:32;3295:119;;;3333:79;;:::i;:::-;3295:119;3453:1;3478:64;3534:7;3525:6;3514:9;3510:22;3478:64;:::i;:::-;3468:74;;3424:128;3612:2;3601:9;3597:18;3591:25;3643:18;3635:6;3632:30;3629:117;;;3665:79;;:::i;:::-;3629:117;3770:73;3835:7;3826:6;3815:9;3811:22;3770:73;:::i;:::-;3760:83;;3562:291;3182:678;;;;;:::o;3866:118::-;3953:24;3971:5;3953:24;:::i;:::-;3948:3;3941:37;3866:118;;:::o;3990:222::-;4083:4;4121:2;4110:9;4106:18;4098:26;;4134:71;4202:1;4191:9;4187:17;4178:6;4134:71;:::i;:::-;3990:222;;;;:::o;4218:98::-;4269:6;4303:5;4297:12;4287:22;;4218:98;;;:::o;4322:147::-;4423:11;4460:3;4445:18;;4322:147;;;;:::o;4475:386::-;4579:3;4607:38;4639:5;4607:38;:::i;:::-;4661:88;4742:6;4737:3;4661:88;:::i;:::-;4654:95;;4758:65;4816:6;4811:3;4804:4;4797:5;4793:16;4758:65;:::i;:::-;4848:6;4843:3;4839:16;4832:23;;4583:278;4475:386;;;;:::o;4867:271::-;4997:3;5019:93;5108:3;5099:6;5019:93;:::i;:::-;5012:100;;5129:3;5122:10;;4867:271;;;;:::o;599:1116:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_723": {
									"entryPoint": null,
									"id": 723,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_699": {
									"entryPoint": 38,
									"id": 699,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_715": {
									"entryPoint": 12,
									"id": 715,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_implementation_215": {
									"entryPoint": 26,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAddressSlot_1049": {
									"entryPoint": 149,
									"id": 1049,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_446": {
									"entryPoint": 68,
									"id": 446,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600a600c565b005b60186014601a565b6026565b565b5f60216044565b905090565b365f80375f80365f845af43d5f803e805f81146040573d5ff35b3d5ffd5b5f606e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6095565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f81905091905056fea264697066735822122015f57705b31b3ca854ad88df61c4ee20d45c9fffdae9afa45de2a76ac780383664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x26 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x21 PUSH1 0x44 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 PUSH0 DUP2 EQ PUSH1 0x40 JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x6E PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH1 0x95 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO CREATE2 PUSH24 0x5B31B3CA854AD88DF61C4EE20D45C9FFFDAE9AFA45DE2A7 PUSH11 0xC780383664736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "599:1116:3:-:0;;;2649:11:6;:9;:11::i;:::-;599:1116:3;2323:83:6;2371:28;2381:17;:15;:17::i;:::-;2371:9;:28::i;:::-;2323:83::o;1581:132:3:-;1648:7;1674:32;:30;:32::i;:::-;1667:39;;1581:132;:::o;949:895:6:-;1287:14;1284:1;1281;1268:34;1501:1;1498;1482:14;1479:1;1463:14;1456:5;1443:60;1577:16;1574:1;1571;1556:38;1615:6;1687:1;1682:66;;;;1797:16;1794:1;1787:27;1682:66;1717:16;1714:1;1707:27;1957:138:5;2009:7;2035:47;1327:66;2062:19;;2035:26;:47::i;:::-;:53;;;;;;;;;;;;2028:60;;1957:138;:::o;1684:190:10:-;1745:21;1854:4;1844:14;;1684:190;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "42400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_implementation()": "2243"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1080,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1154,
									"end": 1206,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1184,
									"end": 1198,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1200,
									"end": 1205,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1154,
									"end": 1183,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1154,
									"end": 1183,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1154,
									"end": 1183,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1154,
									"end": 1206,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1154,
									"end": 1206,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1154,
									"end": 1206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1154,
									"end": 1206,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1154,
									"end": 1206,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2779,
									"end": 3114,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 2779,
									"end": 3114,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2870,
									"end": 2907,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 2889,
									"end": 2906,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2870,
									"end": 2888,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 2870,
									"end": 2888,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2870,
									"end": 2888,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2870,
									"end": 2907,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2870,
									"end": 2907,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2870,
									"end": 2907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2870,
									"end": 2907,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 2870,
									"end": 2907,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2931,
									"end": 2948,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "PUSH",
									"source": 5,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "LOG2",
									"source": 5
								},
								{
									"begin": 2978,
									"end": 2979,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2964,
									"end": 2968,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2964,
									"end": 2975,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2964,
									"end": 2979,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 3024,
									"end": 3041,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3043,
									"end": 3047,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2995,
									"end": 3023,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 2995,
									"end": 3023,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2995,
									"end": 3023,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 3079,
									"end": 3095,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 3079,
									"end": 3095,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3079,
									"end": 3095,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3079,
									"end": 3097,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2779,
									"end": 3114,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2779,
									"end": 3114,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2779,
									"end": 3114,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2186,
									"end": 2467,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 2186,
									"end": 2467,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2296,
									"end": 2297,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2263,
									"end": 2280,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2263,
									"end": 2292,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2263,
									"end": 2292,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2263,
									"end": 2292,
									"name": "EXTCODESIZE",
									"source": 5
								},
								{
									"begin": 2263,
									"end": 2297,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2349,
									"end": 2366,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "PUSH",
									"source": 5,
									"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2320,
									"end": 2367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2434,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1327,
									"end": 1393,
									"name": "PUSH",
									"source": 5,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 2414,
									"end": 2433,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2414,
									"end": 2433,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2413,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 2387,
									"end": 2413,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2413,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2434,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2434,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2434,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 2387,
									"end": 2434,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2440,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2387,
									"end": 2440,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2440,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2186,
									"end": 2467,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2186,
									"end": 2467,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4106,
									"end": 4359,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 4106,
									"end": 4359,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4189,
									"end": 4201,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4214,
									"end": 4226,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4228,
									"end": 4251,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4274,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4255,
									"end": 4274,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4275,
									"end": 4279,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 4255,
									"end": 4280,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "GAS",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DELEGATECALL",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "RETURNDATACOPY",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4213,
									"end": 4280,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4213,
									"end": 4280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4213,
									"end": 4280,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4213,
									"end": 4280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 4324,
									"end": 4330,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4332,
									"end": 4339,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4341,
									"end": 4351,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4323,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 4297,
									"end": 4323,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4297,
									"end": 4323,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4352,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4106,
									"end": 4359,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4106,
									"end": 4359,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4106,
									"end": 4359,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4106,
									"end": 4359,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4106,
									"end": 4359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6598,
									"end": 6720,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 6598,
									"end": 6720,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6660,
									"end": 6661,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6648,
									"end": 6657,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "B398979F00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6598,
									"end": 6720,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1874,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1684,
									"end": 1874,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1745,
									"end": 1766,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1854,
									"end": 1858,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1844,
									"end": 1858,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1844,
									"end": 1858,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1684,
									"end": 1874,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1684,
									"end": 1874,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1684,
									"end": 1874,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1684,
									"end": 1874,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4769,
									"end": 4781,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4798,
									"end": 4805,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4821,
									"end": 4840,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 4829,
									"end": 4839,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4821,
									"end": 4828,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 4821,
									"end": 4828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4821,
									"end": 4828,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4821,
									"end": 4840,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4821,
									"end": 4840,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4821,
									"end": 4840,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4821,
									"end": 4840,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 4821,
									"end": 4840,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5066,
									"end": 5067,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5045,
									"end": 5055,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5062,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5067,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5093,
									"end": 5094,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5071,
									"end": 5077,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "EXTCODESIZE",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5094,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5138,
									"end": 5144,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH",
									"source": 8,
									"value": "9996B31500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5121,
									"end": 5145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5180,
									"end": 5190,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5173,
									"end": 5190,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5173,
									"end": 5190,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5173,
									"end": 5190,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 5173,
									"end": 5190,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 5207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5743,
									"end": 6259,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 5743,
									"end": 6259,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5894,
									"end": 5895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5874,
									"end": 5884,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5874,
									"end": 5891,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5874,
									"end": 5895,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6102,
									"end": 6112,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6096,
									"end": 6113,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6158,
									"end": 6173,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6145,
									"end": 6155,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6141,
									"end": 6143,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6137,
									"end": 6156,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6130,
									"end": 6174,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "PUSH",
									"source": 8,
									"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1075,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1067,
									"end": 1079,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1185,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1179,
									"end": 1186,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1174,
									"end": 1176,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1167,
									"end": 1172,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1163,
									"end": 1177,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1159,
									"end": 1187,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1091,
									"end": 1193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1247,
									"end": 1324,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1237,
									"end": 1325,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1344,
									"end": 1348,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1334,
									"end": 1349,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1368,
									"end": 1372,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 1490,
									"end": 1494,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 1468,
									"end": 1495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1456,
									"end": 1496,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1586,
									"end": 1596,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1583,
									"end": 1605,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1562,
									"end": 1580,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1547,
									"end": 1581,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1544,
									"end": 1606,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1609,
									"end": 1627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1649,
									"end": 1659,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1645,
									"end": 1647,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1660,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1428,
									"end": 1666,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1385,
									"end": 1666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1706,
									"end": 1712,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 1733,
									"end": 1753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 1790,
									"end": 1794,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1782,
									"end": 1788,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1762,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1868,
									"end": 1872,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 1976,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1950,
									"end": 1956,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1947,
									"end": 1977,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1980,
									"end": 1998,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2018,
									"end": 2047,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 2040,
									"end": 2046,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2018,
									"end": 2047,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 2018,
									"end": 2047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2018,
									"end": 2047,
									"name": "tag",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 2018,
									"end": 2047,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2047,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2047,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2102,
									"end": 2106,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2100,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2092,
									"end": 2107,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2084,
									"end": 2107,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2084,
									"end": 2107,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1807,
									"end": 2114,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2366,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 2120,
									"end": 2366,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2201,
									"end": 2202,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2225,
									"end": 2231,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2222,
									"end": 2223,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2219,
									"end": 2232,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2310,
									"end": 2311,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2305,
									"end": 2308,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2301,
									"end": 2312,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2295,
									"end": 2313,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2291,
									"end": 2292,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2286,
									"end": 2289,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2282,
									"end": 2293,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2275,
									"end": 2314,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2247,
									"end": 2249,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2244,
									"end": 2245,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2240,
									"end": 2250,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2235,
									"end": 2250,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2235,
									"end": 2250,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2358,
									"end": 2359,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2349,
									"end": 2355,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2344,
									"end": 2347,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2340,
									"end": 2356,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2333,
									"end": 2360,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2182,
									"end": 2366,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2366,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2366,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2366,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2366,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2372,
									"end": 2804,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 2372,
									"end": 2804,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2460,
									"end": 2465,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2485,
									"end": 2550,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 2501,
									"end": 2549,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 2542,
									"end": 2548,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2501,
									"end": 2549,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 2501,
									"end": 2549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2501,
									"end": 2549,
									"name": "tag",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 2501,
									"end": 2549,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2485,
									"end": 2550,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 2485,
									"end": 2550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2485,
									"end": 2550,
									"name": "tag",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 2485,
									"end": 2550,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2550,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2550,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2573,
									"end": 2579,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2571,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2559,
									"end": 2580,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2611,
									"end": 2615,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2604,
									"end": 2609,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2600,
									"end": 2616,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2649,
									"end": 2652,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2640,
									"end": 2646,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2638,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2631,
									"end": 2647,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2628,
									"end": 2653,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2625,
									"end": 2737,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2625,
									"end": 2737,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 2625,
									"end": 2737,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2656,
									"end": 2735,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 2656,
									"end": 2735,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 2656,
									"end": 2735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2656,
									"end": 2735,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 2656,
									"end": 2735,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2625,
									"end": 2737,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 2625,
									"end": 2737,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2746,
									"end": 2798,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 2791,
									"end": 2797,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2786,
									"end": 2789,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2781,
									"end": 2784,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2746,
									"end": 2798,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 2746,
									"end": 2798,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2746,
									"end": 2798,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 2746,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2466,
									"end": 2804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2372,
									"end": 2804,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2372,
									"end": 2804,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2372,
									"end": 2804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2372,
									"end": 2804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2372,
									"end": 2804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2372,
									"end": 2804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 3176,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 2823,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2889,
									"end": 2894,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2938,
									"end": 2941,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2923,
									"end": 2929,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2919,
									"end": 2936,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2915,
									"end": 2942,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2905,
									"end": 3027,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 2905,
									"end": 3027,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2946,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 2946,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 2946,
									"end": 3025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2946,
									"end": 3025,
									"name": "tag",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 2946,
									"end": 3025,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2905,
									"end": 3027,
									"name": "tag",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 2905,
									"end": 3027,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3056,
									"end": 3062,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3050,
									"end": 3063,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 3170,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 3166,
									"end": 3169,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3158,
									"end": 3164,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3151,
									"end": 3155,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3143,
									"end": 3149,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3139,
									"end": 3156,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 3170,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 3081,
									"end": 3170,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 3170,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 3081,
									"end": 3170,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3072,
									"end": 3170,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3072,
									"end": 3170,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2895,
									"end": 3176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 3176,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 3176,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 3176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 3176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 3176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3182,
									"end": 3860,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3182,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3270,
									"end": 3276,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3278,
									"end": 3284,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3327,
									"end": 3329,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3315,
									"end": 3324,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3306,
									"end": 3313,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3302,
									"end": 3325,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3298,
									"end": 3330,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 3295,
									"end": 3414,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3295,
									"end": 3414,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 3295,
									"end": 3414,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3333,
									"end": 3412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 3333,
									"end": 3412,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 3333,
									"end": 3412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3333,
									"end": 3412,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 3333,
									"end": 3412,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3295,
									"end": 3414,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 3295,
									"end": 3414,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3453,
									"end": 3454,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3478,
									"end": 3542,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 3534,
									"end": 3541,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3525,
									"end": 3531,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3514,
									"end": 3523,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3510,
									"end": 3532,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3478,
									"end": 3542,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 3478,
									"end": 3542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3478,
									"end": 3542,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 3478,
									"end": 3542,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3468,
									"end": 3542,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3468,
									"end": 3542,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3424,
									"end": 3552,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3612,
									"end": 3614,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3601,
									"end": 3610,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3597,
									"end": 3615,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3643,
									"end": 3661,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3635,
									"end": 3641,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3632,
									"end": 3662,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3629,
									"end": 3746,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3629,
									"end": 3746,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 3629,
									"end": 3746,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3665,
									"end": 3744,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 3665,
									"end": 3744,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 3665,
									"end": 3744,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3665,
									"end": 3744,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 3665,
									"end": 3744,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3629,
									"end": 3746,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 3629,
									"end": 3746,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3770,
									"end": 3843,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 3835,
									"end": 3842,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3826,
									"end": 3832,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3815,
									"end": 3824,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3811,
									"end": 3833,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3770,
									"end": 3843,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 3770,
									"end": 3843,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3770,
									"end": 3843,
									"name": "tag",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 3770,
									"end": 3843,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3760,
									"end": 3843,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3760,
									"end": 3843,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3562,
									"end": 3853,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3182,
									"end": 3860,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3182,
									"end": 3860,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3182,
									"end": 3860,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3182,
									"end": 3860,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3182,
									"end": 3860,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3182,
									"end": 3860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3866,
									"end": 3984,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 3866,
									"end": 3984,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3953,
									"end": 3977,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 3971,
									"end": 3976,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3953,
									"end": 3977,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 3953,
									"end": 3977,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3953,
									"end": 3977,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 3953,
									"end": 3977,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3948,
									"end": 3951,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3941,
									"end": 3978,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3866,
									"end": 3984,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3866,
									"end": 3984,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3866,
									"end": 3984,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3990,
									"end": 4212,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3990,
									"end": 4212,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4083,
									"end": 4087,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4121,
									"end": 4123,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4110,
									"end": 4119,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4106,
									"end": 4124,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4098,
									"end": 4124,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4098,
									"end": 4124,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4134,
									"end": 4205,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 4202,
									"end": 4203,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4191,
									"end": 4200,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4187,
									"end": 4204,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4178,
									"end": 4184,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4134,
									"end": 4205,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 4134,
									"end": 4205,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4134,
									"end": 4205,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 4134,
									"end": 4205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3990,
									"end": 4212,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3990,
									"end": 4212,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3990,
									"end": 4212,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3990,
									"end": 4212,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3990,
									"end": 4212,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4218,
									"end": 4316,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 4218,
									"end": 4316,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4269,
									"end": 4275,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4303,
									"end": 4308,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4297,
									"end": 4309,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4287,
									"end": 4309,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4287,
									"end": 4309,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4218,
									"end": 4316,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4218,
									"end": 4316,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4218,
									"end": 4316,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4218,
									"end": 4316,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4322,
									"end": 4469,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 4322,
									"end": 4469,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4423,
									"end": 4434,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4460,
									"end": 4463,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4445,
									"end": 4463,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4445,
									"end": 4463,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4322,
									"end": 4469,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4322,
									"end": 4469,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4322,
									"end": 4469,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4322,
									"end": 4469,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4322,
									"end": 4469,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4475,
									"end": 4861,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 4475,
									"end": 4861,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4579,
									"end": 4582,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4607,
									"end": 4645,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 4639,
									"end": 4644,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4607,
									"end": 4645,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 4607,
									"end": 4645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4607,
									"end": 4645,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 4607,
									"end": 4645,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4661,
									"end": 4749,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 4742,
									"end": 4748,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4737,
									"end": 4740,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4661,
									"end": 4749,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 4661,
									"end": 4749,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4661,
									"end": 4749,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 4661,
									"end": 4749,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4654,
									"end": 4749,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4654,
									"end": 4749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4758,
									"end": 4823,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 4816,
									"end": 4822,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4811,
									"end": 4814,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4797,
									"end": 4802,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4793,
									"end": 4809,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4758,
									"end": 4823,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 4758,
									"end": 4823,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4758,
									"end": 4823,
									"name": "tag",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 4758,
									"end": 4823,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4848,
									"end": 4854,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4843,
									"end": 4846,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4839,
									"end": 4855,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4832,
									"end": 4855,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4832,
									"end": 4855,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4583,
									"end": 4861,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4475,
									"end": 4861,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4475,
									"end": 4861,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4475,
									"end": 4861,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4475,
									"end": 4861,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4475,
									"end": 4861,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4867,
									"end": 5138,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 4867,
									"end": 5138,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4997,
									"end": 5000,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5019,
									"end": 5112,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 5108,
									"end": 5111,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5099,
									"end": 5105,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5019,
									"end": 5112,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 5019,
									"end": 5112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5019,
									"end": 5112,
									"name": "tag",
									"source": 12,
									"value": "125"
								},
								{
									"begin": 5019,
									"end": 5112,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5012,
									"end": 5112,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5012,
									"end": 5112,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5129,
									"end": 5132,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5122,
									"end": 5132,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5122,
									"end": 5132,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4867,
									"end": 5138,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4867,
									"end": 5138,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4867,
									"end": 5138,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4867,
									"end": 5138,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4867,
									"end": 5138,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 599,
									"end": 1715,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122015f57705b31b3ca854ad88df61c4ee20d45c9fffdae9afa45de2a76ac780383664736f6c63430008140033",
									".code": [
										{
											"begin": 599,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 599,
											"end": 1715,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 1715,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2649,
											"end": 2660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 599,
											"end": 1715,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2381,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2371,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1581,
											"end": 1713,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1581,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1648,
											"end": 1655,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1674,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1674,
											"end": 1706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1706,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1674,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1667,
											"end": 1706,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1667,
											"end": 1706,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1713,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1301,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1284,
											"end": 1285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1282,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1302,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1496,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1479,
											"end": 1480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1443,
											"end": 1503,
											"name": "DELEGATECALL",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1556,
											"end": 1594,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1813,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1717,
											"end": 1733,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1734,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2016,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 5,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 2062,
											"end": 2081,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2081,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2035,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/VolumProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"ERC1967Upgrade": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x9a312c1049e58bc483f63dd5bc026df61773df9763a353bd28bfc7f19904539c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fd8348b2df3921ec0234f265c8e8fbb6c9fcb39f41696825ac7fbe17bae6733\",\"dweb:/ipfs/QmfJ2wScdYEukDYgrdtQMW9NuFcRbGF8UzAUjta1os9nSP\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e81a59a4062a90b3c81a0355555be821171cde0452bf3d9a01d71ecee4a23b0864736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e81a59a4062a90b3c81a0355555be821171cde0452bf3d9a01d71ecee4a23b0864736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 BYTE MSIZE LOG4 MOD 0x2A SWAP1 0xB3 0xC8 BYTE SUB SSTORE SSTORE JUMPDEST 0xE8 0x21 OR SHR 0xDE DIV MSTORE 0xBF RETURNDATASIZE SWAP11 ADD 0xD7 0x1E 0xCE 0xE4 LOG2 EXTCODESIZE ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "449:6273:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e81a59a4062a90b3c81a0355555be821171cde0452bf3d9a01d71ecee4a23b0864736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 BYTE MSIZE LOG4 MOD 0x2A SWAP1 0xB3 0xC8 BYTE SUB SSTORE SSTORE JUMPDEST 0xE8 0x21 OR SHR 0xDE DIV MSTORE 0xBF RETURNDATASIZE SWAP11 ADD 0xD7 0x1E 0xCE 0xE4 LOG2 EXTCODESIZE ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "449:6273:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e81a59a4062a90b3c81a0355555be821171cde0452bf3d9a01d71ecee4a23b0864736f6c63430008140033",
									".code": [
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/VolumProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dc1ce83ea60e1b632553fae24c0f2ab7a9207d097799c8a0d5a58d7ccdb10b9164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dc1ce83ea60e1b632553fae24c0f2ab7a9207d097799c8a0d5a58d7ccdb10b9164736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC SHR 0xE8 RETURNDATACOPY 0xA6 0xE SHL PUSH4 0x2553FAE2 0x4C 0xF 0x2A 0xB7 0xA9 KECCAK256 PUSH30 0x97799C8A0D5A58D7CCDB10B9164736F6C63430008140033000000000000 ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dc1ce83ea60e1b632553fae24c0f2ab7a9207d097799c8a0d5a58d7ccdb10b9164736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC SHR 0xE8 RETURNDATACOPY 0xA6 0xE SHL PUSH4 0x2553FAE2 0x4C 0xF 0x2A 0xB7 0xA9 KECCAK256 PUSH30 0x97799C8A0D5A58D7CCDB10B9164736F6C63430008140033000000000000 ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc1ce83ea60e1b632553fae24c0f2ab7a9207d097799c8a0d5a58d7ccdb10b9164736f6c63430008140033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/VolumProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220122bdb37b83b84a84480ef52227fb13b9f3ed775d4693784d4e6a75172b45ee464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220122bdb37b83b84a84480ef52227fb13b9f3ed775d4693784d4e6a75172b45ee464736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0x2B 0xDB CALLDATACOPY 0xB8 EXTCODESIZE DUP5 0xA8 PREVRANDAO DUP1 0xEF MSTORE 0x22 PUSH32 0xB13B9F3ED775D4693784D4E6A75172B45EE464736F6C63430008140033000000 ",
							"sourceMap": "1245:2685:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220122bdb37b83b84a84480ef52227fb13b9f3ed775d4693784d4e6a75172b45ee464736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0x2B 0xDB CALLDATACOPY 0xB8 EXTCODESIZE DUP5 0xA8 PREVRANDAO DUP1 0xEF MSTORE 0x22 PUSH32 0xB13B9F3ED775D4693784D4E6A75172B45EE464736F6C63430008140033000000 ",
							"sourceMap": "1245:2685:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220122bdb37b83b84a84480ef52227fb13b9f3ed775d4693784d4e6a75172b45ee464736f6c63430008140033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/VolumProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/VolumProxy.sol": {
				"VolumProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_admin",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "ImplementationUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "NewImplementationProposed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "approveNewImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "proposeNewImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/VolumProxy.sol\":250:1467  contract VolumProxy is ERC1967Upgrade, ERC1967Proxy, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/VolumProxy.sol\":508:647  constructor(address _logic, address _admin, bytes memory _data)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/VolumProxy.sol\":626:632  _admin */\n  dup2\n    /* \"contracts/VolumProxy.sol\":594:600  _logic */\n  dup4\n    /* \"contracts/VolumProxy.sol\":602:607  _data */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1154:1206  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n  tag_8\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1184:1198  implementation */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1200:1205  _data */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1154:1183  ERC1967Utils.upgradeToAndCall */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1154:1206  ERC1967Utils.upgradeToAndCall(implementation, _data) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1080:1213  constructor(address implementation, bytes memory _data) payable {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/VolumProxy.sol\":508:647  constructor(address _logic, address _admin, bytes memory _data)... */\n  pop\n  pop\n  pop\n    /* \"contracts/VolumProxy.sol\":250:1467  contract VolumProxy is ERC1967Upgrade, ERC1967Proxy, Ownable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\ntag_9:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n  tag_19\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2931:2948  newImplementation */\n  dup2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2978:2979  0 */\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2968  data */\n  dup2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n  mload\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n  iszero\n  tag_21\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n  tag_22\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n  dup3\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n  shl(0x20, tag_23)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n  jump(tag_24)\ntag_21:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n  tag_25\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\ntag_20:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n  dup2\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n  sub\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n  tag_29\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2349:2366  newImplementation */\n  dup1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n  mload(0x40)\n  0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_30\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2443:2460  newImplementation */\n  dup1\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2434  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n  tag_31\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2414:2433  IMPLEMENTATION_SLOT */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2413  StorageSlot.getAddressSlot */\n  shl(0x20, tag_32)\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2434  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2440  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n  mload(0x40)\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_38\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_37)\ntag_38:\n  0x60\n  swap2\n  pop\ntag_37:\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap2\n  pop\n  swap2\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n  tag_39\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n  dup6\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n  shl(0x20, tag_40)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n  swap3\n  pop\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\ntag_26:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6660:6661  0 */\n  0x00\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n  callvalue\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n  gt\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n  iszero\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n  mload(0x40)\n  0xb398979f00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1745:1766  AddressSlot storage r */\n  0x00\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1854:1858  slot */\n  dup2\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1844:1858  r.slot := slot */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\ntag_40:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n  0x60\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n  tag_45\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n  tag_46\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n  shl(0x20, tag_47)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n  0x20\n  shr\n  jump\t// in\ntag_46:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n  jump(tag_48)\ntag_45:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n  eq\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n  dup1\n  iszero\n  tag_49\n  jumpi\n  pop\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n  dup5\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  extcodesize\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n  eq\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\ntag_49:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n  iszero\n  tag_50\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n  dup4\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n  mload(0x40)\n  0x9996b31500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_51\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_51:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\ntag_50:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n  swap1\n  pop\n  jump(tag_44)\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\ntag_44:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\ntag_47:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n  dup2\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n  gt\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n  iszero\n  tag_53\n  jumpi\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n  mload\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n  dup1\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n  dup3\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n  add\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\ntag_53:\n    /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n  mload(0x40)\n  0x1425ea4200000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"#utility.yul\":7:82   */\ntag_55:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_56:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_57:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_58:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_59:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_82\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_58\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_60:\n    /* \"#utility.yul\":641:665   */\n  tag_84\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_59\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_85\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_85:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_61:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_87\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_60\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_62:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  dup1\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1085   */\ntag_63:\n    /* \"#utility.yul\":1077:1078   */\n  0x00\n    /* \"#utility.yul\":1074:1075   */\n  dup1\n    /* \"#utility.yul\":1067:1079   */\n  revert\n    /* \"#utility.yul\":1091:1193   */\ntag_64:\n    /* \"#utility.yul\":1132:1138   */\n  0x00\n    /* \"#utility.yul\":1183:1185   */\n  0x1f\n    /* \"#utility.yul\":1179:1186   */\n  not\n    /* \"#utility.yul\":1174:1176   */\n  0x1f\n    /* \"#utility.yul\":1167:1172   */\n  dup4\n    /* \"#utility.yul\":1163:1177   */\n  add\n    /* \"#utility.yul\":1159:1187   */\n  and\n    /* \"#utility.yul\":1149:1187   */\n  swap1\n  pop\n    /* \"#utility.yul\":1091:1193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1199:1379   */\ntag_65:\n    /* \"#utility.yul\":1247:1324   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1237:1325   */\n  mstore\n    /* \"#utility.yul\":1344:1348   */\n  0x41\n    /* \"#utility.yul\":1341:1342   */\n  0x04\n    /* \"#utility.yul\":1334:1349   */\n  mstore\n    /* \"#utility.yul\":1368:1372   */\n  0x24\n    /* \"#utility.yul\":1365:1366   */\n  0x00\n    /* \"#utility.yul\":1358:1373   */\n  revert\n    /* \"#utility.yul\":1385:1666   */\ntag_66:\n    /* \"#utility.yul\":1468:1495   */\n  tag_93\n    /* \"#utility.yul\":1490:1494   */\n  dup3\n    /* \"#utility.yul\":1468:1495   */\n  tag_64\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1460:1466   */\n  dup2\n    /* \"#utility.yul\":1456:1496   */\n  add\n    /* \"#utility.yul\":1598:1604   */\n  dup2\n    /* \"#utility.yul\":1586:1596   */\n  dup2\n    /* \"#utility.yul\":1583:1605   */\n  lt\n    /* \"#utility.yul\":1562:1580   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1550:1560   */\n  dup3\n    /* \"#utility.yul\":1547:1581   */\n  gt\n    /* \"#utility.yul\":1544:1606   */\n  or\n    /* \"#utility.yul\":1541:1629   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":1609:1627   */\n  tag_95\n  tag_65\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1541:1629   */\ntag_94:\n    /* \"#utility.yul\":1649:1659   */\n  dup1\n    /* \"#utility.yul\":1645:1647   */\n  0x40\n    /* \"#utility.yul\":1638:1660   */\n  mstore\n    /* \"#utility.yul\":1428:1666   */\n  pop\n    /* \"#utility.yul\":1385:1666   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1672:1801   */\ntag_67:\n    /* \"#utility.yul\":1706:1712   */\n  0x00\n    /* \"#utility.yul\":1733:1753   */\n  tag_97\n  tag_55\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1723:1753   */\n  swap1\n  pop\n    /* \"#utility.yul\":1762:1795   */\n  tag_98\n    /* \"#utility.yul\":1790:1794   */\n  dup3\n    /* \"#utility.yul\":1782:1788   */\n  dup3\n    /* \"#utility.yul\":1762:1795   */\n  tag_66\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1672:1801   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1807:2114   */\ntag_68:\n    /* \"#utility.yul\":1868:1872   */\n  0x00\n    /* \"#utility.yul\":1958:1976   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1950:1956   */\n  dup3\n    /* \"#utility.yul\":1947:1977   */\n  gt\n    /* \"#utility.yul\":1944:2000   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":1980:1998   */\n  tag_101\n  tag_65\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":1944:2000   */\ntag_100:\n    /* \"#utility.yul\":2018:2047   */\n  tag_102\n    /* \"#utility.yul\":2040:2046   */\n  dup3\n    /* \"#utility.yul\":2018:2047   */\n  tag_64\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2010:2047   */\n  swap1\n  pop\n    /* \"#utility.yul\":2102:2106   */\n  0x20\n    /* \"#utility.yul\":2096:2100   */\n  dup2\n    /* \"#utility.yul\":2092:2107   */\n  add\n    /* \"#utility.yul\":2084:2107   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:2114   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2120:2366   */\ntag_69:\n    /* \"#utility.yul\":2201:2202   */\n  0x00\n    /* \"#utility.yul\":2211:2324   */\ntag_104:\n    /* \"#utility.yul\":2225:2231   */\n  dup4\n    /* \"#utility.yul\":2222:2223   */\n  dup2\n    /* \"#utility.yul\":2219:2232   */\n  lt\n    /* \"#utility.yul\":2211:2324   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":2310:2311   */\n  dup1\n    /* \"#utility.yul\":2305:2308   */\n  dup3\n    /* \"#utility.yul\":2301:2312   */\n  add\n    /* \"#utility.yul\":2295:2313   */\n  mload\n    /* \"#utility.yul\":2291:2292   */\n  dup2\n    /* \"#utility.yul\":2286:2289   */\n  dup5\n    /* \"#utility.yul\":2282:2293   */\n  add\n    /* \"#utility.yul\":2275:2314   */\n  mstore\n    /* \"#utility.yul\":2247:2249   */\n  0x20\n    /* \"#utility.yul\":2244:2245   */\n  dup2\n    /* \"#utility.yul\":2240:2250   */\n  add\n    /* \"#utility.yul\":2235:2250   */\n  swap1\n  pop\n    /* \"#utility.yul\":2211:2324   */\n  jump(tag_104)\ntag_106:\n    /* \"#utility.yul\":2358:2359   */\n  0x00\n    /* \"#utility.yul\":2349:2355   */\n  dup5\n    /* \"#utility.yul\":2344:2347   */\n  dup5\n    /* \"#utility.yul\":2340:2356   */\n  add\n    /* \"#utility.yul\":2333:2360   */\n  mstore\n    /* \"#utility.yul\":2182:2366   */\n  pop\n    /* \"#utility.yul\":2120:2366   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2372:2804   */\ntag_70:\n    /* \"#utility.yul\":2460:2465   */\n  0x00\n    /* \"#utility.yul\":2485:2550   */\n  tag_108\n    /* \"#utility.yul\":2501:2549   */\n  tag_109\n    /* \"#utility.yul\":2542:2548   */\n  dup5\n    /* \"#utility.yul\":2501:2549   */\n  tag_68\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2485:2550   */\n  tag_67\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2476:2550   */\n  swap1\n  pop\n    /* \"#utility.yul\":2573:2579   */\n  dup3\n    /* \"#utility.yul\":2566:2571   */\n  dup2\n    /* \"#utility.yul\":2559:2580   */\n  mstore\n    /* \"#utility.yul\":2611:2615   */\n  0x20\n    /* \"#utility.yul\":2604:2609   */\n  dup2\n    /* \"#utility.yul\":2600:2616   */\n  add\n    /* \"#utility.yul\":2649:2652   */\n  dup5\n    /* \"#utility.yul\":2640:2646   */\n  dup5\n    /* \"#utility.yul\":2635:2638   */\n  dup5\n    /* \"#utility.yul\":2631:2647   */\n  add\n    /* \"#utility.yul\":2628:2653   */\n  gt\n    /* \"#utility.yul\":2625:2737   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":2656:2735   */\n  tag_111\n  tag_63\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2625:2737   */\ntag_110:\n    /* \"#utility.yul\":2746:2798   */\n  tag_112\n    /* \"#utility.yul\":2791:2797   */\n  dup5\n    /* \"#utility.yul\":2786:2789   */\n  dup3\n    /* \"#utility.yul\":2781:2784   */\n  dup6\n    /* \"#utility.yul\":2746:2798   */\n  tag_69\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2466:2804   */\n  pop\n    /* \"#utility.yul\":2372:2804   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2823:3176   */\ntag_71:\n    /* \"#utility.yul\":2889:2894   */\n  0x00\n    /* \"#utility.yul\":2938:2941   */\n  dup3\n    /* \"#utility.yul\":2931:2935   */\n  0x1f\n    /* \"#utility.yul\":2923:2929   */\n  dup4\n    /* \"#utility.yul\":2919:2936   */\n  add\n    /* \"#utility.yul\":2915:2942   */\n  slt\n    /* \"#utility.yul\":2905:3027   */\n  tag_114\n  jumpi\n    /* \"#utility.yul\":2946:3025   */\n  tag_115\n  tag_62\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2905:3027   */\ntag_114:\n    /* \"#utility.yul\":3056:3062   */\n  dup2\n    /* \"#utility.yul\":3050:3063   */\n  mload\n    /* \"#utility.yul\":3081:3170   */\n  tag_116\n    /* \"#utility.yul\":3166:3169   */\n  dup5\n    /* \"#utility.yul\":3158:3164   */\n  dup3\n    /* \"#utility.yul\":3151:3155   */\n  0x20\n    /* \"#utility.yul\":3143:3149   */\n  dup7\n    /* \"#utility.yul\":3139:3156   */\n  add\n    /* \"#utility.yul\":3081:3170   */\n  tag_70\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3072:3170   */\n  swap2\n  pop\n    /* \"#utility.yul\":2895:3176   */\n  pop\n    /* \"#utility.yul\":2823:3176   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3182:4016   */\ntag_3:\n    /* \"#utility.yul\":3279:3285   */\n  0x00\n    /* \"#utility.yul\":3287:3293   */\n  dup1\n    /* \"#utility.yul\":3295:3301   */\n  0x00\n    /* \"#utility.yul\":3344:3346   */\n  0x60\n    /* \"#utility.yul\":3332:3341   */\n  dup5\n    /* \"#utility.yul\":3323:3330   */\n  dup7\n    /* \"#utility.yul\":3319:3342   */\n  sub\n    /* \"#utility.yul\":3315:3347   */\n  slt\n    /* \"#utility.yul\":3312:3431   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":3350:3429   */\n  tag_119\n  tag_56\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3312:3431   */\ntag_118:\n    /* \"#utility.yul\":3470:3471   */\n  0x00\n    /* \"#utility.yul\":3495:3559   */\n  tag_120\n    /* \"#utility.yul\":3551:3558   */\n  dup7\n    /* \"#utility.yul\":3542:3548   */\n  dup3\n    /* \"#utility.yul\":3531:3540   */\n  dup8\n    /* \"#utility.yul\":3527:3549   */\n  add\n    /* \"#utility.yul\":3495:3559   */\n  tag_61\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3485:3559   */\n  swap4\n  pop\n    /* \"#utility.yul\":3441:3569   */\n  pop\n    /* \"#utility.yul\":3608:3610   */\n  0x20\n    /* \"#utility.yul\":3634:3698   */\n  tag_121\n    /* \"#utility.yul\":3690:3697   */\n  dup7\n    /* \"#utility.yul\":3681:3687   */\n  dup3\n    /* \"#utility.yul\":3670:3679   */\n  dup8\n    /* \"#utility.yul\":3666:3688   */\n  add\n    /* \"#utility.yul\":3634:3698   */\n  tag_61\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3624:3698   */\n  swap3\n  pop\n    /* \"#utility.yul\":3579:3708   */\n  pop\n    /* \"#utility.yul\":3768:3770   */\n  0x40\n    /* \"#utility.yul\":3757:3766   */\n  dup5\n    /* \"#utility.yul\":3753:3771   */\n  add\n    /* \"#utility.yul\":3747:3772   */\n  mload\n    /* \"#utility.yul\":3799:3817   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3791:3797   */\n  dup2\n    /* \"#utility.yul\":3788:3818   */\n  gt\n    /* \"#utility.yul\":3785:3902   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":3821:3900   */\n  tag_123\n  tag_57\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3785:3902   */\ntag_122:\n    /* \"#utility.yul\":3926:3999   */\n  tag_124\n    /* \"#utility.yul\":3991:3998   */\n  dup7\n    /* \"#utility.yul\":3982:3988   */\n  dup3\n    /* \"#utility.yul\":3971:3980   */\n  dup8\n    /* \"#utility.yul\":3967:3989   */\n  add\n    /* \"#utility.yul\":3926:3999   */\n  tag_71\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3916:3999   */\n  swap2\n  pop\n    /* \"#utility.yul\":3718:4009   */\n  pop\n    /* \"#utility.yul\":3182:4016   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4022:4140   */\ntag_72:\n    /* \"#utility.yul\":4109:4133   */\n  tag_126\n    /* \"#utility.yul\":4127:4132   */\n  dup2\n    /* \"#utility.yul\":4109:4133   */\n  tag_59\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4104:4107   */\n  dup3\n    /* \"#utility.yul\":4097:4134   */\n  mstore\n    /* \"#utility.yul\":4022:4140   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4146:4368   */\ntag_13:\n    /* \"#utility.yul\":4239:4243   */\n  0x00\n    /* \"#utility.yul\":4277:4279   */\n  0x20\n    /* \"#utility.yul\":4266:4275   */\n  dup3\n    /* \"#utility.yul\":4262:4280   */\n  add\n    /* \"#utility.yul\":4254:4280   */\n  swap1\n  pop\n    /* \"#utility.yul\":4290:4361   */\n  tag_128\n    /* \"#utility.yul\":4358:4359   */\n  0x00\n    /* \"#utility.yul\":4347:4356   */\n  dup4\n    /* \"#utility.yul\":4343:4360   */\n  add\n    /* \"#utility.yul\":4334:4340   */\n  dup5\n    /* \"#utility.yul\":4290:4361   */\n  tag_72\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4146:4368   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4374:4472   */\ntag_73:\n    /* \"#utility.yul\":4425:4431   */\n  0x00\n    /* \"#utility.yul\":4459:4464   */\n  dup2\n    /* \"#utility.yul\":4453:4465   */\n  mload\n    /* \"#utility.yul\":4443:4465   */\n  swap1\n  pop\n    /* \"#utility.yul\":4374:4472   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4478:4625   */\ntag_74:\n    /* \"#utility.yul\":4579:4590   */\n  0x00\n    /* \"#utility.yul\":4616:4619   */\n  dup2\n    /* \"#utility.yul\":4601:4619   */\n  swap1\n  pop\n    /* \"#utility.yul\":4478:4625   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4631:5017   */\ntag_75:\n    /* \"#utility.yul\":4735:4738   */\n  0x00\n    /* \"#utility.yul\":4763:4801   */\n  tag_132\n    /* \"#utility.yul\":4795:4800   */\n  dup3\n    /* \"#utility.yul\":4763:4801   */\n  tag_73\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4817:4905   */\n  tag_133\n    /* \"#utility.yul\":4898:4904   */\n  dup2\n    /* \"#utility.yul\":4893:4896   */\n  dup6\n    /* \"#utility.yul\":4817:4905   */\n  tag_74\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4810:4905   */\n  swap4\n  pop\n    /* \"#utility.yul\":4914:4979   */\n  tag_134\n    /* \"#utility.yul\":4972:4978   */\n  dup2\n    /* \"#utility.yul\":4967:4970   */\n  dup6\n    /* \"#utility.yul\":4960:4964   */\n  0x20\n    /* \"#utility.yul\":4953:4958   */\n  dup7\n    /* \"#utility.yul\":4949:4965   */\n  add\n    /* \"#utility.yul\":4914:4979   */\n  tag_69\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5004:5010   */\n  dup1\n    /* \"#utility.yul\":4999:5002   */\n  dup5\n    /* \"#utility.yul\":4995:5011   */\n  add\n    /* \"#utility.yul\":4988:5011   */\n  swap2\n  pop\n    /* \"#utility.yul\":4739:5017   */\n  pop\n    /* \"#utility.yul\":4631:5017   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5023:5294   */\ntag_35:\n    /* \"#utility.yul\":5153:5156   */\n  0x00\n    /* \"#utility.yul\":5175:5268   */\n  tag_136\n    /* \"#utility.yul\":5264:5267   */\n  dup3\n    /* \"#utility.yul\":5255:5261   */\n  dup5\n    /* \"#utility.yul\":5175:5268   */\n  tag_75\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5168:5268   */\n  swap2\n  pop\n    /* \"#utility.yul\":5285:5288   */\n  dup2\n    /* \"#utility.yul\":5278:5288   */\n  swap1\n  pop\n    /* \"#utility.yul\":5023:5294   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/VolumProxy.sol\":250:1467  contract VolumProxy is ERC1967Upgrade, ERC1967Proxy, Ownable {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/VolumProxy.sol\":250:1467  contract VolumProxy is ERC1967Upgrade, ERC1967Proxy, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xaaf10f42\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x2031a346\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x396f7b23\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x47757fb6\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      tag_15\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2658  _fallback */\n      tag_16\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      jump\t// in\n    tag_15:\n        /* \"contracts/VolumProxy.sol\":250:1467  contract VolumProxy is ERC1967Upgrade, ERC1967Proxy, Ownable {... */\n      stop\n        /* \"contracts/VolumProxy.sol\":961:1261  function approveNewImplementation() public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/VolumProxy.sol\":318:354  address public pendingImplementation */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/VolumProxy.sol\":655:953  function proposeNewImplementation(address newImplementation) public onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/VolumProxy.sol\":1269:1374  function getImplementation() public view returns (address) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      tag_46\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      tag_47\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2396  _implementation */\n      tag_48\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      jump\t// in\n    tag_47:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2380  _delegate */\n      tag_49\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      jump\t// in\n    tag_46:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"contracts/VolumProxy.sol\":961:1261  function approveNewImplementation() public onlyOwner {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_51:\n        /* \"contracts/VolumProxy.sol\":1066:1067  0 */\n      0x00\n        /* \"contracts/VolumProxy.sol\":1033:1068  pendingImplementation != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/VolumProxy.sol\":1033:1054  pendingImplementation */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/VolumProxy.sol\":1033:1068  pendingImplementation != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/VolumProxy.sol\":1025:1103  require(pendingImplementation != address(0), \"No new implementation proposed\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"contracts/VolumProxy.sol\":1114:1147  _upgradeTo(pendingImplementation) */\n      tag_57\n        /* \"contracts/VolumProxy.sol\":1125:1146  pendingImplementation */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/VolumProxy.sol\":1114:1124  _upgradeTo */\n      tag_58\n        /* \"contracts/VolumProxy.sol\":1114:1147  _upgradeTo(pendingImplementation) */\n      jump\t// in\n    tag_57:\n        /* \"contracts/VolumProxy.sol\":1186:1207  pendingImplementation */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/VolumProxy.sol\":1163:1208  ImplementationUpgraded(pendingImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x51ea6ffdc9909d5ca341259f7221902e0676585d833e2bb21fa923c85e862886\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/VolumProxy.sol\":1251:1252  0 */\n      0x00\n        /* \"contracts/VolumProxy.sol\":1219:1240  pendingImplementation */\n      0x01\n      0x00\n        /* \"contracts/VolumProxy.sol\":1219:1253  pendingImplementation = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/VolumProxy.sol\":961:1261  function approveNewImplementation() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/VolumProxy.sol\":318:354  address public pendingImplementation */\n    tag_22:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/VolumProxy.sol\":655:953  function proposeNewImplementation(address newImplementation) public onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_60:\n        /* \"contracts/VolumProxy.sol\":781:782  0 */\n      0x00\n        /* \"contracts/VolumProxy.sol\":752:783  newImplementation != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/VolumProxy.sol\":752:769  newImplementation */\n      dup2\n        /* \"contracts/VolumProxy.sol\":752:783  newImplementation != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/VolumProxy.sol\":744:833  require(newImplementation != address(0), \"New implementation cannot be the zero address\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"contracts/VolumProxy.sol\":868:885  newImplementation */\n      dup1\n        /* \"contracts/VolumProxy.sol\":844:865  pendingImplementation */\n      0x01\n      0x00\n        /* \"contracts/VolumProxy.sol\":844:885  pendingImplementation = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/VolumProxy.sol\":927:944  newImplementation */\n      dup1\n        /* \"contracts/VolumProxy.sol\":901:945  NewImplementationProposed(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8309d39e125ec00aa8f0a092ca3393019d7384202aff703de066548b28dd76ad\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/VolumProxy.sol\":655:953  function proposeNewImplementation(address newImplementation) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_66\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/VolumProxy.sol\":1269:1374  function getImplementation() public view returns (address) {... */\n    tag_39:\n        /* \"contracts/VolumProxy.sol\":1319:1326  address */\n      0x00\n        /* \"contracts/VolumProxy.sol\":1346:1366  _getImplementation() */\n      tag_72\n        /* \"contracts/VolumProxy.sol\":1346:1364  _getImplementation */\n      tag_73\n        /* \"contracts/VolumProxy.sol\":1346:1366  _getImplementation() */\n      jump\t// in\n    tag_72:\n        /* \"contracts/VolumProxy.sol\":1339:1366  return _getImplementation() */\n      swap1\n      pop\n        /* \"contracts/VolumProxy.sol\":1269:1374  function getImplementation() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_77\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_69\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1581:1713  function _implementation() internal view virtual override returns (address) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1648:1655  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1674:1706  ERC1967Utils.getImplementation() */\n      tag_81\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1674:1704  ERC1967Utils.getImplementation */\n      tag_82\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1674:1706  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1667:1706  return ERC1967Utils.getImplementation() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1581:1713  function _implementation() internal view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":949:1844  function _delegate(address implementation) internal virtual {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1287:1301  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1284:1285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1281:1282  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1268:1302  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1501:1502  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1498:1499  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1482:1496  calldatasize() */\n      calldatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1479:1480  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1463:1477  implementation */\n      dup5\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1456:1461  gas() */\n      gas\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1443:1503  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1577:1593  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1574:1575  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1571:1572  0 */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1556:1594  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1615:1621  result */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1687:1688  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n      dup2\n      eq\n      tag_85\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1797:1813  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1794:1795  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1787:1814  return(0, returndatasize()) */\n      return\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1717:1733  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1714:1715  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Proxy.sol\":1707:1734  revert(0, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_90\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1680:1832  function _upgradeTo(address newImplementation) internal {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1746:1783  _setImplementation(newImplementation) */\n      tag_94\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1765:1782  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1746:1764  _setImplementation */\n      tag_95\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1746:1783  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1807:1824  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1798:1825  Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1680:1832  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1091:1231  function _getImplementation() internal view returns (address) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1144:1151  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1170:1218  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      tag_98\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":946:1012  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1197:1217  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1170:1196  StorageSlot.getAddressSlot */\n      tag_99\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1170:1218  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1170:1224  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1163:1224  return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1091:1231  function _getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2009:2016  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2082  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_101\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2062:2081  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2061  StorageSlot.getAddressSlot */\n      tag_99\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2082  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2028:2088  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1322:1574  function _setImplementation(address newImplementation) private {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1403:1433  _isContract(newImplementation) */\n      tag_104\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1415:1432  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1403:1414  _isContract */\n      tag_105\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1403:1433  _isContract(newImplementation) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1395:1483  require(_isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1550:1567  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1493:1541  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      tag_109\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":946:1012  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1520:1540  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1493:1519  StorageSlot.getAddressSlot */\n      tag_99\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1493:1541  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1493:1547  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1493:1567  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1322:1574  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1745:1766  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1854:1858  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1844:1858  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3400:3591  function _isContract(address account) internal view returns (bool) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3461:3465  bool */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3477:3489  uint256 size */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3542:3549  account */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3530:3550  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3522:3550  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3583:3584  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3576:3580  size */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3576:3584  size > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3569:3584  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":3400:3591  function _isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_112:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_113:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_130\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_112\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_114:\n        /* \"#utility.yul\":328:352   */\n      tag_132\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_113\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_24:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_134\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_114\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_116:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_118:\n        /* \"#utility.yul\":993:1017   */\n      tag_139\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_113\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_140\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_140:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_119:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_142\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_118\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_28:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_145\n      tag_116\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1269:1388   */\n    tag_144:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_146\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_119\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1697   */\n    tag_120:\n        /* \"#utility.yul\":1612:1623   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup3\n        /* \"#utility.yul\":1641:1644   */\n      dup3\n        /* \"#utility.yul\":1634:1653   */\n      mstore\n        /* \"#utility.yul\":1686:1690   */\n      0x20\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1677:1691   */\n      add\n        /* \"#utility.yul\":1662:1691   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1883   */\n    tag_121:\n        /* \"#utility.yul\":1843:1875   */\n      0x4e6f206e657720696d706c656d656e746174696f6e2070726f706f7365640000\n        /* \"#utility.yul\":1839:1840   */\n      0x00\n        /* \"#utility.yul\":1831:1837   */\n      dup3\n        /* \"#utility.yul\":1827:1841   */\n      add\n        /* \"#utility.yul\":1820:1876   */\n      mstore\n        /* \"#utility.yul\":1703:1883   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1889:2255   */\n    tag_122:\n        /* \"#utility.yul\":2031:2034   */\n      0x00\n        /* \"#utility.yul\":2052:2119   */\n      tag_150\n        /* \"#utility.yul\":2116:2118   */\n      0x1e\n        /* \"#utility.yul\":2111:2114   */\n      dup4\n        /* \"#utility.yul\":2052:2119   */\n      tag_120\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2045:2119   */\n      swap2\n      pop\n        /* \"#utility.yul\":2128:2221   */\n      tag_151\n        /* \"#utility.yul\":2217:2220   */\n      dup3\n        /* \"#utility.yul\":2128:2221   */\n      tag_121\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2246:2248   */\n      0x20\n        /* \"#utility.yul\":2241:2244   */\n      dup3\n        /* \"#utility.yul\":2237:2249   */\n      add\n        /* \"#utility.yul\":2230:2249   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2261:2680   */\n    tag_56:\n        /* \"#utility.yul\":2427:2431   */\n      0x00\n        /* \"#utility.yul\":2465:2467   */\n      0x20\n        /* \"#utility.yul\":2454:2463   */\n      dup3\n        /* \"#utility.yul\":2450:2468   */\n      add\n        /* \"#utility.yul\":2442:2468   */\n      swap1\n      pop\n        /* \"#utility.yul\":2514:2523   */\n      dup2\n        /* \"#utility.yul\":2508:2512   */\n      dup2\n        /* \"#utility.yul\":2504:2524   */\n      sub\n        /* \"#utility.yul\":2500:2501   */\n      0x00\n        /* \"#utility.yul\":2489:2498   */\n      dup4\n        /* \"#utility.yul\":2485:2502   */\n      add\n        /* \"#utility.yul\":2478:2525   */\n      mstore\n        /* \"#utility.yul\":2542:2673   */\n      tag_153\n        /* \"#utility.yul\":2668:2672   */\n      dup2\n        /* \"#utility.yul\":2542:2673   */\n      tag_122\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2534:2673   */\n      swap1\n      pop\n        /* \"#utility.yul\":2261:2680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2686:2918   */\n    tag_123:\n        /* \"#utility.yul\":2826:2860   */\n      0x4e657720696d706c656d656e746174696f6e2063616e6e6f7420626520746865\n        /* \"#utility.yul\":2822:2823   */\n      0x00\n        /* \"#utility.yul\":2814:2820   */\n      dup3\n        /* \"#utility.yul\":2810:2824   */\n      add\n        /* \"#utility.yul\":2803:2861   */\n      mstore\n        /* \"#utility.yul\":2895:2910   */\n      0x207a65726f206164647265737300000000000000000000000000000000000000\n        /* \"#utility.yul\":2890:2892   */\n      0x20\n        /* \"#utility.yul\":2882:2888   */\n      dup3\n        /* \"#utility.yul\":2878:2893   */\n      add\n        /* \"#utility.yul\":2871:2911   */\n      mstore\n        /* \"#utility.yul\":2686:2918   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2924:3290   */\n    tag_124:\n        /* \"#utility.yul\":3066:3069   */\n      0x00\n        /* \"#utility.yul\":3087:3154   */\n      tag_156\n        /* \"#utility.yul\":3151:3153   */\n      0x2d\n        /* \"#utility.yul\":3146:3149   */\n      dup4\n        /* \"#utility.yul\":3087:3154   */\n      tag_120\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3080:3154   */\n      swap2\n      pop\n        /* \"#utility.yul\":3163:3256   */\n      tag_157\n        /* \"#utility.yul\":3252:3255   */\n      dup3\n        /* \"#utility.yul\":3163:3256   */\n      tag_123\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":3281:3283   */\n      0x40\n        /* \"#utility.yul\":3276:3279   */\n      dup3\n        /* \"#utility.yul\":3272:3284   */\n      add\n        /* \"#utility.yul\":3265:3284   */\n      swap1\n      pop\n        /* \"#utility.yul\":2924:3290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3296:3715   */\n    tag_64:\n        /* \"#utility.yul\":3462:3466   */\n      0x00\n        /* \"#utility.yul\":3500:3502   */\n      0x20\n        /* \"#utility.yul\":3489:3498   */\n      dup3\n        /* \"#utility.yul\":3485:3503   */\n      add\n        /* \"#utility.yul\":3477:3503   */\n      swap1\n      pop\n        /* \"#utility.yul\":3549:3558   */\n      dup2\n        /* \"#utility.yul\":3543:3547   */\n      dup2\n        /* \"#utility.yul\":3539:3559   */\n      sub\n        /* \"#utility.yul\":3535:3536   */\n      0x00\n        /* \"#utility.yul\":3524:3533   */\n      dup4\n        /* \"#utility.yul\":3520:3537   */\n      add\n        /* \"#utility.yul\":3513:3560   */\n      mstore\n        /* \"#utility.yul\":3577:3708   */\n      tag_159\n        /* \"#utility.yul\":3703:3707   */\n      dup2\n        /* \"#utility.yul\":3577:3708   */\n      tag_124\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":3569:3708   */\n      swap1\n      pop\n        /* \"#utility.yul\":3296:3715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3721:3953   */\n    tag_125:\n        /* \"#utility.yul\":3861:3895   */\n      0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n        /* \"#utility.yul\":3857:3858   */\n      0x00\n        /* \"#utility.yul\":3849:3855   */\n      dup3\n        /* \"#utility.yul\":3845:3859   */\n      add\n        /* \"#utility.yul\":3838:3896   */\n      mstore\n        /* \"#utility.yul\":3930:3945   */\n      0x6f74206120636f6e747261637400000000000000000000000000000000000000\n        /* \"#utility.yul\":3925:3927   */\n      0x20\n        /* \"#utility.yul\":3917:3923   */\n      dup3\n        /* \"#utility.yul\":3913:3928   */\n      add\n        /* \"#utility.yul\":3906:3946   */\n      mstore\n        /* \"#utility.yul\":3721:3953   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3959:4325   */\n    tag_126:\n        /* \"#utility.yul\":4101:4104   */\n      0x00\n        /* \"#utility.yul\":4122:4189   */\n      tag_162\n        /* \"#utility.yul\":4186:4188   */\n      0x2d\n        /* \"#utility.yul\":4181:4184   */\n      dup4\n        /* \"#utility.yul\":4122:4189   */\n      tag_120\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4115:4189   */\n      swap2\n      pop\n        /* \"#utility.yul\":4198:4291   */\n      tag_163\n        /* \"#utility.yul\":4287:4290   */\n      dup3\n        /* \"#utility.yul\":4198:4291   */\n      tag_125\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":4316:4318   */\n      0x40\n        /* \"#utility.yul\":4311:4314   */\n      dup3\n        /* \"#utility.yul\":4307:4319   */\n      add\n        /* \"#utility.yul\":4300:4319   */\n      swap1\n      pop\n        /* \"#utility.yul\":3959:4325   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4331:4750   */\n    tag_108:\n        /* \"#utility.yul\":4497:4501   */\n      0x00\n        /* \"#utility.yul\":4535:4537   */\n      0x20\n        /* \"#utility.yul\":4524:4533   */\n      dup3\n        /* \"#utility.yul\":4520:4538   */\n      add\n        /* \"#utility.yul\":4512:4538   */\n      swap1\n      pop\n        /* \"#utility.yul\":4584:4593   */\n      dup2\n        /* \"#utility.yul\":4578:4582   */\n      dup2\n        /* \"#utility.yul\":4574:4594   */\n      sub\n        /* \"#utility.yul\":4570:4571   */\n      0x00\n        /* \"#utility.yul\":4559:4568   */\n      dup4\n        /* \"#utility.yul\":4555:4572   */\n      add\n        /* \"#utility.yul\":4548:4595   */\n      mstore\n        /* \"#utility.yul\":4612:4743   */\n      tag_165\n        /* \"#utility.yul\":4738:4742   */\n      dup2\n        /* \"#utility.yul\":4612:4743   */\n      tag_126\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":4604:4743   */\n      swap1\n      pop\n        /* \"#utility.yul\":4331:4750   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122063855b52c18d1c8acb291a6f1223f40cc76b01c20f0852984d40f9eb7d3d2c6564736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1165": {
									"entryPoint": null,
									"id": 1165,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_203": {
									"entryPoint": null,
									"id": 203,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkNonPayable_687": {
									"entryPoint": 904,
									"id": 687,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_986": {
									"entryPoint": 1130,
									"id": 986,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_473": {
									"entryPoint": 552,
									"id": 473,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 359,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_906": {
									"entryPoint": 764,
									"id": 906,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1049": {
									"entryPoint": 965,
									"id": 1049,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@upgradeToAndCall_507": {
									"entryPoint": 219,
									"id": 507,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_946": {
									"entryPoint": 974,
									"id": 946,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr_fromMemory": {
									"entryPoint": 1561,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr_fromMemory": {
									"entryPoint": 1635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 1685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 1849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1519,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1337,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1313,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1317,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1212,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5297:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "934:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "951:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1057:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1074:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1077:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1067:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1067:12:12"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "968:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1139:54:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1149:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1167:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1163:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1183:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1179:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1122:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1132:6:12",
														"type": ""
													}
												],
												"src": "1091:102:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1227:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1247:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:88:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1237:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1344:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1368:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:15:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1358:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1199:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1428:238:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1438:58:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1490:4:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1468:21:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1468:27:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1456:40:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1442:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1607:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1609:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1609:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1550:10:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1562:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1547:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1547:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1586:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1583:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1583:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1544:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:62:12"
															},
															"nodeType": "YulIf",
															"src": "1541:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1649:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:22:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1638:22:12"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1414:6:12",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1422:4:12",
														"type": ""
													}
												],
												"src": "1385:281:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1713:88:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1723:30:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1733:18:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1733:20:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1782:6:12"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1790:4:12"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1762:19:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1762:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1762:33:12"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1697:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1706:6:12",
														"type": ""
													}
												],
												"src": "1672:129:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1873:241:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1978:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1980:16:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1980:18:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1950:6:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1958:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1947:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1947:30:12"
															},
															"nodeType": "YulIf",
															"src": "1944:56:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2010:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2040:6:12"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2018:21:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:29:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2010:4:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2084:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2096:4:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2102:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:15:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2084:4:12"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1857:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1868:4:12",
														"type": ""
													}
												],
												"src": "1807:307:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2182:184:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2192:10:12",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2201:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2196:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2261:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2286:3:12"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2291:1:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2282:3:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2282:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2305:3:12"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2310:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2301:3:12"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2301:11:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2295:5:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2295:18:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:39:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2222:1:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2225:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2219:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2219:13:12"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2233:19:12",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2235:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2244:1:12"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2247:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2240:3:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2240:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2235:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2215:3:12",
																"statements": []
															},
															"src": "2211:113:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2344:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2349:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2340:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2340:16:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2358:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2333:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2333:27:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2333:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2164:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2169:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2174:6:12",
														"type": ""
													}
												],
												"src": "2120:246:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2466:338:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2476:74:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2542:6:12"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2501:40:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2501:48:12"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2485:15:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2485:65:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2476:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2566:5:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2573:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2559:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:21:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2559:21:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2589:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2604:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2611:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2600:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2600:16:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2593:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2654:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2656:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2656:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2656:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2635:3:12"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2640:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2631:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2631:16:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2649:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2628:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2628:25:12"
															},
															"nodeType": "YulIf",
															"src": "2625:112:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2781:3:12"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2786:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2791:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2746:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2746:52:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2746:52:12"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2439:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2444:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2452:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2460:5:12",
														"type": ""
													}
												],
												"src": "2372:432:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2895:281:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2944:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2946:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2946:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2946:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2923:6:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2931:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2919:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2919:17:12"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2938:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2915:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2915:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2908:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:35:12"
															},
															"nodeType": "YulIf",
															"src": "2905:122:12"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3036:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3056:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3050:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3050:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3040:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3072:98:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3143:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3151:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3139:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3139:17:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3158:6:12"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3166:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3081:57:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3081:89:12"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3072:5:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2873:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2881:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2889:5:12",
														"type": ""
													}
												],
												"src": "2823:353:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3302:714:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3348:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3350:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3350:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3350:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3323:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3332:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3319:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3319:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3344:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3315:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3315:32:12"
															},
															"nodeType": "YulIf",
															"src": "3312:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "3441:128:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3456:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3470:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3460:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3485:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3531:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3542:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3527:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3527:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3551:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3495:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3495:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3485:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3579:129:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3594:16:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3608:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3598:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3624:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3670:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3681:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3666:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3666:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3690:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3634:31:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3624:6:12"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3718:291:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3733:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3757:9:12"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3768:2:12",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3753:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3753:18:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3747:5:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3747:25:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3737:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3819:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3821:77:12"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3821:79:12"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3821:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3791:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3799:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3788:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3788:30:12"
																	},
																	"nodeType": "YulIf",
																	"src": "3785:117:12"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3916:83:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3971:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3982:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3967:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3967:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3991:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3926:40:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3926:73:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3916:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3256:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3267:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3279:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3287:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3295:6:12",
														"type": ""
													}
												],
												"src": "3182:834:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4087:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4104:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4127:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4109:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4109:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4097:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4097:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4097:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4075:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4082:3:12",
														"type": ""
													}
												],
												"src": "4022:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4244:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4254:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4266:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4277:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4262:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4262:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4254:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4334:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4347:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4358:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4343:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4343:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4290:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4290:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4290:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4216:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4228:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4239:4:12",
														"type": ""
													}
												],
												"src": "4146:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4432:40:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4443:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4459:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4453:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4453:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4443:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4415:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4425:6:12",
														"type": ""
													}
												],
												"src": "4374:98:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4591:34:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4601:18:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4616:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4601:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4563:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4568:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4579:11:12",
														"type": ""
													}
												],
												"src": "4478:147:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4739:278:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4749:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4795:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4763:31:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4763:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4753:6:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4810:95:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4893:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4898:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4817:75:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4817:88:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4810:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4953:5:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4960:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4949:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4949:16:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4967:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4972:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4914:34:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4914:65:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4914:65:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4988:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4999:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5004:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4995:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4995:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4988:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4720:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4727:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4735:3:12",
														"type": ""
													}
												],
												"src": "4631:386:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5157:137:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5168:100:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5255:6:12"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5264:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5175:79:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5175:93:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5168:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5278:10:12",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5285:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5278:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5136:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5142:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5153:3:12",
														"type": ""
													}
												],
												"src": "5023:271:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200124938038062001249833981810160405281019062000036919062000695565b8183826200004b8282620000db60201b60201c565b50505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000c0575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000b791906200071e565b60405180910390fd5b620000d1816200016760201b60201c565b505050506200079b565b620000ec826200022860201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f8151111562000152576200014b8282620002fc60201b60201c565b5062000163565b620001626200038860201b60201c565b5b5050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b036200028657806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016200027d91906200071e565b60405180910390fd5b80620002ba7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b620003c560201b60201c565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff168460405162000327919062000783565b5f60405180830381855af49150503d805f811462000361576040519150601f19603f3d011682016040523d82523d5f602084013e62000366565b606091505b50915091506200037e858383620003ce60201b60201c565b9250505092915050565b5f341115620003c3576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f819050919050565b606082620003ed57620003e7826200046a60201b60201c565b62000462565b5f82511480156200041457505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156200045957836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016200045091906200071e565b60405180910390fd5b81905062000463565b5b9392505050565b5f815111156200047d5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620004eb82620004c0565b9050919050565b620004fd81620004df565b811462000508575f80fd5b50565b5f815190506200051b81620004f2565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620005718262000529565b810181811067ffffffffffffffff8211171562000593576200059262000539565b5b80604052505050565b5f620005a7620004af565b9050620005b5828262000566565b919050565b5f67ffffffffffffffff821115620005d757620005d662000539565b5b620005e28262000529565b9050602081019050919050565b5f5b838110156200060e578082015181840152602081019050620005f1565b5f8484015250505050565b5f6200062f6200062984620005ba565b6200059c565b9050828152602081018484840111156200064e576200064d62000525565b5b6200065b848285620005ef565b509392505050565b5f82601f8301126200067a576200067962000521565b5b81516200068c84826020860162000619565b91505092915050565b5f805f60608486031215620006af57620006ae620004b8565b5b5f620006be868287016200050b565b9350506020620006d1868287016200050b565b925050604084015167ffffffffffffffff811115620006f557620006f4620004bc565b5b620007038682870162000663565b9150509250925092565b6200071881620004df565b82525050565b5f602082019050620007335f8301846200070d565b92915050565b5f81519050919050565b5f81905092915050565b5f620007598262000739565b62000765818562000743565b935062000777818560208601620005ef565b80840191505092915050565b5f6200079082846200074d565b915081905092915050565b610aa080620007a95f395ff3fe608060405260043610610073575f3560e01c8063715018a61161004d578063715018a6146100ec5780638da5cb5b14610102578063aaf10f421461012c578063f2fde38b146101565761007a565b80632031a34614610084578063396f7b231461009a57806347757fb6146100c45761007a565b3661007a57005b61008261017e565b005b34801561008f575f80fd5b50610098610190565b005b3480156100a5575f80fd5b506100ae6102f7565b6040516100bb9190610864565b60405180910390f35b3480156100cf575f80fd5b506100ea60048036038101906100e591906108ab565b61031c565b005b3480156100f7575f80fd5b50610100610418565b005b34801561010d575f80fd5b5061011661042b565b6040516101239190610864565b60405180910390f35b348015610137575f80fd5b50610140610452565b60405161014d9190610864565b60405180910390f35b348015610161575f80fd5b5061017c600480360381019061017791906108ab565b610460565b005b61018e6101896104e4565b6104f2565b565b610198610511565b5f73ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610930565b60405180910390fd5b61025160015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610598565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f51ea6ffdc9909d5ca341259f7221902e0676585d833e2bb21fa923c85e86288660405160405180910390a25f60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610324610511565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610392576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610389906109be565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f8309d39e125ec00aa8f0a092ca3393019d7384202aff703de066548b28dd76ad60405160405180910390a250565b610420610511565b6104295f6105e7565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f61045b6106a8565b905090565b610468610511565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104d8575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104cf9190610864565b60405180910390fd5b6104e1816105e7565b50565b5f6104ed6106fb565b905090565b365f80375f80365f845af43d5f803e805f811461050d573d5ff35b3d5ffd5b61051961074e565b73ffffffffffffffffffffffffffffffffffffffff1661053761042b565b73ffffffffffffffffffffffffffffffffffffffff16146105965761055a61074e565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161058d9190610864565b60405180910390fd5b565b6105a181610755565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6106d47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61080b565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f6107277f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61080b565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f33905090565b61075e81610814565b61079d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490610a4c565b60405180910390fd5b806107c97f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61080b565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f819050919050565b5f80823b90505f8111915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61084e82610825565b9050919050565b61085e81610844565b82525050565b5f6020820190506108775f830184610855565b92915050565b5f80fd5b61088a81610844565b8114610894575f80fd5b50565b5f813590506108a581610881565b92915050565b5f602082840312156108c0576108bf61087d565b5b5f6108cd84828501610897565b91505092915050565b5f82825260208201905092915050565b7f4e6f206e657720696d706c656d656e746174696f6e2070726f706f73656400005f82015250565b5f61091a601e836108d6565b9150610925826108e6565b602082019050919050565b5f6020820190508181035f8301526109478161090e565b9050919050565b7f4e657720696d706c656d656e746174696f6e2063616e6e6f74206265207468655f8201527f207a65726f206164647265737300000000000000000000000000000000000000602082015250565b5f6109a8602d836108d6565b91506109b38261094e565b604082019050919050565b5f6020820190508181035f8301526109d58161099c565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e5f8201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b5f610a36602d836108d6565b9150610a41826109dc565b604082019050919050565b5f6020820190508181035f830152610a6381610a2a565b905091905056fea264697066735822122063855b52c18d1c8acb291a6f1223f40cc76b01c20f0852984d40f9eb7d3d2c6564736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1249 CODESIZE SUB DUP1 PUSH3 0x1249 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x695 JUMP JUMPDEST DUP2 DUP4 DUP3 PUSH3 0x4B DUP3 DUP3 PUSH3 0xDB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xC0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xB7 SWAP2 SWAP1 PUSH3 0x71E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xD1 DUP2 PUSH3 0x167 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0x79B JUMP JUMPDEST PUSH3 0xEC DUP3 PUSH3 0x228 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH3 0x152 JUMPI PUSH3 0x14B DUP3 DUP3 PUSH3 0x2FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x163 JUMP JUMPDEST PUSH3 0x162 PUSH3 0x388 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH3 0x286 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x27D SWAP2 SWAP1 PUSH3 0x71E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH3 0x2BA PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH3 0x3C5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH3 0x327 SWAP2 SWAP1 PUSH3 0x783 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH3 0x361 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x366 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH3 0x37E DUP6 DUP4 DUP4 PUSH3 0x3CE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH3 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH3 0x3ED JUMPI PUSH3 0x3E7 DUP3 PUSH3 0x46A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x462 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH3 0x414 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH3 0x459 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x450 SWAP2 SWAP1 PUSH3 0x71E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH3 0x463 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH3 0x47D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x4EB DUP3 PUSH3 0x4C0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4FD DUP2 PUSH3 0x4DF JUMP JUMPDEST DUP2 EQ PUSH3 0x508 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x51B DUP2 PUSH3 0x4F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x571 DUP3 PUSH3 0x529 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x593 JUMPI PUSH3 0x592 PUSH3 0x539 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x5A7 PUSH3 0x4AF JUMP JUMPDEST SWAP1 POP PUSH3 0x5B5 DUP3 DUP3 PUSH3 0x566 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x5D7 JUMPI PUSH3 0x5D6 PUSH3 0x539 JUMP JUMPDEST JUMPDEST PUSH3 0x5E2 DUP3 PUSH3 0x529 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x60E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5F1 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x62F PUSH3 0x629 DUP5 PUSH3 0x5BA JUMP JUMPDEST PUSH3 0x59C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x64E JUMPI PUSH3 0x64D PUSH3 0x525 JUMP JUMPDEST JUMPDEST PUSH3 0x65B DUP5 DUP3 DUP6 PUSH3 0x5EF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x67A JUMPI PUSH3 0x679 PUSH3 0x521 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x68C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x619 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x6AF JUMPI PUSH3 0x6AE PUSH3 0x4B8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x6BE DUP7 DUP3 DUP8 ADD PUSH3 0x50B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x6D1 DUP7 DUP3 DUP8 ADD PUSH3 0x50B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6F5 JUMPI PUSH3 0x6F4 PUSH3 0x4BC JUMP JUMPDEST JUMPDEST PUSH3 0x703 DUP7 DUP3 DUP8 ADD PUSH3 0x663 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x718 DUP2 PUSH3 0x4DF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x733 PUSH0 DUP4 ADD DUP5 PUSH3 0x70D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x759 DUP3 PUSH3 0x739 JUMP JUMPDEST PUSH3 0x765 DUP2 DUP6 PUSH3 0x743 JUMP JUMPDEST SWAP4 POP PUSH3 0x777 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x5EF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x790 DUP3 DUP5 PUSH3 0x74D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAA0 DUP1 PUSH3 0x7A9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x73 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xAAF10F42 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x156 JUMPI PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH4 0x2031A346 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x396F7B23 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0x47757FB6 EQ PUSH2 0xC4 JUMPI PUSH2 0x7A JUMP JUMPDEST CALLDATASIZE PUSH2 0x7A JUMPI STOP JUMPDEST PUSH2 0x82 PUSH2 0x17E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x98 PUSH2 0x190 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAE PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0x418 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH2 0x42B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18E PUSH2 0x189 PUSH2 0x4E4 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x198 PUSH2 0x511 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E SWAP1 PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x251 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x598 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x51EA6FFDC9909D5CA341259F7221902E0676585D833E2BB21FA923C85E862886 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x324 PUSH2 0x511 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x392 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x389 SWAP1 PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8309D39E125EC00AA8F0A092CA3393019D7384202AFF703DE066548B28DD76AD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x420 PUSH2 0x511 JUMP JUMPDEST PUSH2 0x429 PUSH0 PUSH2 0x5E7 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x45B PUSH2 0x6A8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x468 PUSH2 0x511 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E1 DUP2 PUSH2 0x5E7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x4ED PUSH2 0x6FB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 PUSH0 DUP2 EQ PUSH2 0x50D JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH2 0x519 PUSH2 0x74E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x537 PUSH2 0x42B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x596 JUMPI PUSH2 0x55A PUSH2 0x74E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58D SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x5A1 DUP2 PUSH2 0x755 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6D4 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x80B JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x727 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x80B JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x75E DUP2 PUSH2 0x814 JUMP JUMPDEST PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x7C9 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x80B JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x84E DUP3 PUSH2 0x825 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x85E DUP2 PUSH2 0x844 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x877 PUSH0 DUP4 ADD DUP5 PUSH2 0x855 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x88A DUP2 PUSH2 0x844 JUMP JUMPDEST DUP2 EQ PUSH2 0x894 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8A5 DUP2 PUSH2 0x881 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C0 JUMPI PUSH2 0x8BF PUSH2 0x87D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8CD DUP5 DUP3 DUP6 ADD PUSH2 0x897 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206E657720696D706C656D656E746174696F6E2070726F706F7365640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x91A PUSH1 0x1E DUP4 PUSH2 0x8D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x925 DUP3 PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x947 DUP2 PUSH2 0x90E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E657720696D706C656D656E746174696F6E2063616E6E6F7420626520746865 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F206164647265737300000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9A8 PUSH1 0x2D DUP4 PUSH2 0x8D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x9B3 DUP3 PUSH2 0x94E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9D5 DUP2 PUSH2 0x99C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA36 PUSH1 0x2D DUP4 PUSH2 0x8D6 JUMP JUMPDEST SWAP2 POP PUSH2 0xA41 DUP3 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA63 DUP2 PUSH2 0xA2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x855B52C1 DUP14 SHR DUP11 0xCB 0x29 BYTE PUSH16 0x1223F40CC76B01C20F0852984D40F9EB PUSH30 0x3D2C6564736F6C6343000814003300000000000000000000000000000000 ",
							"sourceMap": "250:1217:11:-:0;;;508:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;626:6;594;602:5;1154:52:3;1184:14;1200:5;1154:29;;;:52;;:::i;:::-;1080:133;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;508:139:11;;;250:1217;;2779:335:5;2870:37;2889:17;2870:18;;;:37;;:::i;:::-;2931:17;2922:27;;;;;;;;;;;;2978:1;2964:4;:11;:15;2960:148;;;2995:53;3024:17;3043:4;2995:28;;;:53;;:::i;:::-;;2960:148;;;3079:18;:16;;;:18;;:::i;:::-;2960:148;2779:335;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2186:281:5:-;2296:1;2263:17;:29;;;:34;2259:119;;2349:17;2320:47;;;;;;;;;;;:::i;:::-;;;;;;;;2259:119;2443:17;2387:47;1327:66;2414:19;;2387:26;;;:47;;:::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;2186:281;:::o;4106:253:8:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;;;:55;;:::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:5:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;1684:190:10:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;4625:582:8:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;;;:19;;:::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:75:12;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:307::-;1868:4;1958:18;1950:6;1947:30;1944:56;;;1980:18;;:::i;:::-;1944:56;2018:29;2040:6;2018:29;:::i;:::-;2010:37;;2102:4;2096;2092:15;2084:23;;1807:307;;;:::o;2120:246::-;2201:1;2211:113;2225:6;2222:1;2219:13;2211:113;;;2310:1;2305:3;2301:11;2295:18;2291:1;2286:3;2282:11;2275:39;2247:2;2244:1;2240:10;2235:15;;2211:113;;;2358:1;2349:6;2344:3;2340:16;2333:27;2182:184;2120:246;;;:::o;2372:432::-;2460:5;2485:65;2501:48;2542:6;2501:48;:::i;:::-;2485:65;:::i;:::-;2476:74;;2573:6;2566:5;2559:21;2611:4;2604:5;2600:16;2649:3;2640:6;2635:3;2631:16;2628:25;2625:112;;;2656:79;;:::i;:::-;2625:112;2746:52;2791:6;2786:3;2781;2746:52;:::i;:::-;2466:338;2372:432;;;;;:::o;2823:353::-;2889:5;2938:3;2931:4;2923:6;2919:17;2915:27;2905:122;;2946:79;;:::i;:::-;2905:122;3056:6;3050:13;3081:89;3166:3;3158:6;3151:4;3143:6;3139:17;3081:89;:::i;:::-;3072:98;;2895:281;2823:353;;;;:::o;3182:834::-;3279:6;3287;3295;3344:2;3332:9;3323:7;3319:23;3315:32;3312:119;;;3350:79;;:::i;:::-;3312:119;3470:1;3495:64;3551:7;3542:6;3531:9;3527:22;3495:64;:::i;:::-;3485:74;;3441:128;3608:2;3634:64;3690:7;3681:6;3670:9;3666:22;3634:64;:::i;:::-;3624:74;;3579:129;3768:2;3757:9;3753:18;3747:25;3799:18;3791:6;3788:30;3785:117;;;3821:79;;:::i;:::-;3785:117;3926:73;3991:7;3982:6;3971:9;3967:22;3926:73;:::i;:::-;3916:83;;3718:291;3182:834;;;;;:::o;4022:118::-;4109:24;4127:5;4109:24;:::i;:::-;4104:3;4097:37;4022:118;;:::o;4146:222::-;4239:4;4277:2;4266:9;4262:18;4254:26;;4290:71;4358:1;4347:9;4343:17;4334:6;4290:71;:::i;:::-;4146:222;;;;:::o;4374:98::-;4425:6;4459:5;4453:12;4443:22;;4374:98;;;:::o;4478:147::-;4579:11;4616:3;4601:18;;4478:147;;;;:::o;4631:386::-;4735:3;4763:38;4795:5;4763:38;:::i;:::-;4817:88;4898:6;4893:3;4817:88;:::i;:::-;4810:95;;4914:65;4972:6;4967:3;4960:4;4953:5;4949:16;4914:65;:::i;:::-;5004:6;4999:3;4995:16;4988:23;;4739:278;4631:386;;;;:::o;5023:271::-;5153:3;5175:93;5264:3;5255:6;5175:93;:::i;:::-;5168:100;;5285:3;5278:10;;5023:271;;;;:::o;250:1217:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1235": {
									"entryPoint": null,
									"id": 1235,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_723": {
									"entryPoint": null,
									"id": 723,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1297,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_699": {
									"entryPoint": 1266,
									"id": 699,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_715": {
									"entryPoint": 382,
									"id": 715,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getImplementation_246": {
									"entryPoint": 1704,
									"id": 246,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_implementation_215": {
									"entryPoint": 1252,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isContract_384": {
									"entryPoint": 2068,
									"id": 384,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_999": {
									"entryPoint": 1870,
									"id": 999,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setImplementation_269": {
									"entryPoint": 1877,
									"id": 269,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1511,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeTo_284": {
									"entryPoint": 1432,
									"id": 284,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approveNewImplementation_1222": {
									"entryPoint": 400,
									"id": 1222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAddressSlot_1049": {
									"entryPoint": 2059,
									"id": 1049,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1231": {
									"entryPoint": 1106,
									"id": 1231,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getImplementation_446": {
									"entryPoint": 1787,
									"id": 446,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1067,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingImplementation_1140": {
									"entryPoint": 759,
									"id": 1140,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@proposeNewImplementation_1191": {
									"entryPoint": 796,
									"id": 1191,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1048,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1120,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0d1f33b3bfd2dba3464feb9057ff18155cc023a705b2b9680ba969ea650eb193_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_476314c299d593396696100b44df122d76c1b7eee385a424afedbf0f97c2fa12_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1f33b3bfd2dba3464feb9057ff18155cc023a705b2b9680ba969ea650eb193__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_476314c299d593396696100b44df122d76c1b7eee385a424afedbf0f97c2fa12__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2173,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1f33b3bfd2dba3464feb9057ff18155cc023a705b2b9680ba969ea650eb193": {
									"entryPoint": 2382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_476314c299d593396696100b44df122d76c1b7eee385a424afedbf0f97c2fa12": {
									"entryPoint": 2278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4753:12",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:12",
														"type": ""
													}
												],
												"src": "7:126:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:12",
														"type": ""
													}
												],
												"src": "139:96:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:12",
														"type": ""
													}
												],
												"src": "241:118:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:12",
														"type": ""
													}
												],
												"src": "365:222:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:35:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "659:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "626:6:12",
														"type": ""
													}
												],
												"src": "593:75:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "763:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "780:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:12:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "963:79:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1020:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:43:12"
															},
															"nodeType": "YulIf",
															"src": "973:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "956:5:12",
														"type": ""
													}
												],
												"src": "920:122:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1100:87:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1110:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:33:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1078:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1086:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1094:5:12",
														"type": ""
													}
												],
												"src": "1048:139:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1259:263:12",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1305:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:12"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:12"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:32:12"
															},
															"nodeType": "YulIf",
															"src": "1269:119:12"
														},
														{
															"nodeType": "YulBlock",
															"src": "1398:117:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:12",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1442:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:12"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1229:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1240:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1252:6:12",
														"type": ""
													}
												],
												"src": "1193:329:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1624:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1641:3:12"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1646:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:19:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1634:19:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1662:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1677:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1662:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1596:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1601:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1612:11:12",
														"type": ""
													}
												],
												"src": "1528:169:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1809:74:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1839:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1827:14:12"
																	},
																	{
																		"hexValue": "4e6f206e657720696d706c656d656e746174696f6e2070726f706f736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1843:32:12",
																		"type": "",
																		"value": "No new implementation proposed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1820:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:56:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1820:56:12"
														}
													]
												},
												"name": "store_literal_in_memory_476314c299d593396696100b44df122d76c1b7eee385a424afedbf0f97c2fa12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1801:6:12",
														"type": ""
													}
												],
												"src": "1703:180:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2035:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2045:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2111:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2116:2:12",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2052:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2052:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2045:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2217:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_476314c299d593396696100b44df122d76c1b7eee385a424afedbf0f97c2fa12",
																	"nodeType": "YulIdentifier",
																	"src": "2128:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2128:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2128:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2230:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2241:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2246:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2237:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2237:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2230:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_476314c299d593396696100b44df122d76c1b7eee385a424afedbf0f97c2fa12_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2023:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2031:3:12",
														"type": ""
													}
												],
												"src": "1889:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2432:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2442:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2454:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2465:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2450:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2442:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2489:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2500:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2485:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2485:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2508:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2514:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2504:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2504:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2478:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2478:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2534:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2668:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_476314c299d593396696100b44df122d76c1b7eee385a424afedbf0f97c2fa12_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2542:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2542:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2534:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_476314c299d593396696100b44df122d76c1b7eee385a424afedbf0f97c2fa12__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2412:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2427:4:12",
														"type": ""
													}
												],
												"src": "2261:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2792:126:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2814:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2822:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2810:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2810:14:12"
																	},
																	{
																		"hexValue": "4e657720696d706c656d656e746174696f6e2063616e6e6f7420626520746865",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2826:34:12",
																		"type": "",
																		"value": "New implementation cannot be the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2803:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2803:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2803:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2882:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2890:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2878:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2878:15:12"
																	},
																	{
																		"hexValue": "207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2895:15:12",
																		"type": "",
																		"value": " zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2871:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:40:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2871:40:12"
														}
													]
												},
												"name": "store_literal_in_memory_0d1f33b3bfd2dba3464feb9057ff18155cc023a705b2b9680ba969ea650eb193",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2784:6:12",
														"type": ""
													}
												],
												"src": "2686:232:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3070:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3080:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3146:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3151:2:12",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3087:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3087:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3080:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3252:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1f33b3bfd2dba3464feb9057ff18155cc023a705b2b9680ba969ea650eb193",
																	"nodeType": "YulIdentifier",
																	"src": "3163:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3163:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3163:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3265:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3276:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3281:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3272:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3272:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3265:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1f33b3bfd2dba3464feb9057ff18155cc023a705b2b9680ba969ea650eb193_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3058:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3066:3:12",
														"type": ""
													}
												],
												"src": "2924:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3467:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3477:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3489:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3500:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3485:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3485:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3477:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3524:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3535:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3520:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3520:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3543:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3549:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3539:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3539:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3513:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3513:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3513:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3569:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3703:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1f33b3bfd2dba3464feb9057ff18155cc023a705b2b9680ba969ea650eb193_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3577:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3577:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3569:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1f33b3bfd2dba3464feb9057ff18155cc023a705b2b9680ba969ea650eb193__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3447:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3462:4:12",
														"type": ""
													}
												],
												"src": "3296:419:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3827:126:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3849:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3857:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3845:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3845:14:12"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3861:34:12",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3838:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3838:58:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3838:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3917:6:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3925:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3913:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3913:15:12"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3930:15:12",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3906:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "3906:40:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3906:40:12"
														}
													]
												},
												"name": "store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3819:6:12",
														"type": ""
													}
												],
												"src": "3721:232:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4105:220:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4115:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4181:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4186:2:12",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4122:58:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4115:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4287:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																	"nodeType": "YulIdentifier",
																	"src": "4198:88:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4198:93:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4198:93:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4300:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4311:3:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4316:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4307:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4307:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4300:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4093:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4101:3:12",
														"type": ""
													}
												],
												"src": "3959:366:12"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4502:248:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4512:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4524:9:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4520:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4520:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4512:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4559:9:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4570:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4555:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4555:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4578:4:12"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4584:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4574:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4574:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4548:6:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4548:47:12"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4548:47:12"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4604:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4738:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4612:124:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4612:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4604:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4482:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4497:4:12",
														"type": ""
													}
												],
												"src": "4331:419:12"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_476314c299d593396696100b44df122d76c1b7eee385a424afedbf0f97c2fa12(memPtr) {\n\n        mstore(add(memPtr, 0), \"No new implementation proposed\")\n\n    }\n\n    function abi_encode_t_stringliteral_476314c299d593396696100b44df122d76c1b7eee385a424afedbf0f97c2fa12_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_476314c299d593396696100b44df122d76c1b7eee385a424afedbf0f97c2fa12(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_476314c299d593396696100b44df122d76c1b7eee385a424afedbf0f97c2fa12__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_476314c299d593396696100b44df122d76c1b7eee385a424afedbf0f97c2fa12_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d1f33b3bfd2dba3464feb9057ff18155cc023a705b2b9680ba969ea650eb193(memPtr) {\n\n        mstore(add(memPtr, 0), \"New implementation cannot be the\")\n\n        mstore(add(memPtr, 32), \" zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1f33b3bfd2dba3464feb9057ff18155cc023a705b2b9680ba969ea650eb193_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_0d1f33b3bfd2dba3464feb9057ff18155cc023a705b2b9680ba969ea650eb193(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1f33b3bfd2dba3464feb9057ff18155cc023a705b2b9680ba969ea650eb193__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1f33b3bfd2dba3464feb9057ff18155cc023a705b2b9680ba969ea650eb193_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new implementation is n\")\n\n        mstore(add(memPtr, 32), \"ot a contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610073575f3560e01c8063715018a61161004d578063715018a6146100ec5780638da5cb5b14610102578063aaf10f421461012c578063f2fde38b146101565761007a565b80632031a34614610084578063396f7b231461009a57806347757fb6146100c45761007a565b3661007a57005b61008261017e565b005b34801561008f575f80fd5b50610098610190565b005b3480156100a5575f80fd5b506100ae6102f7565b6040516100bb9190610864565b60405180910390f35b3480156100cf575f80fd5b506100ea60048036038101906100e591906108ab565b61031c565b005b3480156100f7575f80fd5b50610100610418565b005b34801561010d575f80fd5b5061011661042b565b6040516101239190610864565b60405180910390f35b348015610137575f80fd5b50610140610452565b60405161014d9190610864565b60405180910390f35b348015610161575f80fd5b5061017c600480360381019061017791906108ab565b610460565b005b61018e6101896104e4565b6104f2565b565b610198610511565b5f73ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610930565b60405180910390fd5b61025160015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610598565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f51ea6ffdc9909d5ca341259f7221902e0676585d833e2bb21fa923c85e86288660405160405180910390a25f60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610324610511565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610392576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610389906109be565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f8309d39e125ec00aa8f0a092ca3393019d7384202aff703de066548b28dd76ad60405160405180910390a250565b610420610511565b6104295f6105e7565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f61045b6106a8565b905090565b610468610511565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104d8575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104cf9190610864565b60405180910390fd5b6104e1816105e7565b50565b5f6104ed6106fb565b905090565b365f80375f80365f845af43d5f803e805f811461050d573d5ff35b3d5ffd5b61051961074e565b73ffffffffffffffffffffffffffffffffffffffff1661053761042b565b73ffffffffffffffffffffffffffffffffffffffff16146105965761055a61074e565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161058d9190610864565b60405180910390fd5b565b6105a181610755565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6106d47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61080b565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f6107277f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61080b565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f33905090565b61075e81610814565b61079d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490610a4c565b60405180910390fd5b806107c97f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b61080b565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f819050919050565b5f80823b90505f8111915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61084e82610825565b9050919050565b61085e81610844565b82525050565b5f6020820190506108775f830184610855565b92915050565b5f80fd5b61088a81610844565b8114610894575f80fd5b50565b5f813590506108a581610881565b92915050565b5f602082840312156108c0576108bf61087d565b5b5f6108cd84828501610897565b91505092915050565b5f82825260208201905092915050565b7f4e6f206e657720696d706c656d656e746174696f6e2070726f706f73656400005f82015250565b5f61091a601e836108d6565b9150610925826108e6565b602082019050919050565b5f6020820190508181035f8301526109478161090e565b9050919050565b7f4e657720696d706c656d656e746174696f6e2063616e6e6f74206265207468655f8201527f207a65726f206164647265737300000000000000000000000000000000000000602082015250565b5f6109a8602d836108d6565b91506109b38261094e565b604082019050919050565b5f6020820190508181035f8301526109d58161099c565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e5f8201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b5f610a36602d836108d6565b9150610a41826109dc565b604082019050919050565b5f6020820190508181035f830152610a6381610a2a565b905091905056fea264697066735822122063855b52c18d1c8acb291a6f1223f40cc76b01c20f0852984d40f9eb7d3d2c6564736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x73 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xAAF10F42 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x156 JUMPI PUSH2 0x7A JUMP JUMPDEST DUP1 PUSH4 0x2031A346 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x396F7B23 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0x47757FB6 EQ PUSH2 0xC4 JUMPI PUSH2 0x7A JUMP JUMPDEST CALLDATASIZE PUSH2 0x7A JUMPI STOP JUMPDEST PUSH2 0x82 PUSH2 0x17E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x98 PUSH2 0x190 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xAE PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x100 PUSH2 0x418 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH2 0x42B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x140 PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x161 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18E PUSH2 0x189 PUSH2 0x4E4 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x198 PUSH2 0x511 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E SWAP1 PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x251 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x598 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x51EA6FFDC9909D5CA341259F7221902E0676585D833E2BB21FA923C85E862886 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x324 PUSH2 0x511 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x392 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x389 SWAP1 PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8309D39E125EC00AA8F0A092CA3393019D7384202AFF703DE066548B28DD76AD PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x420 PUSH2 0x511 JUMP JUMPDEST PUSH2 0x429 PUSH0 PUSH2 0x5E7 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x45B PUSH2 0x6A8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x468 PUSH2 0x511 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E1 DUP2 PUSH2 0x5E7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x4ED PUSH2 0x6FB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 PUSH0 DUP2 EQ PUSH2 0x50D JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH2 0x519 PUSH2 0x74E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x537 PUSH2 0x42B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x596 JUMPI PUSH2 0x55A PUSH2 0x74E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58D SWAP2 SWAP1 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x5A1 DUP2 PUSH2 0x755 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6D4 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x80B JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x727 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x80B JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x75E DUP2 PUSH2 0x814 JUMP JUMPDEST PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x794 SWAP1 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x7C9 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x80B JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x84E DUP3 PUSH2 0x825 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x85E DUP2 PUSH2 0x844 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x877 PUSH0 DUP4 ADD DUP5 PUSH2 0x855 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x88A DUP2 PUSH2 0x844 JUMP JUMPDEST DUP2 EQ PUSH2 0x894 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8A5 DUP2 PUSH2 0x881 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C0 JUMPI PUSH2 0x8BF PUSH2 0x87D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8CD DUP5 DUP3 DUP6 ADD PUSH2 0x897 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F206E657720696D706C656D656E746174696F6E2070726F706F7365640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x91A PUSH1 0x1E DUP4 PUSH2 0x8D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x925 DUP3 PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x947 DUP2 PUSH2 0x90E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E657720696D706C656D656E746174696F6E2063616E6E6F7420626520746865 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F206164647265737300000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9A8 PUSH1 0x2D DUP4 PUSH2 0x8D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x9B3 DUP3 PUSH2 0x94E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9D5 DUP2 PUSH2 0x99C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA36 PUSH1 0x2D DUP4 PUSH2 0x8D6 JUMP JUMPDEST SWAP2 POP PUSH2 0xA41 DUP3 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA63 DUP2 PUSH2 0xA2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x855B52C1 DUP14 SHR DUP11 0xCB 0x29 BYTE PUSH16 0x1223F40CC76B01C20F0852984D40F9EB PUSH30 0x3D2C6564736F6C6343000814003300000000000000000000000000000000 ",
							"sourceMap": "250:1217:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2649:11:6;:9;:11::i;:::-;250:1217:11;961:300;;;;;;;;;;;;;:::i;:::-;;318:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;655:298;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1269:105:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2323:83:6;2371:28;2381:17;:15;:17::i;:::-;2371:9;:28::i;:::-;2323:83::o;961:300:11:-;1531:13:0;:11;:13::i;:::-;1066:1:11::1;1033:35;;:21;;;;;;;;;;;:35;;::::0;1025:78:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1114:33;1125:21;;;;;;;;;;;1114:10;:33::i;:::-;1186:21;;;;;;;;;;;1163:45;;;;;;;;;;;;1251:1;1219:21;;:34;;;;;;;;;;;;;;;;;;961:300::o:0;318:36::-;;;;;;;;;;;;;:::o;655:298::-;1531:13:0;:11;:13::i;:::-;781:1:11::1;752:31;;:17;:31;;::::0;744:89:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;868:17;844:21;;:41;;;;;;;;;;;;;;;;;;927:17;901:44;;;;;;;;;;;;655:298:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1269:105:11:-;1319:7;1346:20;:18;:20::i;:::-;1339:27;;1269:105;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1581:132:3:-;1648:7;1674:32;:30;:32::i;:::-;1667:39;;1581:132;:::o;949:895:6:-;1287:14;1284:1;1281;1268:34;1501:1;1498;1482:14;1479:1;1463:14;1456:5;1443:60;1577:16;1574:1;1571;1556:38;1615:6;1687:1;1682:66;;;;1797:16;1794:1;1787:27;1682:66;1717:16;1714:1;1707:27;1796:162:0;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;1680:152:4:-;1746:37;1765:17;1746:18;:37::i;:::-;1807:17;1798:27;;;;;;;;;;;;1680:152;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1091:140:4:-;1144:7;1170:48;946:66;1197:20;;1170:26;:48::i;:::-;:54;;;;;;;;;;;;1163:61;;1091:140;:::o;1957:138:5:-;2009:7;2035:47;1327:66;2062:19;;2035:26;:47::i;:::-;:53;;;;;;;;;;;;2028:60;;1957:138;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;1322:252:4:-;1403:30;1415:17;1403:11;:30::i;:::-;1395:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;1550:17;1493:48;946:66;1520:20;;1493:26;:48::i;:::-;:54;;;:74;;;;;;;;;;;;;;;;;;1322:252;:::o;1684:190:10:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;3400:191:4:-;3461:4;3477:12;3542:7;3530:20;3522:28;;3583:1;3576:4;:8;3569:15;;;3400:191;;;:::o;7:126:12:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:180::-;1843:32;1839:1;1831:6;1827:14;1820:56;1703:180;:::o;1889:366::-;2031:3;2052:67;2116:2;2111:3;2052:67;:::i;:::-;2045:74;;2128:93;2217:3;2128:93;:::i;:::-;2246:2;2241:3;2237:12;2230:19;;1889:366;;;:::o;2261:419::-;2427:4;2465:2;2454:9;2450:18;2442:26;;2514:9;2508:4;2504:20;2500:1;2489:9;2485:17;2478:47;2542:131;2668:4;2542:131;:::i;:::-;2534:139;;2261:419;;;:::o;2686:232::-;2826:34;2822:1;2814:6;2810:14;2803:58;2895:15;2890:2;2882:6;2878:15;2871:40;2686:232;:::o;2924:366::-;3066:3;3087:67;3151:2;3146:3;3087:67;:::i;:::-;3080:74;;3163:93;3252:3;3163:93;:::i;:::-;3281:2;3276:3;3272:12;3265:19;;2924:366;;;:::o;3296:419::-;3462:4;3500:2;3489:9;3485:18;3477:26;;3549:9;3543:4;3539:20;3535:1;3524:9;3520:17;3513:47;3577:131;3703:4;3577:131;:::i;:::-;3569:139;;3296:419;;;:::o;3721:232::-;3861:34;3857:1;3849:6;3845:14;3838:58;3930:15;3925:2;3917:6;3913:15;3906:40;3721:232;:::o;3959:366::-;4101:3;4122:67;4186:2;4181:3;4122:67;:::i;:::-;4115:74;;4198:93;4287:3;4198:93;:::i;:::-;4316:2;4311:3;4307:12;4300:19;;3959:366;;;:::o;4331:419::-;4497:4;4535:2;4524:9;4520:18;4512:26;;4584:9;4578:4;4574:20;4570:1;4559:9;4555:17;4548:47;4612:131;4738:4;4612:131;:::i;:::-;4604:139;;4331:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "544000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"approveNewImplementation()": "infinite",
								"getImplementation()": "2645",
								"owner()": "2537",
								"pendingImplementation()": "2531",
								"proposeNewImplementation(address)": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 250,
									"end": 1467,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 250,
									"end": 1467,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 1467,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 508,
									"end": 647,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 508,
									"end": 647,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 508,
									"end": 647,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 508,
									"end": 647,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 508,
									"end": 647,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 508,
									"end": 647,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 508,
									"end": 647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 508,
									"end": 647,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 626,
									"end": 632,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 594,
									"end": 600,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 602,
									"end": 607,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1154,
									"end": 1206,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1184,
									"end": 1198,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1200,
									"end": 1205,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1154,
									"end": 1183,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1154,
									"end": 1183,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1154,
									"end": 1183,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1154,
									"end": 1206,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1154,
									"end": 1206,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1154,
									"end": 1206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1154,
									"end": 1206,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1154,
									"end": 1206,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1080,
									"end": 1213,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 508,
									"end": 647,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 508,
									"end": 647,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 250,
									"end": 1467,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 250,
									"end": 1467,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2779,
									"end": 3114,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 2779,
									"end": 3114,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2870,
									"end": 2907,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 2889,
									"end": 2906,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2870,
									"end": 2888,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2870,
									"end": 2888,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2870,
									"end": 2888,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2870,
									"end": 2907,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2870,
									"end": 2907,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2870,
									"end": 2907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2870,
									"end": 2907,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 2870,
									"end": 2907,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2931,
									"end": 2948,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "PUSH",
									"source": 5,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2922,
									"end": 2949,
									"name": "LOG2",
									"source": 5
								},
								{
									"begin": 2978,
									"end": 2979,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2964,
									"end": 2968,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2964,
									"end": 2975,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2964,
									"end": 2979,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 3024,
									"end": 3041,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3043,
									"end": 3047,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2995,
									"end": 3023,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 2995,
									"end": 3023,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2995,
									"end": 3023,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 3079,
									"end": 3095,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 3079,
									"end": 3095,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3079,
									"end": 3095,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3079,
									"end": 3097,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 3079,
									"end": 3097,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2960,
									"end": 3108,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2779,
									"end": 3114,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2779,
									"end": 3114,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2779,
									"end": 3114,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2186,
									"end": 2467,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2186,
									"end": 2467,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2296,
									"end": 2297,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2263,
									"end": 2280,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2263,
									"end": 2292,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2263,
									"end": 2292,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2263,
									"end": 2292,
									"name": "EXTCODESIZE",
									"source": 5
								},
								{
									"begin": 2263,
									"end": 2297,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2349,
									"end": 2366,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "PUSH",
									"source": 5,
									"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 2320,
									"end": 2367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2320,
									"end": 2367,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 2259,
									"end": 2378,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2443,
									"end": 2460,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2434,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1327,
									"end": 1393,
									"name": "PUSH",
									"source": 5,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 2414,
									"end": 2433,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2414,
									"end": 2433,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2413,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 2387,
									"end": 2413,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2413,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2434,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2434,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2434,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 2387,
									"end": 2434,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2440,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2387,
									"end": 2440,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2440,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2387,
									"end": 2460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2186,
									"end": 2467,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2186,
									"end": 2467,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4106,
									"end": 4359,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 4106,
									"end": 4359,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4189,
									"end": 4201,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4214,
									"end": 4226,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4228,
									"end": 4251,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4274,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4255,
									"end": 4274,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4275,
									"end": 4279,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 4255,
									"end": 4280,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "GAS",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DELEGATECALL",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "RETURNDATASIZE",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "RETURNDATACOPY",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4213,
									"end": 4280,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4213,
									"end": 4280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4213,
									"end": 4280,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4213,
									"end": 4280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 4324,
									"end": 4330,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4332,
									"end": 4339,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4341,
									"end": 4351,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4323,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4297,
									"end": 4323,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4297,
									"end": 4323,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4352,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4290,
									"end": 4352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4106,
									"end": 4359,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4106,
									"end": 4359,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4106,
									"end": 4359,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4106,
									"end": 4359,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4106,
									"end": 4359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6598,
									"end": 6720,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 6598,
									"end": 6720,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6660,
									"end": 6661,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6648,
									"end": 6657,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 6648,
									"end": 6661,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "B398979F00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6684,
									"end": 6703,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 6644,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6598,
									"end": 6720,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1874,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1684,
									"end": 1874,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1745,
									"end": 1766,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1854,
									"end": 1858,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1844,
									"end": 1858,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1844,
									"end": 1858,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1684,
									"end": 1874,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1684,
									"end": 1874,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1684,
									"end": 1874,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1684,
									"end": 1874,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4769,
									"end": 4781,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4798,
									"end": 4805,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4821,
									"end": 4840,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 4829,
									"end": 4839,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4821,
									"end": 4828,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 4821,
									"end": 4828,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4821,
									"end": 4828,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4821,
									"end": 4840,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4821,
									"end": 4840,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4821,
									"end": 4840,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4821,
									"end": 4840,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 4821,
									"end": 4840,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5066,
									"end": 5067,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5045,
									"end": 5055,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5062,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5067,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5093,
									"end": 5094,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5071,
									"end": 5077,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "EXTCODESIZE",
									"source": 8
								},
								{
									"begin": 5071,
									"end": 5094,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5138,
									"end": 5144,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH",
									"source": 8,
									"value": "9996B31500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 5121,
									"end": 5145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5180,
									"end": 5190,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5173,
									"end": 5190,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5173,
									"end": 5190,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5173,
									"end": 5190,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 5173,
									"end": 5190,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4625,
									"end": 5207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5743,
									"end": 6259,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 5743,
									"end": 6259,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5894,
									"end": 5895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5874,
									"end": 5884,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5874,
									"end": 5891,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 5874,
									"end": 5895,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6102,
									"end": 6112,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6096,
									"end": 6113,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6158,
									"end": 6173,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6145,
									"end": 6155,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6141,
									"end": 6143,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6137,
									"end": 6156,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6130,
									"end": 6174,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "PUSH",
									"source": 8,
									"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1075,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1067,
									"end": 1079,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1185,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1179,
									"end": 1186,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1174,
									"end": 1176,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1167,
									"end": 1172,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1163,
									"end": 1177,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1159,
									"end": 1187,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1091,
									"end": 1193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1247,
									"end": 1324,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1237,
									"end": 1325,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1344,
									"end": 1348,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1334,
									"end": 1349,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1368,
									"end": 1372,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 1490,
									"end": 1494,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1468,
									"end": 1495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "tag",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1456,
									"end": 1496,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1586,
									"end": 1596,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1583,
									"end": 1605,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1562,
									"end": 1580,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1547,
									"end": 1581,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1544,
									"end": 1606,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1609,
									"end": 1627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "tag",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1649,
									"end": 1659,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1645,
									"end": 1647,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1660,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1428,
									"end": 1666,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1385,
									"end": 1666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1706,
									"end": 1712,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1733,
									"end": 1753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 1790,
									"end": 1794,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1782,
									"end": 1788,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1762,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "tag",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1868,
									"end": 1872,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 1976,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1950,
									"end": 1956,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1947,
									"end": 1977,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1980,
									"end": 1998,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 1980,
									"end": 1998,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 1944,
									"end": 2000,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2018,
									"end": 2047,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 2040,
									"end": 2046,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2018,
									"end": 2047,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 2018,
									"end": 2047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2018,
									"end": 2047,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 2018,
									"end": 2047,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2047,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2010,
									"end": 2047,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2102,
									"end": 2106,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2100,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2092,
									"end": 2107,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2084,
									"end": 2107,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2084,
									"end": 2107,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1807,
									"end": 2114,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1807,
									"end": 2114,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2366,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2120,
									"end": 2366,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2201,
									"end": 2202,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "tag",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2225,
									"end": 2231,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2222,
									"end": 2223,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2219,
									"end": 2232,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2310,
									"end": 2311,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2305,
									"end": 2308,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2301,
									"end": 2312,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2295,
									"end": 2313,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2291,
									"end": 2292,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2286,
									"end": 2289,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2282,
									"end": 2293,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2275,
									"end": 2314,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2247,
									"end": 2249,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2244,
									"end": 2245,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2240,
									"end": 2250,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2235,
									"end": 2250,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2235,
									"end": 2250,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 2211,
									"end": 2324,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2358,
									"end": 2359,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2349,
									"end": 2355,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2344,
									"end": 2347,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2340,
									"end": 2356,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2333,
									"end": 2360,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2182,
									"end": 2366,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2366,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2366,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2366,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2120,
									"end": 2366,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2372,
									"end": 2804,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 2372,
									"end": 2804,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2460,
									"end": 2465,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2485,
									"end": 2550,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 2501,
									"end": 2549,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 2542,
									"end": 2548,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2501,
									"end": 2549,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 2501,
									"end": 2549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2501,
									"end": 2549,
									"name": "tag",
									"source": 12,
									"value": "109"
								},
								{
									"begin": 2501,
									"end": 2549,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2485,
									"end": 2550,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2485,
									"end": 2550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2485,
									"end": 2550,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 2485,
									"end": 2550,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2550,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2476,
									"end": 2550,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2573,
									"end": 2579,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2566,
									"end": 2571,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2559,
									"end": 2580,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2611,
									"end": 2615,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2604,
									"end": 2609,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2600,
									"end": 2616,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2649,
									"end": 2652,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2640,
									"end": 2646,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2635,
									"end": 2638,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2631,
									"end": 2647,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2628,
									"end": 2653,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2625,
									"end": 2737,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2625,
									"end": 2737,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 2625,
									"end": 2737,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2656,
									"end": 2735,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 2656,
									"end": 2735,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 2656,
									"end": 2735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2656,
									"end": 2735,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 2656,
									"end": 2735,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2625,
									"end": 2737,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 2625,
									"end": 2737,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2746,
									"end": 2798,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 2791,
									"end": 2797,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2786,
									"end": 2789,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2781,
									"end": 2784,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2746,
									"end": 2798,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2746,
									"end": 2798,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2746,
									"end": 2798,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 2746,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2466,
									"end": 2804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2372,
									"end": 2804,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2372,
									"end": 2804,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2372,
									"end": 2804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2372,
									"end": 2804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2372,
									"end": 2804,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2372,
									"end": 2804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 3176,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2823,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2889,
									"end": 2894,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2938,
									"end": 2941,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2923,
									"end": 2929,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2919,
									"end": 2936,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2915,
									"end": 2942,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2905,
									"end": 3027,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 2905,
									"end": 3027,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2946,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 2946,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 2946,
									"end": 3025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2946,
									"end": 3025,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 2946,
									"end": 3025,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2905,
									"end": 3027,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 2905,
									"end": 3027,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3056,
									"end": 3062,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3050,
									"end": 3063,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 3170,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 3166,
									"end": 3169,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3158,
									"end": 3164,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3151,
									"end": 3155,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3143,
									"end": 3149,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3139,
									"end": 3156,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 3170,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 3081,
									"end": 3170,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 3170,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 3081,
									"end": 3170,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3072,
									"end": 3170,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3072,
									"end": 3170,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2895,
									"end": 3176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 3176,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 3176,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 3176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 3176,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2823,
									"end": 3176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3182,
									"end": 4016,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3182,
									"end": 4016,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3279,
									"end": 3285,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3287,
									"end": 3293,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3295,
									"end": 3301,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3344,
									"end": 3346,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 3332,
									"end": 3341,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3323,
									"end": 3330,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3319,
									"end": 3342,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3315,
									"end": 3347,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 3312,
									"end": 3431,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3312,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 3312,
									"end": 3431,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3350,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 3350,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 3350,
									"end": 3429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3350,
									"end": 3429,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 3350,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3312,
									"end": 3431,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 3312,
									"end": 3431,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3470,
									"end": 3471,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3495,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 3551,
									"end": 3558,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3542,
									"end": 3548,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3531,
									"end": 3540,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3527,
									"end": 3549,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3495,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 3495,
									"end": 3559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3495,
									"end": 3559,
									"name": "tag",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 3495,
									"end": 3559,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3485,
									"end": 3559,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3485,
									"end": 3559,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3441,
									"end": 3569,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3608,
									"end": 3610,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3634,
									"end": 3698,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 3690,
									"end": 3697,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3681,
									"end": 3687,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3670,
									"end": 3679,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3666,
									"end": 3688,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3634,
									"end": 3698,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 3634,
									"end": 3698,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3634,
									"end": 3698,
									"name": "tag",
									"source": 12,
									"value": "121"
								},
								{
									"begin": 3634,
									"end": 3698,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3624,
									"end": 3698,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3624,
									"end": 3698,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3579,
									"end": 3708,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3768,
									"end": 3770,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3757,
									"end": 3766,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3753,
									"end": 3771,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3747,
									"end": 3772,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3799,
									"end": 3817,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3791,
									"end": 3797,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3788,
									"end": 3818,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3785,
									"end": 3902,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3785,
									"end": 3902,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 3785,
									"end": 3902,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3821,
									"end": 3900,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 3821,
									"end": 3900,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 3821,
									"end": 3900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3821,
									"end": 3900,
									"name": "tag",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 3821,
									"end": 3900,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3785,
									"end": 3902,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 3785,
									"end": 3902,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3926,
									"end": 3999,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 3991,
									"end": 3998,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3982,
									"end": 3988,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3971,
									"end": 3980,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3967,
									"end": 3989,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3926,
									"end": 3999,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 3926,
									"end": 3999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3926,
									"end": 3999,
									"name": "tag",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 3926,
									"end": 3999,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3916,
									"end": 3999,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3916,
									"end": 3999,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3718,
									"end": 4009,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3182,
									"end": 4016,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3182,
									"end": 4016,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3182,
									"end": 4016,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3182,
									"end": 4016,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3182,
									"end": 4016,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 3182,
									"end": 4016,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4022,
									"end": 4140,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 4022,
									"end": 4140,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4109,
									"end": 4133,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 4127,
									"end": 4132,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4109,
									"end": 4133,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 4109,
									"end": 4133,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4109,
									"end": 4133,
									"name": "tag",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 4109,
									"end": 4133,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4104,
									"end": 4107,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4097,
									"end": 4134,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4022,
									"end": 4140,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4022,
									"end": 4140,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4022,
									"end": 4140,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4146,
									"end": 4368,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 4146,
									"end": 4368,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4239,
									"end": 4243,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4277,
									"end": 4279,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4266,
									"end": 4275,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4262,
									"end": 4280,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4254,
									"end": 4280,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4254,
									"end": 4280,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4290,
									"end": 4361,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 4358,
									"end": 4359,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4347,
									"end": 4356,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4343,
									"end": 4360,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4334,
									"end": 4340,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4290,
									"end": 4361,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 4290,
									"end": 4361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4290,
									"end": 4361,
									"name": "tag",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 4290,
									"end": 4361,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4146,
									"end": 4368,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4146,
									"end": 4368,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4146,
									"end": 4368,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4146,
									"end": 4368,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4146,
									"end": 4368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4374,
									"end": 4472,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 4374,
									"end": 4472,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4425,
									"end": 4431,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4459,
									"end": 4464,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4453,
									"end": 4465,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4443,
									"end": 4465,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4443,
									"end": 4465,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4374,
									"end": 4472,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4374,
									"end": 4472,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4374,
									"end": 4472,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4374,
									"end": 4472,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4478,
									"end": 4625,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 4478,
									"end": 4625,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4579,
									"end": 4590,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4616,
									"end": 4619,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4601,
									"end": 4619,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4601,
									"end": 4619,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4478,
									"end": 4625,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4478,
									"end": 4625,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4478,
									"end": 4625,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4478,
									"end": 4625,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4478,
									"end": 4625,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4631,
									"end": 5017,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 4631,
									"end": 5017,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4735,
									"end": 4738,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4763,
									"end": 4801,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 4795,
									"end": 4800,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4763,
									"end": 4801,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 4763,
									"end": 4801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4763,
									"end": 4801,
									"name": "tag",
									"source": 12,
									"value": "132"
								},
								{
									"begin": 4763,
									"end": 4801,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4817,
									"end": 4905,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 4898,
									"end": 4904,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4893,
									"end": 4896,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4817,
									"end": 4905,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 4817,
									"end": 4905,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4817,
									"end": 4905,
									"name": "tag",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 4817,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4810,
									"end": 4905,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4810,
									"end": 4905,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4914,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 4972,
									"end": 4978,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4967,
									"end": 4970,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4960,
									"end": 4964,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4953,
									"end": 4958,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 4949,
									"end": 4965,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4914,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 4914,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4914,
									"end": 4979,
									"name": "tag",
									"source": 12,
									"value": "134"
								},
								{
									"begin": 4914,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5004,
									"end": 5010,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4999,
									"end": 5002,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4995,
									"end": 5011,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4988,
									"end": 5011,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4988,
									"end": 5011,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4739,
									"end": 5017,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4631,
									"end": 5017,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4631,
									"end": 5017,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4631,
									"end": 5017,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4631,
									"end": 5017,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4631,
									"end": 5017,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5023,
									"end": 5294,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 5023,
									"end": 5294,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5153,
									"end": 5156,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5175,
									"end": 5268,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 5264,
									"end": 5267,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5255,
									"end": 5261,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5175,
									"end": 5268,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 5175,
									"end": 5268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5175,
									"end": 5268,
									"name": "tag",
									"source": 12,
									"value": "136"
								},
								{
									"begin": 5175,
									"end": 5268,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5168,
									"end": 5268,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5168,
									"end": 5268,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5285,
									"end": 5288,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5278,
									"end": 5288,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5278,
									"end": 5288,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5023,
									"end": 5294,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 5023,
									"end": 5294,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5023,
									"end": 5294,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5023,
									"end": 5294,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5023,
									"end": 5294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 250,
									"end": 1467,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 250,
									"end": 1467,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 250,
									"end": 1467,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 1467,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 250,
									"end": 1467,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 1467,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 1467,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 250,
									"end": 1467,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 1467,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122063855b52c18d1c8acb291a6f1223f40cc76b01c20f0852984d40f9eb7d3d2c6564736f6c63430008140033",
									".code": [
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH",
											"source": 11,
											"value": "AAF10F42"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH",
											"source": 11,
											"value": "2031A346"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH",
											"source": 11,
											"value": "396F7B23"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH",
											"source": 11,
											"value": "47757FB6"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2649,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2649,
											"end": 2660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 250,
											"end": 1467,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 961,
											"end": 1261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 318,
											"end": 354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 354,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 354,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 318,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 318,
											"end": 354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 318,
											"end": 354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 318,
											"end": 354,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 318,
											"end": 354,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 318,
											"end": 354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 318,
											"end": 354,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 655,
											"end": 953,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 655,
											"end": 953,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 655,
											"end": 953,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 655,
											"end": 953,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 655,
											"end": 953,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 655,
											"end": 953,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 655,
											"end": 953,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 655,
											"end": 953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 655,
											"end": 953,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 655,
											"end": 953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 655,
											"end": 953,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1269,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1269,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2381,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2381,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2371,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 961,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1033,
											"end": 1068,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1033,
											"end": 1054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1033,
											"end": 1054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1033,
											"end": 1054,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1033,
											"end": 1054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1033,
											"end": 1054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1033,
											"end": 1054,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1033,
											"end": 1054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1033,
											"end": 1054,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1033,
											"end": 1054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1033,
											"end": 1054,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1033,
											"end": 1068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1033,
											"end": 1068,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1033,
											"end": 1068,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 1025,
											"end": 1103,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1025,
											"end": 1103,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1114,
											"end": 1147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1125,
											"end": 1146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1125,
											"end": 1146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1146,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1125,
											"end": 1146,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1146,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1125,
											"end": 1146,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1114,
											"end": 1124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 1114,
											"end": 1147,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1114,
											"end": 1147,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1114,
											"end": 1147,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1163,
											"end": 1208,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "51EA6FFDC9909D5CA341259F7221902E0676585D833E2BB21FA923C85E862886"
										},
										{
											"begin": 1163,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1208,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1208,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1208,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1208,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1208,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1208,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1163,
											"end": 1208,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 1251,
											"end": 1252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1219,
											"end": 1240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1253,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 961,
											"end": 1261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 318,
											"end": 354,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 318,
											"end": 354,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 354,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 318,
											"end": 354,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 318,
											"end": 354,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 318,
											"end": 354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 655,
											"end": 953,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 781,
											"end": 782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 752,
											"end": 769,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 752,
											"end": 783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 752,
											"end": 783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 752,
											"end": 783,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 744,
											"end": 833,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 744,
											"end": 833,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 868,
											"end": 885,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 844,
											"end": 865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 844,
											"end": 865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 844,
											"end": 885,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 927,
											"end": 944,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 901,
											"end": 945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 901,
											"end": 945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 901,
											"end": 945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8309D39E125EC00AA8F0A092CA3393019D7384202AFF703DE066548B28DD76AD"
										},
										{
											"begin": 901,
											"end": 945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 901,
											"end": 945,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 901,
											"end": 945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 901,
											"end": 945,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 901,
											"end": 945,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 901,
											"end": 945,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 901,
											"end": 945,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 901,
											"end": 945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 901,
											"end": 945,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 655,
											"end": 953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 1326,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1346,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1346,
											"end": 1366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1346,
											"end": 1366,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1346,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1339,
											"end": 1366,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1581,
											"end": 1713,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1581,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1648,
											"end": 1655,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1674,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1674,
											"end": 1706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1706,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1674,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1667,
											"end": 1706,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1667,
											"end": 1706,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1713,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1301,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1284,
											"end": 1285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1282,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1302,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1482,
											"end": 1496,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1479,
											"end": 1480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1443,
											"end": 1503,
											"name": "DELEGATECALL",
											"source": 6
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1556,
											"end": 1594,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1813,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1717,
											"end": 1733,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1734,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1832,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1680,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1765,
											"end": 1782,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1746,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1783,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1746,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1824,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 1825,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1832,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1231,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1091,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 946,
											"end": 1012,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1217,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1170,
											"end": 1218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1218,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1170,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1224,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1170,
											"end": 1224,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1224,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1170,
											"end": 1224,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1170,
											"end": 1224,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1224,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1163,
											"end": 1224,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2016,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 5,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 2062,
											"end": 2081,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2081,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2035,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1322,
											"end": 1574,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1322,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1403,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1415,
											"end": 1432,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1403,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1403,
											"end": 1433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1403,
											"end": 1433,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1403,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1395,
											"end": 1483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1395,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1550,
											"end": 1567,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 946,
											"end": 1012,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1540,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1493,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1541,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1493,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1547,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1547,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1493,
											"end": 1567,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3591,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3400,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3461,
											"end": 3465,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3477,
											"end": 3489,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3549,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3530,
											"end": 3550,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3522,
											"end": 3550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3522,
											"end": 3550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3584,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3576,
											"end": 3580,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3584,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3584,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3584,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3591,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 1307,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 1452,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1193,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1691,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1528,
											"end": 1697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1703,
											"end": 1883,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 1703,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1843,
											"end": 1875,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F206E657720696D706C656D656E746174696F6E2070726F706F7365640000"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1820,
											"end": 1876,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1703,
											"end": 1883,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1703,
											"end": 1883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2255,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 1889,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2031,
											"end": 2034,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 2116,
											"end": 2118,
											"name": "PUSH",
											"source": 12,
											"value": "1E"
										},
										{
											"begin": 2111,
											"end": 2114,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 2052,
											"end": 2119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2052,
											"end": 2119,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 2052,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2119,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2128,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 2217,
											"end": 2220,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2128,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 2128,
											"end": 2221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2128,
											"end": 2221,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 2128,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2241,
											"end": 2244,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2230,
											"end": 2249,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2230,
											"end": 2249,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2255,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2255,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2255,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1889,
											"end": 2255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2680,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 2261,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2427,
											"end": 2431,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2467,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2454,
											"end": 2463,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2450,
											"end": 2468,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2442,
											"end": 2468,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2442,
											"end": 2468,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2523,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2508,
											"end": 2512,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2504,
											"end": 2524,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2501,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2489,
											"end": 2498,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2502,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2478,
											"end": 2525,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2542,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 2668,
											"end": 2672,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2542,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 2542,
											"end": 2673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2542,
											"end": 2673,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 2542,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2534,
											"end": 2673,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2534,
											"end": 2673,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2680,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2680,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2680,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2918,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 2686,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2826,
											"end": 2860,
											"name": "PUSH",
											"source": 12,
											"value": "4E657720696D706C656D656E746174696F6E2063616E6E6F7420626520746865"
										},
										{
											"begin": 2822,
											"end": 2823,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2820,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2810,
											"end": 2824,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2803,
											"end": 2861,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2895,
											"end": 2910,
											"name": "PUSH",
											"source": 12,
											"value": "207A65726F206164647265737300000000000000000000000000000000000000"
										},
										{
											"begin": 2890,
											"end": 2892,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2882,
											"end": 2888,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2878,
											"end": 2893,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2871,
											"end": 2911,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2686,
											"end": 2918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2924,
											"end": 3290,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 2924,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3066,
											"end": 3069,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3087,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 3151,
											"end": 3153,
											"name": "PUSH",
											"source": 12,
											"value": "2D"
										},
										{
											"begin": 3146,
											"end": 3149,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3087,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 3087,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3087,
											"end": 3154,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 3087,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3080,
											"end": 3154,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3080,
											"end": 3154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3163,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 3252,
											"end": 3255,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3163,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 3163,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3163,
											"end": 3256,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 3163,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3281,
											"end": 3283,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3276,
											"end": 3279,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3265,
											"end": 3284,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3265,
											"end": 3284,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2924,
											"end": 3290,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2924,
											"end": 3290,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2924,
											"end": 3290,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2924,
											"end": 3290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3715,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3296,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3462,
											"end": 3466,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3500,
											"end": 3502,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3489,
											"end": 3498,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3477,
											"end": 3503,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3477,
											"end": 3503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3543,
											"end": 3547,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3539,
											"end": 3559,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3533,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3520,
											"end": 3537,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3513,
											"end": 3560,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3577,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 3703,
											"end": 3707,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3577,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 3577,
											"end": 3708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3577,
											"end": 3708,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 3577,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3569,
											"end": 3708,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3569,
											"end": 3708,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3715,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3715,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3715,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3721,
											"end": 3953,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 3721,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3861,
											"end": 3895,
											"name": "PUSH",
											"source": 12,
											"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3855,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3845,
											"end": 3859,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3838,
											"end": 3896,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3930,
											"end": 3945,
											"name": "PUSH",
											"source": 12,
											"value": "6F74206120636F6E747261637400000000000000000000000000000000000000"
										},
										{
											"begin": 3925,
											"end": 3927,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3917,
											"end": 3923,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3913,
											"end": 3928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3906,
											"end": 3946,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3721,
											"end": 3953,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3721,
											"end": 3953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 4325,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 3959,
											"end": 4325,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4101,
											"end": 4104,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 4186,
											"end": 4188,
											"name": "PUSH",
											"source": 12,
											"value": "2D"
										},
										{
											"begin": 4181,
											"end": 4184,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 4122,
											"end": 4189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4122,
											"end": 4189,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 4122,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4115,
											"end": 4189,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4115,
											"end": 4189,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4198,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 4287,
											"end": 4290,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4198,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 4198,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4198,
											"end": 4291,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 4198,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4318,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4311,
											"end": 4314,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4307,
											"end": 4319,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4300,
											"end": 4319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 4325,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 4325,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 4325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 4325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4331,
											"end": 4750,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 4331,
											"end": 4750,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4497,
											"end": 4501,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4524,
											"end": 4533,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4520,
											"end": 4538,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4512,
											"end": 4538,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4512,
											"end": 4538,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4593,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4578,
											"end": 4582,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4574,
											"end": 4594,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4570,
											"end": 4571,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4568,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4572,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4548,
											"end": 4595,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 4738,
											"end": 4742,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 4612,
											"end": 4743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4612,
											"end": 4743,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 4612,
											"end": 4743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4604,
											"end": 4743,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4604,
											"end": 4743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4331,
											"end": 4750,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4331,
											"end": 4750,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4331,
											"end": 4750,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4331,
											"end": 4750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/Proxy.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/VolumProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approveNewImplementation()": "2031a346",
							"getImplementation()": "aaf10f42",
							"owner()": "8da5cb5b",
							"pendingImplementation()": "396f7b23",
							"proposeNewImplementation(address)": "47757fb6",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"ImplementationUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"NewImplementationProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"approveNewImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"proposeNewImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VolumProxy.sol\":\"VolumProxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x9a312c1049e58bc483f63dd5bc026df61773df9763a353bd28bfc7f19904539c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fd8348b2df3921ec0234f265c8e8fbb6c9fcb39f41696825ac7fbe17bae6733\",\"dweb:/ipfs/QmfJ2wScdYEukDYgrdtQMW9NuFcRbGF8UzAUjta1os9nSP\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"contracts/VolumProxy.sol\":{\"keccak256\":\"0xccacfbcaf1da39e321494f86589ade0897a1d351b91582f4610f01caea84725a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da7c58e00082859908be6d31a9b83ce167646233bc8818c3b7fb201e182489dc\",\"dweb:/ipfs/QmbmaujpG4gNUSZ222eU8rCckYmayg6fSmqa6mJcL1Nuvn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/VolumProxy.sol:VolumProxy",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1140,
								"contract": "contracts/VolumProxy.sol:VolumProxy",
								"label": "pendingImplementation",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1017
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1018,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1017,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1017,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1017
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 999,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							168
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:1",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "IERC1967",
							"nameLocation": "245:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:1",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 155,
									"name": "Upgraded",
									"nameLocation": "339:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "348:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:1"
									},
									"src": "333:47:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:1",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 162,
									"name": "AdminChanged",
									"nameLocation": "464:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "477:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "500:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:1"
									},
									"src": "458:60:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:1",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 167,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "609:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:1"
									},
									"src": "588:45:1"
								}
							],
							"scope": 169,
							"src": "235:400:1",
							"usedErrors": [],
							"usedEvents": [
								155,
								162,
								167
							]
						}
					],
					"src": "107:529:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							178
						]
					},
					"id": 179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "139:203:2",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 178,
							"linearizedBaseContracts": [
								178
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "353:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "377:438:2",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "829:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:2"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "868:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 174,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:2"
									},
									"scope": 178,
									"src": "820:57:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 179,
							"src": "343:536:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:767:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
					"exportedSymbols": {
						"ERC1967Proxy": [
							216
						],
						"ERC1967Utils": [
							688
						],
						"Proxy": [
							724
						]
					},
					"id": 217,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 180,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
							"file": "../Proxy.sol",
							"id": 182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 217,
							"sourceUnit": 725,
							"src": "140:35:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 181,
										"name": "Proxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 724,
										"src": "148:5:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "./ERC1967Utils.sol",
							"id": 184,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 217,
							"sourceUnit": 689,
							"src": "176:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 183,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 688,
										"src": "184:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 186,
										"name": "Proxy",
										"nameLocations": [
											"624:5:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 724,
										"src": "624:5:3"
									},
									"id": 187,
									"nodeType": "InheritanceSpecifier",
									"src": "624:5:3"
								}
							],
							"canonicalName": "ERC1967Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "226:372:3",
								"text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
							},
							"fullyImplemented": true,
							"id": 216,
							"linearizedBaseContracts": [
								216,
								724
							],
							"name": "ERC1967Proxy",
							"nameLocation": "608:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "1144:69:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 198,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "1184:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 199,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1200:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 195,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "1154:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$688_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1167:16:3",
														"memberName": "upgradeToAndCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 507,
														"src": "1154:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1154:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1154:52:3"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "636:439:3",
										"text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."
									},
									"id": 203,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1100:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1092:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1129:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1116:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 191,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1116:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:44:3"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1144:0:3"
									},
									"scope": 216,
									"src": "1080:133:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										705
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "1657:56:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 210,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "1674:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$688_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1687:17:3",
														"memberName": "getImplementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 446,
														"src": "1674:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1674:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 209,
												"id": 213,
												"nodeType": "Return",
												"src": "1667:39:3"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "1219:357:3",
										"text": " @dev Returns the current implementation address.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
									},
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "1590:15:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 206,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1630:8:3"
									},
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1605:2:3"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1648:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:9:3"
									},
									"scope": 216,
									"src": "1581:132:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 217,
							"src": "599:1116:3",
							"usedErrors": [
								420,
								433,
								747,
								750
							],
							"usedEvents": [
								399
							]
						}
					],
					"src": "114:1602:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
					"exportedSymbols": {
						"Address": [
							987
						],
						"ERC1967Upgrade": [
							385
						],
						"IBeacon": [
							734
						],
						"IERC1822Proxiable": [
							178
						],
						"IERC1967": [
							168
						],
						"StorageSlot": [
							1127
						]
					},
					"id": 386,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 218,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 219,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 386,
							"sourceUnit": 735,
							"src": "57:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 220,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 386,
							"sourceUnit": 169,
							"src": "89:39:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "../../interfaces/draft-IERC1822.sol",
							"id": 221,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 386,
							"sourceUnit": 179,
							"src": "129:45:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 222,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 386,
							"sourceUnit": 988,
							"src": "175:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 223,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 386,
							"sourceUnit": 1128,
							"src": "209:37:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 225,
										"name": "IERC1967",
										"nameLocations": [
											"469:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 168,
										"src": "469:8:4"
									},
									"id": 226,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:4"
								}
							],
							"canonicalName": "ERC1967Upgrade",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 224,
								"nodeType": "StructuredDocumentation",
								"src": "248:184:4",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"
							},
							"fullyImplemented": true,
							"id": 385,
							"linearizedBaseContracts": [
								385,
								168
							],
							"name": "ERC1967Upgrade",
							"nameLocation": "451:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 229,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "588:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 385,
									"src": "563:108:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 227,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "563:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 228,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "605:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "678:214:4",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 233,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "923:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 385,
									"src": "897:115:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 231,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 232,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "946:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "1153:78:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 241,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "1197:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 239,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "1170:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1127_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1182:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1049,
															"src": "1170:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1023_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1170:48:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1023_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1219:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1022,
													"src": "1170:54:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 238,
												"id": 244,
												"nodeType": "Return",
												"src": "1163:61:4"
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "1019:67:4",
										"text": " @dev Returns the current implementation address."
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1100:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1118:2:4"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1144:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1143:9:4"
									},
									"scope": 385,
									"src": "1091:140:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "1385:189:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 254,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "1415:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 253,
																"name": "_isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "1403:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1403:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1435:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1395:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1395:88:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "1395:88:4"
											},
											{
												"expression": {
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 262,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "1520:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 259,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "1493:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1127_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1505:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1049,
																"src": "1493:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1023_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1493:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1023_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 264,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1542:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1022,
														"src": "1493:54:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 265,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "1550:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1493:74:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "1493:74:4"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "1237:80:4",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1331:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1358:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1350:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1350:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1349:27:4"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1385:0:4"
									},
									"scope": 385,
									"src": "1322:252:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "1736:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 276,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "1765:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 275,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "1746:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "1746:37:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 280,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "1807:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 279,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "1798:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1798:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "EmitStatement",
												"src": "1793:32:4"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "1580:95:4",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "1689:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1708:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1700:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1700:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1699:27:4"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1736:0:4"
									},
									"scope": 385,
									"src": "1680:152:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2064:167:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 295,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "2085:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 294,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "2074:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "2074:29:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 298,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "2117:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2122:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2117:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2131:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2117:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 302,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "2136:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2117:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 312,
												"nodeType": "IfStatement",
												"src": "2113:112:4",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "2147:78:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 307,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "2190:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 308,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "2209:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 304,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "2161:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$987_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2169:20:4",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 906,
																	"src": "2161:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2161:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 310,
															"nodeType": "ExpressionStatement",
															"src": "2161:53:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "1838:123:4",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "1975:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2001:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "1993:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1993:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2033:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2020:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2020:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2044:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2039:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 290,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2039:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1992:62:4"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2064:0:4"
									},
									"scope": 385,
									"src": "1966:265:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "2505:820:4",
										"statements": [
											{
												"condition": {
													"expression": {
														"arguments": [
															{
																"id": 326,
																"name": "_ROLLBACK_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2846:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 324,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "2819:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1127_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2831:14:4",
															"memberName": "getBooleanSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1060,
															"src": "2819:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1026_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2819:42:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$1026_storage_ptr",
															"typeString": "struct StorageSlot.BooleanSlot storage pointer"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2862:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1025,
													"src": "2819:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 364,
													"nodeType": "Block",
													"src": "2937:382:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 349,
																		"nodeType": "Block",
																		"src": "3031:115:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 345,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 343,
																								"name": "slot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 340,
																								"src": "3057:4:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 344,
																								"name": "_IMPLEMENTATION_SLOT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 233,
																								"src": "3065:20:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "3057:28:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
																							"id": 346,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3087:43:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							},
																							"value": "ERC1967Upgrade: unsupported proxiableUUID"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							}
																						],
																						"id": 342,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "3049:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 347,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3049:82:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 348,
																				"nodeType": "ExpressionStatement",
																				"src": "3049:82:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 350,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 341,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 340,
																				"mutability": "mutable",
																				"name": "slot",
																				"nameLocation": "3025:4:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 350,
																				"src": "3017:12:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 339,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3017:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "3016:14:4"
																	},
																	"src": "3008:138:4"
																},
																{
																	"block": {
																		"id": 355,
																		"nodeType": "Block",
																		"src": "3153:89:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
																							"id": 352,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3178:48:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							},
																							"value": "ERC1967Upgrade: new implementation is not UUPS"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							}
																						],
																						"id": 351,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3171:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 353,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3171:56:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 354,
																				"nodeType": "ExpressionStatement",
																				"src": "3171:56:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 356,
																	"nodeType": "TryCatchClause",
																	"src": "3147:95:4"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 335,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 317,
																				"src": "2973:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 334,
																			"name": "IERC1822Proxiable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 178,
																			"src": "2955:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$178_$",
																				"typeString": "type(contract IERC1822Proxiable)"
																			}
																		},
																		"id": 336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2955:36:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1822Proxiable_$178",
																			"typeString": "contract IERC1822Proxiable"
																		}
																	},
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2992:13:4",
																	"memberName": "proxiableUUID",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 177,
																	"src": "2955:50:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view external returns (bytes32)"
																	}
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2955:52:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 357,
															"nodeType": "TryStatement",
															"src": "2951:291:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 359,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "3273:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 360,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 319,
																		"src": "3292:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 361,
																		"name": "forceCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "3298:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 358,
																	"name": "_upgradeToAndCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 314,
																	"src": "3255:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
																		"typeString": "function (address,bytes memory,bool)"
																	}
																},
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3255:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 363,
															"nodeType": "ExpressionStatement",
															"src": "3255:53:4"
														}
													]
												},
												"id": 365,
												"nodeType": "IfStatement",
												"src": "2815:504:4",
												"trueBody": {
													"id": 333,
													"nodeType": "Block",
													"src": "2869:62:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 330,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "2902:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 329,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 269,
																	"src": "2883:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2883:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 332,
															"nodeType": "ExpressionStatement",
															"src": "2883:37:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "2237:161:4",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "2412:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2442:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2434:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2434:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2474:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2461:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 318,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2461:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2485:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2480:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2480:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2433:62:4"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2505:0:4"
									},
									"scope": 385,
									"src": "2403:922:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "3467:124:4",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "3485:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 383,
														"src": "3477:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 375,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3477:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"nodeType": "VariableDeclarationStatement",
												"src": "3477:12:4"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3508:52:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3522:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "3542:7:4"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "3530:11:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3530:20:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3522:4:4"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 370,
														"isOffset": false,
														"isSlot": false,
														"src": "3542:7:4",
														"valueSize": 1
													},
													{
														"declaration": 376,
														"isOffset": false,
														"isSlot": false,
														"src": "3522:4:4",
														"valueSize": 1
													}
												],
												"id": 378,
												"nodeType": "InlineAssembly",
												"src": "3499:61:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 379,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "3576:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3583:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3576:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 374,
												"id": 382,
												"nodeType": "Return",
												"src": "3569:15:4"
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "3331:64:4",
										"text": " @dev Returns true if `account` is a contract."
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isContract",
									"nameLocation": "3409:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3429:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "3421:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3420:17:4"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "3461:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 372,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3461:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3460:6:4"
									},
									"scope": 385,
									"src": "3400:191:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 386,
							"src": "433:3207:4",
							"usedErrors": [],
							"usedEvents": [
								155,
								162,
								167
							]
						}
					],
					"src": "32:3609:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							987
						],
						"ERC1967Utils": [
							688
						],
						"IBeacon": [
							734
						],
						"StorageSlot": [
							1127
						]
					},
					"id": 689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 387,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 389,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 689,
							"sourceUnit": 735,
							"src": "140:46:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 388,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 734,
										"src": "148:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 391,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 689,
							"sourceUnit": 988,
							"src": "187:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 390,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 987,
										"src": "195:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 689,
							"sourceUnit": 1128,
							"src": "236:56:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 392,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1127,
										"src": "244:11:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 394,
								"nodeType": "StructuredDocumentation",
								"src": "294:154:5",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 688,
							"linearizedBaseContracts": [
								688
							],
							"name": "ERC1967Utils",
							"nameLocation": "457:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "660:68:5",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 399,
									"name": "Upgraded",
									"nameLocation": "739:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "764:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "748:30:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:5"
									},
									"src": "733:47:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "786:67:5",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 406,
									"name": "AdminChanged",
									"nameLocation": "864:12:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "885:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "877:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "908:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "900:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:41:5"
									},
									"src": "858:60:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "924:59:5",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 411,
									"name": "BeaconUpgraded",
									"nameLocation": "994:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1025:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "1009:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:24:5"
									},
									"src": "988:45:5"
								},
								{
									"constant": true,
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1039:170:5",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 415,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1305:19:5",
									"nodeType": "VariableDeclaration",
									"scope": 688,
									"src": "1279:114:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 413,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 414,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "1400:69:5",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 420,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1480:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1517:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "1509:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:24:5"
									},
									"src": "1474:59:5"
								},
								{
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "1539:60:5",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 425,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1610:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1638:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1630:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:5"
									},
									"src": "1604:41:5"
								},
								{
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1651:61:5",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 430,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1723:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1752:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "1744:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:16:5"
									},
									"src": "1717:43:5"
								},
								{
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "1766:82:5",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 433,
									"name": "ERC1967NonPayable",
									"nameLocation": "1859:17:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:5"
									},
									"src": "1853:26:5"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "2018:77:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 441,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2062:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 439,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "2035:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1127_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:14:5",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1049,
															"src": "2035:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1023_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2035:47:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1023_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:5:5",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1022,
													"src": "2035:53:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 438,
												"id": 444,
												"nodeType": "Return",
												"src": "2028:60:5"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1885:67:5",
										"text": " @dev Returns the current implementation address."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1966:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:5"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2009:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:5"
									},
									"scope": 688,
									"src": "1957:138:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 472,
										"nodeType": "Block",
										"src": "2249:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 452,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "2263:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2263:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2286:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2263:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 462,
												"nodeType": "IfStatement",
												"src": "2259:119:5",
												"trueBody": {
													"id": 461,
													"nodeType": "Block",
													"src": "2299:79:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 458,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "2349:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 457,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "2320:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:47:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 460,
															"nodeType": "RevertStatement",
															"src": "2313:54:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 466,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "2414:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 463,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "2387:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1127_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:14:5",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1049,
																"src": "2387:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1023_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:47:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1023_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2435:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1022,
														"src": "2387:53:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 469,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "2443:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:73:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "2387:73:5"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2101:80:5",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2195:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2222:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2214:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:27:5"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:5"
									},
									"scope": 688,
									"src": "2186:281:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2860:254:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 482,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "2889:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 481,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "2870:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "2870:37:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 486,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "2931:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 485,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2922:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "EmitStatement",
												"src": "2917:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 489,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "2964:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2964:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "3065:43:5",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 501,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "3079:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "ExpressionStatement",
															"src": "3079:18:5"
														}
													]
												},
												"id": 505,
												"nodeType": "IfStatement",
												"src": "2960:148:5",
												"trueBody": {
													"id": 500,
													"nodeType": "Block",
													"src": "2981:78:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 496,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "3024:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 497,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "3043:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 493,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "2995:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$987_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3003:20:5",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 906,
																	"src": "2995:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2995:53:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 499,
															"nodeType": "ExpressionStatement",
															"src": "2995:53:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "2473:301:5",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2788:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2813:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2805:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2845:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2832:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 477,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:46:5"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:5"
									},
									"scope": 688,
									"src": "2779:335:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "3120:145:5",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 511,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3361:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 688,
									"src": "3335:105:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 509,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3335:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 510,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3374:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "3844:68:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 519,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "3888:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 517,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "3861:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1127_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3873:14:5",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1049,
															"src": "3861:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1023_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1023_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3900:5:5",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1022,
													"src": "3861:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 516,
												"id": 522,
												"nodeType": "Return",
												"src": "3854:51:5"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "3447:340:5",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3801:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:5"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "3835:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:9:5"
									},
									"scope": 688,
									"src": "3792:120:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "4039:172:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 530,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "4053:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 531,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4065:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4053:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 544,
												"nodeType": "IfStatement",
												"src": "4049:91:5",
												"trueBody": {
													"id": 543,
													"nodeType": "Block",
													"src": "4077:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4126:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 537,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 536,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "4098:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 542,
															"nodeType": "RevertStatement",
															"src": "4091:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 548,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "4176:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 545,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "4149:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1127_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4161:14:5",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1049,
																"src": "4149:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1023_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1023_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4188:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1022,
														"src": "4149:44:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 551,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "4196:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4149:55:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "4149:55:5"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "3918:71:5",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4003:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4021:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4013:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:18:5"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:0:5"
									},
									"scope": 688,
									"src": "3994:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "4379:85:5",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 562,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "4407:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4407:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 564,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "4419:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 561,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "4394:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "EmitStatement",
												"src": "4389:39:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 568,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "4448:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 567,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "4438:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "4438:19:5"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "4217:109:5",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4340:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4360:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4352:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:18:5"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:5"
									},
									"scope": 688,
									"src": "4331:133:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "4470:201:5",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 576,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4767:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 688,
									"src": "4741:106:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 574,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4741:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 575,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4781:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "4963:69:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 584,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "5007:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 582,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "4980:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1127_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4992:14:5",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1049,
															"src": "4980:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1023_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1023_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5020:5:5",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1022,
													"src": "4980:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 581,
												"id": 587,
												"nodeType": "Return",
												"src": "4973:52:5"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "4854:51:5",
										"text": " @dev Returns the current beacon."
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4919:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:2:5"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "4954:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:9:5"
									},
									"scope": 688,
									"src": "4910:122:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "5161:390:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 595,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "5175:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5185:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5175:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5190:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5175:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5200:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5175:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 605,
												"nodeType": "IfStatement",
												"src": "5171:95:5",
												"trueBody": {
													"id": 604,
													"nodeType": "Block",
													"src": "5203:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 601,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 592,
																		"src": "5245:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 600,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "5224:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 603,
															"nodeType": "RevertStatement",
															"src": "5217:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 609,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "5303:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 606,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "5276:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1127_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5288:14:5",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1049,
																"src": "5276:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1023_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1023_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5316:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1022,
														"src": "5276:45:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 612,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "5324:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5276:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "5276:57:5"
											},
											{
												"assignments": [
													616
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5352:20:5",
														"nodeType": "VariableDeclaration",
														"scope": 634,
														"src": "5344:28:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 615,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 622,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 618,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "5383:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 617,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 734,
																"src": "5375:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$734_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5375:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$734",
																"typeString": "contract IBeacon"
															}
														},
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5394:14:5",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 733,
														"src": "5375:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:66:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 623,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "5424:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5424:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5450:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5424:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "5420:125:5",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "5463:82:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 629,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "5513:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 628,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "5484:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "5477:57:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "5038:71:5",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5123:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5142:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "5134:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:19:5"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 688,
									"src": "5114:437:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "6155:254:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "6176:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 643,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "6165:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "6165:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 648,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "6216:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 647,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "6201:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "EmitStatement",
												"src": "6196:30:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 651,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "6241:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6241:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6255:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6241:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 670,
													"nodeType": "Block",
													"src": "6360:43:5",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 667,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "6374:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6374:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 669,
															"nodeType": "ExpressionStatement",
															"src": "6374:18:5"
														}
													]
												},
												"id": 671,
												"nodeType": "IfStatement",
												"src": "6237:166:5",
												"trueBody": {
													"id": 666,
													"nodeType": "Block",
													"src": "6258:96:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 659,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 638,
																						"src": "6309:9:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 658,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 734,
																					"src": "6301:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$734_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 660,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6301:18:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$734",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:14:5",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 733,
																			"src": "6301:33:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6301:35:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 663,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "6338:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 655,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "6272:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$987_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6280:20:5",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 906,
																	"src": "6272:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 665,
															"nodeType": "ExpressionStatement",
															"src": "6272:71:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "5557:514:5",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "6085:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6116:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "6108:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6140:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "6127:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6127:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:38:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6155:0:5"
									},
									"scope": 688,
									"src": "6076:333:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "6634:86:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 677,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6648:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6648:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6648:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 685,
												"nodeType": "IfStatement",
												"src": "6644:70:5",
												"trueBody": {
													"id": 684,
													"nodeType": "Block",
													"src": "6663:51:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 681,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "6684:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6684:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 683,
															"nodeType": "RevertStatement",
															"src": "6677:26:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "6415:178:5",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6607:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6623:2:5"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:0:5"
									},
									"scope": 688,
									"src": "6598:122:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 689,
							"src": "449:6273:5",
							"usedErrors": [
								420,
								425,
								430,
								433
							],
							"usedEvents": [
								399,
								406,
								411
							]
						}
					],
					"src": "114:6609:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							724
						]
					},
					"id": 725,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 690,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 691,
								"nodeType": "StructuredDocumentation",
								"src": "125:598:6",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 724,
							"linearizedBaseContracts": [
								724
							],
							"name": "Proxy",
							"nameLocation": "742:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "1009:835:6",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1028:810:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1281:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1284:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1287:12:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1287:14:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1268:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1268:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1429:74:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1456:5:6"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "1463:14:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1479:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1482:12:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1482:14:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1498:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1501:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1443:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:60:6"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "1433:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1571:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1574:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1577:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1577:16:6"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1556:14:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1556:38:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1556:38:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1689:59:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1714:1:6",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1717:14:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1717:16:6"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1707:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1707:27:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1707:27:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1682:66:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1687:1:6",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1769:59:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1794:1:6",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1797:14:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1797:16:6"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1787:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1787:27:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1787:27:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1761:67:6",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1615:6:6"
															},
															"nodeType": "YulSwitch",
															"src": "1608:220:6"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 694,
														"isOffset": false,
														"isSlot": false,
														"src": "1463:14:6",
														"valueSize": 1
													}
												],
												"id": 697,
												"nodeType": "InlineAssembly",
												"src": "1019:819:6"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "754:190:6",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "958:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "976:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "968:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:24:6"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:0:6"
									},
									"scope": 724,
									"src": "949:895:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "1850:173:6",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."
									},
									"id": 705,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2037:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2052:2:6"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "2086:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:9:6"
									},
									"scope": 724,
									"src": "2028:67:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "2361:45:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 710,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "2381:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2381:17:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 709,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "2371:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2371:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "2371:28:6"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "2101:217:6",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2332:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2341:2:6"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2361:0:6"
									},
									"scope": 724,
									"src": "2323:83:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "2639:28:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 719,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "2649:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2649:11:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "2649:11:6"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "2412:186:6",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 723,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2611:2:6"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2639:0:6"
									},
									"scope": 724,
									"src": "2603:64:6",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 725,
							"src": "724:1945:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:2571:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							734
						]
					},
					"id": 735,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 726,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 727,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:7",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 734,
							"linearizedBaseContracts": [
								734
							],
							"name": "IBeacon",
							"nameLocation": "224:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:7",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:7"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "460:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:7"
									},
									"scope": 734,
									"src": "411:58:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 735,
							"src": "214:257:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							987
						]
					},
					"id": 988,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 736,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 737,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 987,
							"linearizedBaseContracts": [
								987
							],
							"name": "Address",
							"nameLocation": "203:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:8",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 742,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "349:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:8"
									},
									"src": "316:50:8"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 747,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "475:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:8"
									},
									"src": "452:39:8"
								},
								{
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:8",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 750,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:8"
									},
									"src": "591:24:8"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "1602:260:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 760,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$987",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$987",
																		"typeString": "library Address"
																	}
																],
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 758,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 763,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "1640:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 773,
												"nodeType": "IfStatement",
												"src": "1612:109:8",
												"trueBody": {
													"id": 772,
													"nodeType": "Block",
													"src": "1648:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 768,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$987",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$987",
																					"typeString": "library Address"
																				}
																			],
																			"id": 767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 766,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 765,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "1669:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 771,
															"nodeType": "RevertStatement",
															"src": "1662:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													775,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 790,
														"src": "1732:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 774,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 782,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 776,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 753,
																"src": "1750:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 778,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "1772:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:8"
											},
											{
												"condition": {
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:8",
													"subExpression": {
														"id": 783,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "1798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 789,
												"nodeType": "IfStatement",
												"src": "1793:63:8",
												"trueBody": {
													"id": 788,
													"nodeType": "Block",
													"src": "1807:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 785,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "1828:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 787,
															"nodeType": "RevertStatement",
															"src": "1821:24:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "1550:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "1577:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:8"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:8"
									},
									"scope": 987,
									"src": "1531:331:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 807,
										"nodeType": "Block",
										"src": "2794:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 802,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2833:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 803,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "2841:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 801,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "2811:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 800,
												"id": 806,
												"nodeType": "Return",
												"src": "2804:45:8"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "2727:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "2743:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 795,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:8"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "2780:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 798,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:8"
									},
									"scope": 987,
									"src": "2705:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "3293:279:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 822,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$987",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$987",
																		"typeString": "library Address"
																	}
																],
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 820,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 825,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "3331:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 835,
												"nodeType": "IfStatement",
												"src": "3303:108:8",
												"trueBody": {
													"id": 834,
													"nodeType": "Block",
													"src": "3338:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 830,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$987",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$987",
																					"typeString": "library Address"
																				}
																			],
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 828,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 827,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "3359:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 833,
															"nodeType": "RevertStatement",
															"src": "3352:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													837,
													839
												],
												"declarations": [
													{
														"constant": false,
														"id": 837,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "3421:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 836,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 839,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "3435:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 838,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 846,
												"initialValue": {
													"arguments": [
														{
															"id": 844,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "3488:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 840,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "3462:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 842,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "3481:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 848,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "3537:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "3545:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 850,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "3554:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 847,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "3510:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 819,
												"id": 852,
												"nodeType": "Return",
												"src": "3503:62:8"
											}
										]
									},
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "3211:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "3227:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 812,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "3246:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:8"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "3279:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 817,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:8"
									},
									"scope": 987,
									"src": "3180:392:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "3811:154:8",
										"statements": [
											{
												"assignments": [
													865,
													867
												],
												"declarations": [
													{
														"constant": false,
														"id": 865,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "3822:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 864,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 867,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 879,
														"src": "3836:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 866,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 872,
												"initialValue": {
													"arguments": [
														{
															"id": 870,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "3881:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 868,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "3863:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 874,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "3930:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "3938:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 876,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "3947:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 873,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "3903:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 863,
												"id": 878,
												"nodeType": "Return",
												"src": "3896:62:8"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "3739:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "3755:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:8"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "3797:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 861,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:8"
									},
									"scope": 987,
									"src": "3711:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "4203:156:8",
										"statements": [
											{
												"assignments": [
													891,
													893
												],
												"declarations": [
													{
														"constant": false,
														"id": 891,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 905,
														"src": "4214:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 890,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 893,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 905,
														"src": "4228:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 892,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 898,
												"initialValue": {
													"arguments": [
														{
															"id": 896,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "4275:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 894,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "4255:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 900,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "4324:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 901,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "4332:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 902,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "4341:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 899,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "4297:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 889,
												"id": 904,
												"nodeType": "Return",
												"src": "4290:62:8"
											}
										]
									},
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "4136:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "4152:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 884,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:8"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "4189:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 887,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:8"
									},
									"scope": 987,
									"src": "4106:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "4783:424:8",
										"statements": [
											{
												"condition": {
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:8",
													"subExpression": {
														"id": 918,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "4798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 943,
													"nodeType": "Block",
													"src": "4857:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 925,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 913,
																			"src": "5045:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 929,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 909,
																				"src": "5071:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 940,
															"nodeType": "IfStatement",
															"src": "5041:119:8",
															"trueBody": {
																"id": 939,
																"nodeType": "Block",
																"src": "5096:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 936,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 909,
																					"src": "5138:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 935,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 747,
																				"src": "5121:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 938,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 941,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "5180:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 917,
															"id": 942,
															"nodeType": "Return",
															"src": "5173:17:8"
														}
													]
												},
												"id": 944,
												"nodeType": "IfStatement",
												"src": "4793:408:8",
												"trueBody": {
													"id": 924,
													"nodeType": "Block",
													"src": "4807:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 921,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "4829:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 920,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "4821:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 923,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "4670:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "4694:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 910,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "4716:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 912,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:8"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "4769:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 915,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:8"
									},
									"scope": 987,
									"src": "4625:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "5509:122:8",
										"statements": [
											{
												"condition": {
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:8",
													"subExpression": {
														"id": 956,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "5524:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 965,
													"nodeType": "Block",
													"src": "5583:42:8",
													"statements": [
														{
															"expression": {
																"id": 963,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "5604:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 955,
															"id": 964,
															"nodeType": "Return",
															"src": "5597:17:8"
														}
													]
												},
												"id": 966,
												"nodeType": "IfStatement",
												"src": "5519:106:8",
												"trueBody": {
													"id": 962,
													"nodeType": "Block",
													"src": "5533:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 959,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "5555:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 958,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "5547:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 961,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5433:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 948,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5447:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 950,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:8"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "5495:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 953,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:8"
									},
									"scope": 987,
									"src": "5407:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "5798:461:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 974,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "5874:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "6204:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 980,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "6225:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 982,
															"nodeType": "RevertStatement",
															"src": "6218:24:8"
														}
													]
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "5870:383:8",
												"trueBody": {
													"id": 979,
													"nodeType": "Block",
													"src": "5897:301:8",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "6055:133:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 971,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 971,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:8",
																	"valueSize": 1
																}
															],
															"id": 978,
															"nodeType": "InlineAssembly",
															"src": "6046:142:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 969,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "5760:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 970,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:8"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:8"
									},
									"scope": 987,
									"src": "5743:516:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 988,
							"src": "195:6066:8",
							"usedErrors": [
								742,
								747,
								750
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1017
						]
					},
					"id": 1018,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 989,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 990,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1017,
							"linearizedBaseContracts": [
								1017
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 995,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 994,
												"id": 997,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1017,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1004,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1003,
												"id": 1006,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1001,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1017,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1012,
												"id": 1014,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1017,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1018,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1127
						]
					},
					"id": 1128,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1019,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1020,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:10",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1127,
							"linearizedBaseContracts": [
								1127
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1023,
									"members": [
										{
											"constant": false,
											"id": 1022,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1023,
											"src": "1300:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1021,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:10",
									"nodeType": "StructDefinition",
									"scope": 1127,
									"src": "1271:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1026,
									"members": [
										{
											"constant": false,
											"id": 1025,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1026,
											"src": "1355:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1024,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:10",
									"nodeType": "StructDefinition",
									"scope": 1127,
									"src": "1326:46:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1029,
									"members": [
										{
											"constant": false,
											"id": 1028,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1029,
											"src": "1407:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1027,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:10",
									"nodeType": "StructDefinition",
									"scope": 1127,
									"src": "1378:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1032,
									"members": [
										{
											"constant": false,
											"id": 1031,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1032,
											"src": "1462:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1030,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:10",
									"nodeType": "StructDefinition",
									"scope": 1127,
									"src": "1433:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1035,
									"members": [
										{
											"constant": false,
											"id": 1034,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1035,
											"src": "1516:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1033,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:10",
									"nodeType": "StructDefinition",
									"scope": 1127,
									"src": "1488:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1038,
									"members": [
										{
											"constant": false,
											"id": 1037,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1038,
											"src": "1568:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1036,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:10",
									"nodeType": "StructDefinition",
									"scope": 1127,
									"src": "1541:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "1768:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1830:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1844:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1854:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1045,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1041,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:10",
														"valueSize": 1
													}
												],
												"id": 1047,
												"nodeType": "InlineAssembly",
												"src": "1821:47:10"
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:10",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "1708:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1040,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:10"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "1745:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1023_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1044,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1043,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1023,
														"src": "1745:11:10"
													},
													"referencedDeclaration": 1023,
													"src": "1745:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1023_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:10"
									},
									"scope": 1127,
									"src": "1684:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "2056:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2118:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2132:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2142:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1056,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1052,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:10",
														"valueSize": 1
													}
												],
												"id": 1058,
												"nodeType": "InlineAssembly",
												"src": "2109:47:10"
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:10",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "1996:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1051,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:10"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "2033:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1026_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1054,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1026,
														"src": "2033:11:10"
													},
													"referencedDeclaration": 1026,
													"src": "2033:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1026_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:10"
									},
									"scope": 1127,
									"src": "1972:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "2344:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2406:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2420:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2430:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1067,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1063,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:10",
														"valueSize": 1
													}
												],
												"id": 1069,
												"nodeType": "InlineAssembly",
												"src": "2397:47:10"
											}
										]
									},
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:10",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "2284:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1062,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:10"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "2321:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1029_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1066,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1065,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1029,
														"src": "2321:11:10"
													},
													"referencedDeclaration": 1029,
													"src": "2321:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1029_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:10"
									},
									"scope": 1127,
									"src": "2260:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "2632:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2694:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2708:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2718:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1078,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1074,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:10",
														"valueSize": 1
													}
												],
												"id": 1080,
												"nodeType": "InlineAssembly",
												"src": "2685:47:10"
											}
										]
									},
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:10",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2572:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1073,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:10"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2609:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1032_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1077,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1076,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1032,
														"src": "2609:11:10"
													},
													"referencedDeclaration": 1032,
													"src": "2609:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1032_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:10"
									},
									"scope": 1127,
									"src": "2548:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "2917:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2979:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2993:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3003:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1089,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1085,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:10",
														"valueSize": 1
													}
												],
												"id": 1091,
												"nodeType": "InlineAssembly",
												"src": "2970:47:10"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:10",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "2858:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1084,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:10"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "2895:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1035_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1088,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1087,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1035,
														"src": "2895:10:10"
													},
													"referencedDeclaration": 1035,
													"src": "2895:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1035_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:10"
									},
									"scope": 1127,
									"src": "2835:188:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "3225:112:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3287:44:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3301:20:10",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3311:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1100,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1096,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1102,
												"nodeType": "InlineAssembly",
												"src": "3278:53:10"
											}
										]
									},
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:10",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "3158:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1095,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:10"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "3203:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1035_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1099,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1098,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1035,
														"src": "3203:10:10"
													},
													"referencedDeclaration": 1035,
													"src": "3203:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1035_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:10"
									},
									"scope": 1127,
									"src": "3135:202:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "3513:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3575:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3589:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3599:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1111,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1107,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:10",
														"valueSize": 1
													}
												],
												"id": 1113,
												"nodeType": "InlineAssembly",
												"src": "3566:47:10"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:10",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "3455:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1106,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:10"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "3492:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1038_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1110,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1109,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1038,
														"src": "3492:9:10"
													},
													"referencedDeclaration": 1038,
													"src": "3492:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1038_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:10"
									},
									"scope": 1127,
									"src": "3433:186:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "3816:112:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3878:44:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3892:20:10",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3902:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1122,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1118,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1124,
												"nodeType": "InlineAssembly",
												"src": "3869:53:10"
											}
										]
									},
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:10",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "3751:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:10"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "3795:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1038_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1121,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1120,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1038,
														"src": "3795:9:10"
													},
													"referencedDeclaration": 1038,
													"src": "3795:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1038_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:10"
									},
									"scope": 1127,
									"src": "3729:199:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1128,
							"src": "1245:2685:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:10"
				},
				"id": 10
			},
			"contracts/VolumProxy.sol": {
				"ast": {
					"absolutePath": "contracts/VolumProxy.sol",
					"exportedSymbols": {
						"Address": [
							987
						],
						"Context": [
							1017
						],
						"ERC1967Proxy": [
							216
						],
						"ERC1967Upgrade": [
							385
						],
						"ERC1967Utils": [
							688
						],
						"IBeacon": [
							734
						],
						"IERC1822Proxiable": [
							178
						],
						"IERC1967": [
							168
						],
						"Ownable": [
							147
						],
						"Proxy": [
							724
						],
						"StorageSlot": [
							1127
						],
						"VolumProxy": [
							1236
						]
					},
					"id": 1237,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1129,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
							"id": 1130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1237,
							"sourceUnit": 386,
							"src": "60:66:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
							"id": 1131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1237,
							"sourceUnit": 217,
							"src": "128:64:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1132,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1237,
							"sourceUnit": 148,
							"src": "194:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1133,
										"name": "ERC1967Upgrade",
										"nameLocations": [
											"273:14:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 385,
										"src": "273:14:11"
									},
									"id": 1134,
									"nodeType": "InheritanceSpecifier",
									"src": "273:14:11"
								},
								{
									"baseName": {
										"id": 1135,
										"name": "ERC1967Proxy",
										"nameLocations": [
											"289:12:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 216,
										"src": "289:12:11"
									},
									"id": 1136,
									"nodeType": "InheritanceSpecifier",
									"src": "289:12:11"
								},
								{
									"baseName": {
										"id": 1137,
										"name": "Ownable",
										"nameLocations": [
											"303:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "303:7:11"
									},
									"id": 1138,
									"nodeType": "InheritanceSpecifier",
									"src": "303:7:11"
								}
							],
							"canonicalName": "VolumProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1236,
							"linearizedBaseContracts": [
								1236,
								147,
								1017,
								216,
								724,
								385,
								168
							],
							"name": "VolumProxy",
							"nameLocation": "259:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "396f7b23",
									"id": 1140,
									"mutability": "mutable",
									"name": "pendingImplementation",
									"nameLocation": "333:21:11",
									"nodeType": "VariableDeclaration",
									"scope": 1236,
									"src": "318:36:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1139,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "318:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8309d39e125ec00aa8f0a092ca3393019d7384202aff703de066548b28dd76ad",
									"id": 1144,
									"name": "NewImplementationProposed",
									"nameLocation": "369:25:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"indexed": true,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "411:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "395:33:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "395:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:35:11"
									},
									"src": "363:67:11"
								},
								{
									"anonymous": false,
									"eventSelector": "51ea6ffdc9909d5ca341259f7221902e0676585d833e2bb21fa923c85e862886",
									"id": 1148,
									"name": "ImplementationUpgraded",
									"nameLocation": "442:22:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"indexed": true,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "481:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "465:33:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:35:11"
									},
									"src": "436:64:11"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "639:8:11",
										"statements": []
									},
									"id": 1165,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1157,
													"name": "_logic",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1150,
													"src": "594:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1158,
													"name": "_data",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1154,
													"src": "602:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												}
											],
											"id": 1159,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1156,
												"name": "ERC1967Proxy",
												"nameLocations": [
													"581:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 216,
												"src": "581:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "581:27:11"
										},
										{
											"arguments": [
												{
													"id": 1161,
													"name": "_admin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1152,
													"src": "626:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1162,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1160,
												"name": "Ownable",
												"nameLocations": [
													"618:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "618:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "618:15:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "_logic",
												"nameLocation": "528:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "520:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "_admin",
												"nameLocation": "544:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "536:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "565:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "552:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1153,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "552:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "519:52:11"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "639:0:11"
									},
									"scope": 1236,
									"src": "508:139:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "733:220:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1173,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "752:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "781:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "773:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1174,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "773:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "773:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "752:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e657720696d706c656d656e746174696f6e2063616e6e6f7420626520746865207a65726f2061646472657373",
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "785:47:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1f33b3bfd2dba3464feb9057ff18155cc023a705b2b9680ba969ea650eb193",
																"typeString": "literal_string \"New implementation cannot be the zero address\""
															},
															"value": "New implementation cannot be the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1f33b3bfd2dba3464feb9057ff18155cc023a705b2b9680ba969ea650eb193",
																"typeString": "literal_string \"New implementation cannot be the zero address\""
															}
														],
														"id": 1172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "744:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:89:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "744:89:11"
											},
											{
												"expression": {
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1182,
														"name": "pendingImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "844:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1183,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "868:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "844:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "844:41:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1187,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "927:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1186,
														"name": "NewImplementationProposed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "901:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "901:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1189,
												"nodeType": "EmitStatement",
												"src": "896:49:11"
											}
										]
									},
									"functionSelector": "47757fb6",
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1170,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1169,
												"name": "onlyOwner",
												"nameLocations": [
													"723:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "723:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "723:9:11"
										}
									],
									"name": "proposeNewImplementation",
									"nameLocation": "664:24:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "697:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "689:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:27:11"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:0:11"
									},
									"scope": 1236,
									"src": "655:298:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "1014:247:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1197,
																"name": "pendingImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "1033:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1066:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1058:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1198,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1058:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1058:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1033:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206e657720696d706c656d656e746174696f6e2070726f706f736564",
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1070:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_476314c299d593396696100b44df122d76c1b7eee385a424afedbf0f97c2fa12",
																"typeString": "literal_string \"No new implementation proposed\""
															},
															"value": "No new implementation proposed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_476314c299d593396696100b44df122d76c1b7eee385a424afedbf0f97c2fa12",
																"typeString": "literal_string \"No new implementation proposed\""
															}
														],
														"id": 1196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1025:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1025:78:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "ExpressionStatement",
												"src": "1025:78:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1207,
															"name": "pendingImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "1125:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1206,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "1114:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1114:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "1114:33:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1211,
															"name": "pendingImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "1186:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1210,
														"name": "ImplementationUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "1163:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1163:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1213,
												"nodeType": "EmitStatement",
												"src": "1158:50:11"
											},
											{
												"expression": {
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1214,
														"name": "pendingImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "1219:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1251:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1243:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1215,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1243:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1243:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1219:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "1219:34:11"
											}
										]
									},
									"functionSelector": "2031a346",
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1194,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1193,
												"name": "onlyOwner",
												"nameLocations": [
													"1004:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1004:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1004:9:11"
										}
									],
									"name": "approveNewImplementation",
									"nameLocation": "970:24:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "994:2:11"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1014:0:11"
									},
									"scope": 1236,
									"src": "961:300:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "1328:46:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1227,
														"name": "_getImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "1346:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1346:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1226,
												"id": 1229,
												"nodeType": "Return",
												"src": "1339:27:11"
											}
										]
									},
									"functionSelector": "aaf10f42",
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1278:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1295:2:11"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1319:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1318:9:11"
									},
									"scope": 1236,
									"src": "1269:105:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "1409:55:11",
										"statements": []
									},
									"id": 1235,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1389:2:11"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1409:0:11"
									},
									"scope": 1236,
									"src": "1382:82:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1237,
							"src": "250:1217:11",
							"usedErrors": [
								13,
								18,
								420,
								433,
								747,
								750
							],
							"usedEvents": [
								24,
								155,
								162,
								167,
								399,
								1144,
								1148
							]
						}
					],
					"src": "33:1436:11"
				},
				"id": 11
			}
		}
	}
}