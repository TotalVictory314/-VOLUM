{
	"id": "45226559b31b5cc1a039eac8c1183294",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/VolumICO.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract VolumICO is ReentrancyGuard, Ownable {\r\n    IERC20 public volumToken;\r\n    uint256 public constant ICO_ALLOCATION = 300_000_000 * (10 ** 18);\r\n    uint256 public constant ICO_PRICE = 1 ether; // Initial ICO price, adjustable\r\n    uint256 public tokensSold;\r\n    uint256 public icoEndTime;\r\n    uint256 public burnRateOnBuy = 1; // Example burn rate of 1%, adjustable\r\n\r\n    event TokensPurchased(address indexed purchaser, uint256 amount);\r\n\r\n    constructor(address _volumTokenAddress, uint256 _icoDuration) Ownable(msg.sender) {\r\n        require(_volumTokenAddress != address(0), \"VolumToken address cannot be zero\");\r\n        volumToken = IERC20(_volumTokenAddress);\r\n        icoEndTime = block.timestamp + _icoDuration;\r\n    }\r\n\r\n    function buyTokens() external payable nonReentrant {\r\n        require(block.timestamp < icoEndTime, \"ICO has ended\");\r\n        require(msg.value > 0, \"Amount to purchase must be greater than 0\");\r\n\r\n        uint256 amountToPurchase = msg.value / ICO_PRICE;\r\n        require(amountToPurchase > 0, \"Amount to purchase must be greater than 0\");\r\n        require(tokensSold + amountToPurchase <= ICO_ALLOCATION, \"ICO allocation exceeded\");\r\n\r\n        uint256 burnAmount = (amountToPurchase * burnRateOnBuy) / 100;\r\n        require(burnAmount <= volumToken.balanceOf(address(this)), \"Insufficient token balance in ICO contract\");\r\n\r\n        tokensSold += amountToPurchase;\r\n        volumToken.transfer(msg.sender, amountToPurchase);\r\n\r\n        emit TokensPurchased(msg.sender, amountToPurchase);\r\n    }\r\n\r\n    function withdrawFunds() external onlyOwner {\r\n        payable(owner()).transfer(address(this).balance);\r\n    }\r\n\r\n    function endIco() external onlyOwner {\r\n        require(block.timestamp < icoEndTime, \"ICO has already ended\");\r\n        icoEndTime = block.timestamp; // End the ICO immediately\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/VolumICO.sol": {
				"VolumICO": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_volumTokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_icoDuration",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ICO_ALLOCATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ICO_PRICE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnRateOnBuy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endIco",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "icoEndTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokensSold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "volumToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/VolumICO.sol\":238:2096  contract VolumICO is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/VolumICO.sol\":572:573  1 */\n  0x01\n    /* \"contracts/VolumICO.sol\":541:573  uint256 public burnRateOnBuy = 1 */\n  0x05\n  sstore\n    /* \"contracts/VolumICO.sol\":694:977  constructor(address _volumTokenAddress, uint256 _icoDuration) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/VolumICO.sol\":764:774  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/VolumICO.sol\":825:826  0 */\n  0x00\n    /* \"contracts/VolumICO.sol\":795:827  _volumTokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/VolumICO.sol\":795:813  _volumTokenAddress */\n  dup3\n    /* \"contracts/VolumICO.sol\":795:827  _volumTokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/VolumICO.sol\":787:865  require(_volumTokenAddress != address(0), \"VolumToken address cannot be zero\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"contracts/VolumICO.sol\":896:914  _volumTokenAddress */\n  dup2\n    /* \"contracts/VolumICO.sol\":876:886  volumToken */\n  0x02\n  0x00\n    /* \"contracts/VolumICO.sol\":876:915  volumToken = IERC20(_volumTokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/VolumICO.sol\":957:969  _icoDuration */\n  dup1\n    /* \"contracts/VolumICO.sol\":939:954  block.timestamp */\n  timestamp\n    /* \"contracts/VolumICO.sol\":939:969  block.timestamp + _icoDuration */\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n    /* \"contracts/VolumICO.sol\":926:936  icoEndTime */\n  0x04\n    /* \"contracts/VolumICO.sol\":926:969  icoEndTime = block.timestamp + _icoDuration */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/VolumICO.sol\":694:977  constructor(address _volumTokenAddress, uint256 _icoDuration) Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"contracts/VolumICO.sol\":238:2096  contract VolumICO is ReentrancyGuard, Ownable {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_23:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_25:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_26:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_43\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_25\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_27:\n    /* \"#utility.yul\":641:665   */\n  tag_45\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_26\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_46:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_28:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_48\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_27\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_29:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_30:\n    /* \"#utility.yul\":1001:1025   */\n  tag_51\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_29\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_52:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_31:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_54\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_30\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1309:1428   */\ntag_56:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_58\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_28\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_59\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_31\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1718:1836   */\ntag_32:\n    /* \"#utility.yul\":1805:1829   */\n  tag_61\n    /* \"#utility.yul\":1823:1828   */\n  dup2\n    /* \"#utility.yul\":1805:1829   */\n  tag_26\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1800:1803   */\n  dup3\n    /* \"#utility.yul\":1793:1830   */\n  mstore\n    /* \"#utility.yul\":1718:1836   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1842:2064   */\ntag_11:\n    /* \"#utility.yul\":1935:1939   */\n  0x00\n    /* \"#utility.yul\":1973:1975   */\n  0x20\n    /* \"#utility.yul\":1962:1971   */\n  dup3\n    /* \"#utility.yul\":1958:1976   */\n  add\n    /* \"#utility.yul\":1950:1976   */\n  swap1\n  pop\n    /* \"#utility.yul\":1986:2057   */\n  tag_63\n    /* \"#utility.yul\":2054:2055   */\n  0x00\n    /* \"#utility.yul\":2043:2052   */\n  dup4\n    /* \"#utility.yul\":2039:2056   */\n  add\n    /* \"#utility.yul\":2030:2036   */\n  dup5\n    /* \"#utility.yul\":1986:2057   */\n  tag_32\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1842:2064   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2070:2239   */\ntag_33:\n    /* \"#utility.yul\":2154:2165   */\n  0x00\n    /* \"#utility.yul\":2188:2194   */\n  dup3\n    /* \"#utility.yul\":2183:2186   */\n  dup3\n    /* \"#utility.yul\":2176:2195   */\n  mstore\n    /* \"#utility.yul\":2228:2232   */\n  0x20\n    /* \"#utility.yul\":2223:2226   */\n  dup3\n    /* \"#utility.yul\":2219:2233   */\n  add\n    /* \"#utility.yul\":2204:2233   */\n  swap1\n  pop\n    /* \"#utility.yul\":2070:2239   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2245:2465   */\ntag_34:\n    /* \"#utility.yul\":2385:2419   */\n  0x566f6c756d546f6b656e20616464726573732063616e6e6f74206265207a6572\n    /* \"#utility.yul\":2381:2382   */\n  0x00\n    /* \"#utility.yul\":2373:2379   */\n  dup3\n    /* \"#utility.yul\":2369:2383   */\n  add\n    /* \"#utility.yul\":2362:2420   */\n  mstore\n    /* \"#utility.yul\":2454:2457   */\n  0x6f00000000000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2449:2451   */\n  0x20\n    /* \"#utility.yul\":2441:2447   */\n  dup3\n    /* \"#utility.yul\":2437:2452   */\n  add\n    /* \"#utility.yul\":2430:2458   */\n  mstore\n    /* \"#utility.yul\":2245:2465   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2471:2837   */\ntag_35:\n    /* \"#utility.yul\":2613:2616   */\n  0x00\n    /* \"#utility.yul\":2634:2701   */\n  tag_67\n    /* \"#utility.yul\":2698:2700   */\n  0x21\n    /* \"#utility.yul\":2693:2696   */\n  dup4\n    /* \"#utility.yul\":2634:2701   */\n  tag_33\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2627:2701   */\n  swap2\n  pop\n    /* \"#utility.yul\":2710:2803   */\n  tag_68\n    /* \"#utility.yul\":2799:2802   */\n  dup3\n    /* \"#utility.yul\":2710:2803   */\n  tag_34\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2828:2830   */\n  0x40\n    /* \"#utility.yul\":2823:2826   */\n  dup3\n    /* \"#utility.yul\":2819:2831   */\n  add\n    /* \"#utility.yul\":2812:2831   */\n  swap1\n  pop\n    /* \"#utility.yul\":2471:2837   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2843:3262   */\ntag_17:\n    /* \"#utility.yul\":3009:3013   */\n  0x00\n    /* \"#utility.yul\":3047:3049   */\n  0x20\n    /* \"#utility.yul\":3036:3045   */\n  dup3\n    /* \"#utility.yul\":3032:3050   */\n  add\n    /* \"#utility.yul\":3024:3050   */\n  swap1\n  pop\n    /* \"#utility.yul\":3096:3105   */\n  dup2\n    /* \"#utility.yul\":3090:3094   */\n  dup2\n    /* \"#utility.yul\":3086:3106   */\n  sub\n    /* \"#utility.yul\":3082:3083   */\n  0x00\n    /* \"#utility.yul\":3071:3080   */\n  dup4\n    /* \"#utility.yul\":3067:3084   */\n  add\n    /* \"#utility.yul\":3060:3107   */\n  mstore\n    /* \"#utility.yul\":3124:3255   */\n  tag_70\n    /* \"#utility.yul\":3250:3254   */\n  dup2\n    /* \"#utility.yul\":3124:3255   */\n  tag_35\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3116:3255   */\n  swap1\n  pop\n    /* \"#utility.yul\":2843:3262   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3268:3448   */\ntag_36:\n    /* \"#utility.yul\":3316:3393   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3313:3314   */\n  0x00\n    /* \"#utility.yul\":3306:3394   */\n  mstore\n    /* \"#utility.yul\":3413:3417   */\n  0x11\n    /* \"#utility.yul\":3410:3411   */\n  0x04\n    /* \"#utility.yul\":3403:3418   */\n  mstore\n    /* \"#utility.yul\":3437:3441   */\n  0x24\n    /* \"#utility.yul\":3434:3435   */\n  0x00\n    /* \"#utility.yul\":3427:3442   */\n  revert\n    /* \"#utility.yul\":3454:3645   */\ntag_19:\n    /* \"#utility.yul\":3494:3497   */\n  0x00\n    /* \"#utility.yul\":3513:3533   */\n  tag_73\n    /* \"#utility.yul\":3531:3532   */\n  dup3\n    /* \"#utility.yul\":3513:3533   */\n  tag_29\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3508:3533   */\n  swap2\n  pop\n    /* \"#utility.yul\":3547:3567   */\n  tag_74\n    /* \"#utility.yul\":3565:3566   */\n  dup4\n    /* \"#utility.yul\":3547:3567   */\n  tag_29\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3542:3567   */\n  swap3\n  pop\n    /* \"#utility.yul\":3590:3591   */\n  dup3\n    /* \"#utility.yul\":3587:3588   */\n  dup3\n    /* \"#utility.yul\":3583:3592   */\n  add\n    /* \"#utility.yul\":3576:3592   */\n  swap1\n  pop\n    /* \"#utility.yul\":3611:3614   */\n  dup1\n    /* \"#utility.yul\":3608:3609   */\n  dup3\n    /* \"#utility.yul\":3605:3615   */\n  gt\n    /* \"#utility.yul\":3602:3638   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":3618:3636   */\n  tag_76\n  tag_36\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3602:3638   */\ntag_75:\n    /* \"#utility.yul\":3454:3645   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/VolumICO.sol\":238:2096  contract VolumICO is ReentrancyGuard, Ownable {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/VolumICO.sol\":238:2096  contract VolumICO is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9af08dd5\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x9af08dd5\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa715bf33\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb0a65b3e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd0febe4c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe657807b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_14:\n      dup1\n      0x24600fc3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x4513ef7a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x518ab2a8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7e1055b6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/VolumICO.sol\":1790:1901  function withdrawFunds() external onlyOwner {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"contracts/VolumICO.sol\":541:573  uint256 public burnRateOnBuy = 1 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/VolumICO.sol\":477:502  uint256 public tokensSold */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/VolumICO.sol\":509:534  uint256 public icoEndTime */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/VolumICO.sol\":291:315  IERC20 public volumToken */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/VolumICO.sol\":394:437  uint256 public constant ICO_PRICE = 1 ether */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/VolumICO.sol\":322:387  uint256 public constant ICO_ALLOCATION = 300_000_000 * (10 ** 18) */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/VolumICO.sol\":985:1782  function buyTokens() external payable nonReentrant {... */\n    tag_11:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/VolumICO.sol\":1909:2093  function endIco() external onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/VolumICO.sol\":1790:1901  function withdrawFunds() external onlyOwner {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_63:\n        /* \"contracts/VolumICO.sol\":1853:1860  owner() */\n      tag_66\n        /* \"contracts/VolumICO.sol\":1853:1858  owner */\n      tag_36\n        /* \"contracts/VolumICO.sol\":1853:1860  owner() */\n      jump\t// in\n    tag_66:\n        /* \"contracts/VolumICO.sol\":1845:1870  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/VolumICO.sol\":1845:1893  payable(owner()).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/VolumICO.sol\":1871:1892  address(this).balance */\n      selfbalance\n        /* \"contracts/VolumICO.sol\":1845:1893  payable(owner()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n        /* \"contracts/VolumICO.sol\":1790:1901  function withdrawFunds() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/VolumICO.sol\":541:573  uint256 public burnRateOnBuy = 1 */\n    tag_20:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/VolumICO.sol\":477:502  uint256 public tokensSold */\n    tag_25:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/VolumICO.sol\":509:534  uint256 public icoEndTime */\n    tag_32:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/VolumICO.sol\":291:315  IERC20 public volumToken */\n    tag_41:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/VolumICO.sol\":394:437  uint256 public constant ICO_PRICE = 1 ether */\n    tag_46:\n        /* \"contracts/VolumICO.sol\":430:437  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/VolumICO.sol\":394:437  uint256 public constant ICO_PRICE = 1 ether */\n      dup2\n      jump\t// out\n        /* \"contracts/VolumICO.sol\":322:387  uint256 public constant ICO_ALLOCATION = 300_000_000 * (10 ** 18) */\n    tag_50:\n        /* \"contracts/VolumICO.sol\":363:387  300_000_000 * (10 ** 18) */\n      0xf8277896582678ac000000\n        /* \"contracts/VolumICO.sol\":322:387  uint256 public constant ICO_ALLOCATION = 300_000_000 * (10 ** 18) */\n      dup2\n      jump\t// out\n        /* \"contracts/VolumICO.sol\":985:1782  function buyTokens() external payable nonReentrant {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_76\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_77\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_76:\n        /* \"contracts/VolumICO.sol\":1073:1083  icoEndTime */\n      sload(0x04)\n        /* \"contracts/VolumICO.sol\":1055:1070  block.timestamp */\n      timestamp\n        /* \"contracts/VolumICO.sol\":1055:1083  block.timestamp < icoEndTime */\n      lt\n        /* \"contracts/VolumICO.sol\":1047:1101  require(block.timestamp < icoEndTime, \"ICO has ended\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"contracts/VolumICO.sol\":1132:1133  0 */\n      0x00\n        /* \"contracts/VolumICO.sol\":1120:1129  msg.value */\n      callvalue\n        /* \"contracts/VolumICO.sol\":1120:1133  msg.value > 0 */\n      gt\n        /* \"contracts/VolumICO.sol\":1112:1179  require(msg.value > 0, \"Amount to purchase must be greater than 0\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"contracts/VolumICO.sol\":1192:1216  uint256 amountToPurchase */\n      0x00\n        /* \"contracts/VolumICO.sol\":430:437  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/VolumICO.sol\":1219:1228  msg.value */\n      callvalue\n        /* \"contracts/VolumICO.sol\":1219:1240  msg.value / ICO_PRICE */\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"contracts/VolumICO.sol\":1192:1240  uint256 amountToPurchase = msg.value / ICO_PRICE */\n      swap1\n      pop\n        /* \"contracts/VolumICO.sol\":1278:1279  0 */\n      0x00\n        /* \"contracts/VolumICO.sol\":1259:1275  amountToPurchase */\n      dup2\n        /* \"contracts/VolumICO.sol\":1259:1279  amountToPurchase > 0 */\n      gt\n        /* \"contracts/VolumICO.sol\":1251:1325  require(amountToPurchase > 0, \"Amount to purchase must be greater than 0\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_84\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"contracts/VolumICO.sol\":363:387  300_000_000 * (10 ** 18) */\n      0xf8277896582678ac000000\n        /* \"contracts/VolumICO.sol\":1357:1373  amountToPurchase */\n      dup2\n        /* \"contracts/VolumICO.sol\":1344:1354  tokensSold */\n      sload(0x03)\n        /* \"contracts/VolumICO.sol\":1344:1373  tokensSold + amountToPurchase */\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"contracts/VolumICO.sol\":1344:1391  tokensSold + amountToPurchase <= ICO_ALLOCATION */\n      gt\n      iszero\n        /* \"contracts/VolumICO.sol\":1336:1419  require(tokensSold + amountToPurchase <= ICO_ALLOCATION, \"ICO allocation exceeded\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"contracts/VolumICO.sol\":1432:1450  uint256 burnAmount */\n      0x00\n        /* \"contracts/VolumICO.sol\":1490:1493  100 */\n      0x64\n        /* \"contracts/VolumICO.sol\":1473:1486  burnRateOnBuy */\n      sload(0x05)\n        /* \"contracts/VolumICO.sol\":1454:1470  amountToPurchase */\n      dup4\n        /* \"contracts/VolumICO.sol\":1454:1486  amountToPurchase * burnRateOnBuy */\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"contracts/VolumICO.sol\":1453:1493  (amountToPurchase * burnRateOnBuy) / 100 */\n      tag_96\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_96:\n        /* \"contracts/VolumICO.sol\":1432:1493  uint256 burnAmount = (amountToPurchase * burnRateOnBuy) / 100 */\n      swap1\n      pop\n        /* \"contracts/VolumICO.sol\":1526:1536  volumToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/VolumICO.sol\":1526:1546  volumToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/VolumICO.sol\":1555:1559  this */\n      address\n        /* \"contracts/VolumICO.sol\":1526:1561  volumToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_97:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"contracts/VolumICO.sol\":1512:1522  burnAmount */\n      dup2\n        /* \"contracts/VolumICO.sol\":1512:1561  burnAmount <= volumToken.balanceOf(address(this)) */\n      gt\n      iszero\n        /* \"contracts/VolumICO.sol\":1504:1608  require(burnAmount <= volumToken.balanceOf(address(this)), \"Insufficient token balance in ICO contract\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"contracts/VolumICO.sol\":1635:1651  amountToPurchase */\n      dup2\n        /* \"contracts/VolumICO.sol\":1621:1631  tokensSold */\n      0x03\n      0x00\n        /* \"contracts/VolumICO.sol\":1621:1651  tokensSold += amountToPurchase */\n      dup3\n      dup3\n      sload\n      tag_105\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_105:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/VolumICO.sol\":1662:1672  volumToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/VolumICO.sol\":1662:1681  volumToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/VolumICO.sol\":1682:1692  msg.sender */\n      caller\n        /* \"contracts/VolumICO.sol\":1694:1710  amountToPurchase */\n      dup5\n        /* \"contracts/VolumICO.sol\":1662:1711  volumToken.transfer(msg.sender, amountToPurchase) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap3\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      pop\n        /* \"contracts/VolumICO.sol\":1745:1755  msg.sender */\n      caller\n        /* \"contracts/VolumICO.sol\":1729:1774  TokensPurchased(msg.sender, amountToPurchase) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8f28852646c20cc973d3a8218f7eefed58c25c909f78f0265af4818c3d4dc271\n        /* \"contracts/VolumICO.sol\":1757:1773  amountToPurchase */\n      dup4\n        /* \"contracts/VolumICO.sol\":1729:1774  TokensPurchased(msg.sender, amountToPurchase) */\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/VolumICO.sol\":1036:1782  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_113\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_114\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/VolumICO.sol\":985:1782  function buyTokens() external payable nonReentrant {... */\n      jump\t// out\n        /* \"contracts/VolumICO.sol\":1909:2093  function endIco() external onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"contracts/VolumICO.sol\":1983:1993  icoEndTime */\n      sload(0x04)\n        /* \"contracts/VolumICO.sol\":1965:1980  block.timestamp */\n      timestamp\n        /* \"contracts/VolumICO.sol\":1965:1993  block.timestamp < icoEndTime */\n      lt\n        /* \"contracts/VolumICO.sol\":1957:2019  require(block.timestamp < icoEndTime, \"ICO has already ended\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"contracts/VolumICO.sol\":2043:2058  block.timestamp */\n      timestamp\n        /* \"contracts/VolumICO.sol\":2030:2040  icoEndTime */\n      0x04\n        /* \"contracts/VolumICO.sol\":2030:2058  icoEndTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/VolumICO.sol\":1909:2093  function endIco() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_124\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_141:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_142:\n        /* \"#utility.yul\":177:201   */\n      tag_179\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_141\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_22:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_181\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_142\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_143:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:670   */\n    tag_144:\n        /* \"#utility.yul\":611:618   */\n      0x00\n        /* \"#utility.yul\":640:664   */\n      tag_184\n        /* \"#utility.yul\":658:663   */\n      dup3\n        /* \"#utility.yul\":640:664   */\n      tag_143\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":629:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_145:\n        /* \"#utility.yul\":763:787   */\n      tag_186\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_144\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_38:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_188\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_145\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1028:1088   */\n    tag_146:\n        /* \"#utility.yul\":1056:1059   */\n      0x00\n        /* \"#utility.yul\":1077:1082   */\n      dup2\n        /* \"#utility.yul\":1070:1082   */\n      swap1\n      pop\n        /* \"#utility.yul\":1028:1088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1094:1236   */\n    tag_147:\n        /* \"#utility.yul\":1144:1153   */\n      0x00\n        /* \"#utility.yul\":1177:1230   */\n      tag_191\n        /* \"#utility.yul\":1195:1229   */\n      tag_192\n        /* \"#utility.yul\":1204:1228   */\n      tag_193\n        /* \"#utility.yul\":1222:1227   */\n      dup5\n        /* \"#utility.yul\":1204:1228   */\n      tag_143\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":1195:1229   */\n      tag_146\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":1177:1230   */\n      tag_143\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1164:1230   */\n      swap1\n      pop\n        /* \"#utility.yul\":1094:1236   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1368   */\n    tag_148:\n        /* \"#utility.yul\":1292:1301   */\n      0x00\n        /* \"#utility.yul\":1325:1362   */\n      tag_195\n        /* \"#utility.yul\":1356:1361   */\n      dup3\n        /* \"#utility.yul\":1325:1362   */\n      tag_147\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1312:1362   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1374:1514   */\n    tag_149:\n        /* \"#utility.yul\":1438:1447   */\n      0x00\n        /* \"#utility.yul\":1471:1508   */\n      tag_197\n        /* \"#utility.yul\":1502:1507   */\n      dup3\n        /* \"#utility.yul\":1471:1508   */\n      tag_148\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":1458:1508   */\n      swap1\n      pop\n        /* \"#utility.yul\":1374:1514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1520:1679   */\n    tag_150:\n        /* \"#utility.yul\":1621:1672   */\n      tag_199\n        /* \"#utility.yul\":1666:1671   */\n      dup2\n        /* \"#utility.yul\":1621:1672   */\n      tag_149\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":1616:1619   */\n      dup3\n        /* \"#utility.yul\":1609:1673   */\n      mstore\n        /* \"#utility.yul\":1520:1679   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1685:1935   */\n    tag_43:\n        /* \"#utility.yul\":1792:1796   */\n      0x00\n        /* \"#utility.yul\":1830:1832   */\n      0x20\n        /* \"#utility.yul\":1819:1828   */\n      dup3\n        /* \"#utility.yul\":1815:1833   */\n      add\n        /* \"#utility.yul\":1807:1833   */\n      swap1\n      pop\n        /* \"#utility.yul\":1843:1928   */\n      tag_201\n        /* \"#utility.yul\":1925:1926   */\n      0x00\n        /* \"#utility.yul\":1914:1923   */\n      dup4\n        /* \"#utility.yul\":1910:1927   */\n      add\n        /* \"#utility.yul\":1901:1907   */\n      dup5\n        /* \"#utility.yul\":1843:1928   */\n      tag_150\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":1685:1935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2022:2139   */\n    tag_152:\n        /* \"#utility.yul\":2131:2132   */\n      0x00\n        /* \"#utility.yul\":2128:2129   */\n      dup1\n        /* \"#utility.yul\":2121:2133   */\n      revert\n        /* \"#utility.yul\":2268:2390   */\n    tag_154:\n        /* \"#utility.yul\":2341:2365   */\n      tag_206\n        /* \"#utility.yul\":2359:2364   */\n      dup2\n        /* \"#utility.yul\":2341:2365   */\n      tag_144\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2334:2339   */\n      dup2\n        /* \"#utility.yul\":2331:2366   */\n      eq\n        /* \"#utility.yul\":2321:2384   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2377:2378   */\n      dup1\n        /* \"#utility.yul\":2370:2382   */\n      revert\n        /* \"#utility.yul\":2321:2384   */\n    tag_207:\n        /* \"#utility.yul\":2268:2390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2396:2535   */\n    tag_155:\n        /* \"#utility.yul\":2442:2447   */\n      0x00\n        /* \"#utility.yul\":2480:2486   */\n      dup2\n        /* \"#utility.yul\":2467:2487   */\n      calldataload\n        /* \"#utility.yul\":2458:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2496:2529   */\n      tag_209\n        /* \"#utility.yul\":2523:2528   */\n      dup2\n        /* \"#utility.yul\":2496:2529   */\n      tag_154\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2396:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2870   */\n    tag_60:\n        /* \"#utility.yul\":2600:2606   */\n      0x00\n        /* \"#utility.yul\":2649:2651   */\n      0x20\n        /* \"#utility.yul\":2637:2646   */\n      dup3\n        /* \"#utility.yul\":2628:2635   */\n      dup5\n        /* \"#utility.yul\":2624:2647   */\n      sub\n        /* \"#utility.yul\":2620:2652   */\n      slt\n        /* \"#utility.yul\":2617:2736   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":2655:2734   */\n      tag_212\n      tag_152\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2617:2736   */\n    tag_211:\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2800:2853   */\n      tag_213\n        /* \"#utility.yul\":2845:2852   */\n      dup5\n        /* \"#utility.yul\":2836:2842   */\n      dup3\n        /* \"#utility.yul\":2825:2834   */\n      dup6\n        /* \"#utility.yul\":2821:2843   */\n      add\n        /* \"#utility.yul\":2800:2853   */\n      tag_155\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2790:2853   */\n      swap2\n      pop\n        /* \"#utility.yul\":2746:2863   */\n      pop\n        /* \"#utility.yul\":2541:2870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:3045   */\n    tag_156:\n        /* \"#utility.yul\":2960:2971   */\n      0x00\n        /* \"#utility.yul\":2994:3000   */\n      dup3\n        /* \"#utility.yul\":2989:2992   */\n      dup3\n        /* \"#utility.yul\":2982:3001   */\n      mstore\n        /* \"#utility.yul\":3034:3038   */\n      0x20\n        /* \"#utility.yul\":3029:3032   */\n      dup3\n        /* \"#utility.yul\":3025:3039   */\n      add\n        /* \"#utility.yul\":3010:3039   */\n      swap1\n      pop\n        /* \"#utility.yul\":2876:3045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3214   */\n    tag_157:\n        /* \"#utility.yul\":3191:3206   */\n      0x49434f2068617320656e64656400000000000000000000000000000000000000\n        /* \"#utility.yul\":3187:3188   */\n      0x00\n        /* \"#utility.yul\":3179:3185   */\n      dup3\n        /* \"#utility.yul\":3175:3189   */\n      add\n        /* \"#utility.yul\":3168:3207   */\n      mstore\n        /* \"#utility.yul\":3051:3214   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3220:3586   */\n    tag_158:\n        /* \"#utility.yul\":3362:3365   */\n      0x00\n        /* \"#utility.yul\":3383:3450   */\n      tag_217\n        /* \"#utility.yul\":3447:3449   */\n      0x0d\n        /* \"#utility.yul\":3442:3445   */\n      dup4\n        /* \"#utility.yul\":3383:3450   */\n      tag_156\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3376:3450   */\n      swap2\n      pop\n        /* \"#utility.yul\":3459:3552   */\n      tag_218\n        /* \"#utility.yul\":3548:3551   */\n      dup3\n        /* \"#utility.yul\":3459:3552   */\n      tag_157\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":3577:3579   */\n      0x20\n        /* \"#utility.yul\":3572:3575   */\n      dup3\n        /* \"#utility.yul\":3568:3580   */\n      add\n        /* \"#utility.yul\":3561:3580   */\n      swap1\n      pop\n        /* \"#utility.yul\":3220:3586   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3592:4011   */\n    tag_81:\n        /* \"#utility.yul\":3758:3762   */\n      0x00\n        /* \"#utility.yul\":3796:3798   */\n      0x20\n        /* \"#utility.yul\":3785:3794   */\n      dup3\n        /* \"#utility.yul\":3781:3799   */\n      add\n        /* \"#utility.yul\":3773:3799   */\n      swap1\n      pop\n        /* \"#utility.yul\":3845:3854   */\n      dup2\n        /* \"#utility.yul\":3839:3843   */\n      dup2\n        /* \"#utility.yul\":3835:3855   */\n      sub\n        /* \"#utility.yul\":3831:3832   */\n      0x00\n        /* \"#utility.yul\":3820:3829   */\n      dup4\n        /* \"#utility.yul\":3816:3833   */\n      add\n        /* \"#utility.yul\":3809:3856   */\n      mstore\n        /* \"#utility.yul\":3873:4004   */\n      tag_220\n        /* \"#utility.yul\":3999:4003   */\n      dup2\n        /* \"#utility.yul\":3873:4004   */\n      tag_158\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3865:4004   */\n      swap1\n      pop\n        /* \"#utility.yul\":3592:4011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4017:4245   */\n    tag_159:\n        /* \"#utility.yul\":4157:4191   */\n      0x416d6f756e7420746f207075726368617365206d757374206265206772656174\n        /* \"#utility.yul\":4153:4154   */\n      0x00\n        /* \"#utility.yul\":4145:4151   */\n      dup3\n        /* \"#utility.yul\":4141:4155   */\n      add\n        /* \"#utility.yul\":4134:4192   */\n      mstore\n        /* \"#utility.yul\":4226:4237   */\n      0x6572207468616e20300000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4221:4223   */\n      0x20\n        /* \"#utility.yul\":4213:4219   */\n      dup3\n        /* \"#utility.yul\":4209:4224   */\n      add\n        /* \"#utility.yul\":4202:4238   */\n      mstore\n        /* \"#utility.yul\":4017:4245   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4251:4617   */\n    tag_160:\n        /* \"#utility.yul\":4393:4396   */\n      0x00\n        /* \"#utility.yul\":4414:4481   */\n      tag_223\n        /* \"#utility.yul\":4478:4480   */\n      0x29\n        /* \"#utility.yul\":4473:4476   */\n      dup4\n        /* \"#utility.yul\":4414:4481   */\n      tag_156\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":4407:4481   */\n      swap2\n      pop\n        /* \"#utility.yul\":4490:4583   */\n      tag_224\n        /* \"#utility.yul\":4579:4582   */\n      dup3\n        /* \"#utility.yul\":4490:4583   */\n      tag_159\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":4608:4610   */\n      0x40\n        /* \"#utility.yul\":4603:4606   */\n      dup3\n        /* \"#utility.yul\":4599:4611   */\n      add\n        /* \"#utility.yul\":4592:4611   */\n      swap1\n      pop\n        /* \"#utility.yul\":4251:4617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4623:5042   */\n    tag_84:\n        /* \"#utility.yul\":4789:4793   */\n      0x00\n        /* \"#utility.yul\":4827:4829   */\n      0x20\n        /* \"#utility.yul\":4816:4825   */\n      dup3\n        /* \"#utility.yul\":4812:4830   */\n      add\n        /* \"#utility.yul\":4804:4830   */\n      swap1\n      pop\n        /* \"#utility.yul\":4876:4885   */\n      dup2\n        /* \"#utility.yul\":4870:4874   */\n      dup2\n        /* \"#utility.yul\":4866:4886   */\n      sub\n        /* \"#utility.yul\":4862:4863   */\n      0x00\n        /* \"#utility.yul\":4851:4860   */\n      dup4\n        /* \"#utility.yul\":4847:4864   */\n      add\n        /* \"#utility.yul\":4840:4887   */\n      mstore\n        /* \"#utility.yul\":4904:5035   */\n      tag_226\n        /* \"#utility.yul\":5030:5034   */\n      dup2\n        /* \"#utility.yul\":4904:5035   */\n      tag_160\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4896:5035   */\n      swap1\n      pop\n        /* \"#utility.yul\":4623:5042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5048:5228   */\n    tag_161:\n        /* \"#utility.yul\":5096:5173   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5093:5094   */\n      0x00\n        /* \"#utility.yul\":5086:5174   */\n      mstore\n        /* \"#utility.yul\":5193:5197   */\n      0x12\n        /* \"#utility.yul\":5190:5191   */\n      0x04\n        /* \"#utility.yul\":5183:5198   */\n      mstore\n        /* \"#utility.yul\":5217:5221   */\n      0x24\n        /* \"#utility.yul\":5214:5215   */\n      0x00\n        /* \"#utility.yul\":5207:5222   */\n      revert\n        /* \"#utility.yul\":5234:5414   */\n    tag_162:\n        /* \"#utility.yul\":5282:5359   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5279:5280   */\n      0x00\n        /* \"#utility.yul\":5272:5360   */\n      mstore\n        /* \"#utility.yul\":5379:5383   */\n      0x11\n        /* \"#utility.yul\":5376:5377   */\n      0x04\n        /* \"#utility.yul\":5369:5384   */\n      mstore\n        /* \"#utility.yul\":5403:5407   */\n      0x24\n        /* \"#utility.yul\":5400:5401   */\n      0x00\n        /* \"#utility.yul\":5393:5408   */\n      revert\n        /* \"#utility.yul\":5420:5605   */\n    tag_86:\n        /* \"#utility.yul\":5460:5461   */\n      0x00\n        /* \"#utility.yul\":5477:5497   */\n      tag_230\n        /* \"#utility.yul\":5495:5496   */\n      dup3\n        /* \"#utility.yul\":5477:5497   */\n      tag_141\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5472:5497   */\n      swap2\n      pop\n        /* \"#utility.yul\":5511:5531   */\n      tag_231\n        /* \"#utility.yul\":5529:5530   */\n      dup4\n        /* \"#utility.yul\":5511:5531   */\n      tag_141\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":5506:5531   */\n      swap3\n      pop\n        /* \"#utility.yul\":5550:5551   */\n      dup3\n        /* \"#utility.yul\":5540:5575   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":5555:5573   */\n      tag_233\n      tag_161\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":5540:5575   */\n    tag_232:\n        /* \"#utility.yul\":5597:5598   */\n      dup3\n        /* \"#utility.yul\":5594:5595   */\n      dup3\n        /* \"#utility.yul\":5590:5599   */\n      div\n        /* \"#utility.yul\":5585:5599   */\n      swap1\n      pop\n        /* \"#utility.yul\":5420:5605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5611:5802   */\n    tag_90:\n        /* \"#utility.yul\":5651:5654   */\n      0x00\n        /* \"#utility.yul\":5670:5690   */\n      tag_235\n        /* \"#utility.yul\":5688:5689   */\n      dup3\n        /* \"#utility.yul\":5670:5690   */\n      tag_141\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5665:5690   */\n      swap2\n      pop\n        /* \"#utility.yul\":5704:5724   */\n      tag_236\n        /* \"#utility.yul\":5722:5723   */\n      dup4\n        /* \"#utility.yul\":5704:5724   */\n      tag_141\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5699:5724   */\n      swap3\n      pop\n        /* \"#utility.yul\":5747:5748   */\n      dup3\n        /* \"#utility.yul\":5744:5745   */\n      dup3\n        /* \"#utility.yul\":5740:5749   */\n      add\n        /* \"#utility.yul\":5733:5749   */\n      swap1\n      pop\n        /* \"#utility.yul\":5768:5771   */\n      dup1\n        /* \"#utility.yul\":5765:5766   */\n      dup3\n        /* \"#utility.yul\":5762:5772   */\n      gt\n        /* \"#utility.yul\":5759:5795   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":5775:5793   */\n      tag_238\n      tag_162\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5759:5795   */\n    tag_237:\n        /* \"#utility.yul\":5611:5802   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5808:5981   */\n    tag_163:\n        /* \"#utility.yul\":5948:5973   */\n      0x49434f20616c6c6f636174696f6e206578636565646564000000000000000000\n        /* \"#utility.yul\":5944:5945   */\n      0x00\n        /* \"#utility.yul\":5936:5942   */\n      dup3\n        /* \"#utility.yul\":5932:5946   */\n      add\n        /* \"#utility.yul\":5925:5974   */\n      mstore\n        /* \"#utility.yul\":5808:5981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5987:6353   */\n    tag_164:\n        /* \"#utility.yul\":6129:6132   */\n      0x00\n        /* \"#utility.yul\":6150:6217   */\n      tag_241\n        /* \"#utility.yul\":6214:6216   */\n      0x17\n        /* \"#utility.yul\":6209:6212   */\n      dup4\n        /* \"#utility.yul\":6150:6217   */\n      tag_156\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6143:6217   */\n      swap2\n      pop\n        /* \"#utility.yul\":6226:6319   */\n      tag_242\n        /* \"#utility.yul\":6315:6318   */\n      dup3\n        /* \"#utility.yul\":6226:6319   */\n      tag_163\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":6344:6346   */\n      0x20\n        /* \"#utility.yul\":6339:6342   */\n      dup3\n        /* \"#utility.yul\":6335:6347   */\n      add\n        /* \"#utility.yul\":6328:6347   */\n      swap1\n      pop\n        /* \"#utility.yul\":5987:6353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6359:6778   */\n    tag_93:\n        /* \"#utility.yul\":6525:6529   */\n      0x00\n        /* \"#utility.yul\":6563:6565   */\n      0x20\n        /* \"#utility.yul\":6552:6561   */\n      dup3\n        /* \"#utility.yul\":6548:6566   */\n      add\n        /* \"#utility.yul\":6540:6566   */\n      swap1\n      pop\n        /* \"#utility.yul\":6612:6621   */\n      dup2\n        /* \"#utility.yul\":6606:6610   */\n      dup2\n        /* \"#utility.yul\":6602:6622   */\n      sub\n        /* \"#utility.yul\":6598:6599   */\n      0x00\n        /* \"#utility.yul\":6587:6596   */\n      dup4\n        /* \"#utility.yul\":6583:6600   */\n      add\n        /* \"#utility.yul\":6576:6623   */\n      mstore\n        /* \"#utility.yul\":6640:6771   */\n      tag_244\n        /* \"#utility.yul\":6766:6770   */\n      dup2\n        /* \"#utility.yul\":6640:6771   */\n      tag_164\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":6632:6771   */\n      swap1\n      pop\n        /* \"#utility.yul\":6359:6778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6784:7194   */\n    tag_95:\n        /* \"#utility.yul\":6824:6831   */\n      0x00\n        /* \"#utility.yul\":6847:6867   */\n      tag_246\n        /* \"#utility.yul\":6865:6866   */\n      dup3\n        /* \"#utility.yul\":6847:6867   */\n      tag_141\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6842:6867   */\n      swap2\n      pop\n        /* \"#utility.yul\":6881:6901   */\n      tag_247\n        /* \"#utility.yul\":6899:6900   */\n      dup4\n        /* \"#utility.yul\":6881:6901   */\n      tag_141\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":6876:6901   */\n      swap3\n      pop\n        /* \"#utility.yul\":6936:6937   */\n      dup3\n        /* \"#utility.yul\":6933:6934   */\n      dup3\n        /* \"#utility.yul\":6929:6938   */\n      mul\n        /* \"#utility.yul\":6958:6988   */\n      tag_248\n        /* \"#utility.yul\":6976:6987   */\n      dup2\n        /* \"#utility.yul\":6958:6988   */\n      tag_141\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6947:6988   */\n      swap2\n      pop\n        /* \"#utility.yul\":7137:7138   */\n      dup3\n        /* \"#utility.yul\":7128:7135   */\n      dup3\n        /* \"#utility.yul\":7124:7139   */\n      div\n        /* \"#utility.yul\":7121:7122   */\n      dup5\n        /* \"#utility.yul\":7118:7140   */\n      eq\n        /* \"#utility.yul\":7098:7099   */\n      dup4\n        /* \"#utility.yul\":7091:7100   */\n      iszero\n        /* \"#utility.yul\":7071:7154   */\n      or\n        /* \"#utility.yul\":7048:7187   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":7167:7185   */\n      tag_250\n      tag_162\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":7048:7187   */\n    tag_249:\n        /* \"#utility.yul\":6832:7194   */\n      pop\n        /* \"#utility.yul\":6784:7194   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7200:7322   */\n    tag_165:\n        /* \"#utility.yul\":7273:7297   */\n      tag_252\n        /* \"#utility.yul\":7291:7296   */\n      dup2\n        /* \"#utility.yul\":7273:7297   */\n      tag_141\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":7266:7271   */\n      dup2\n        /* \"#utility.yul\":7263:7298   */\n      eq\n        /* \"#utility.yul\":7253:7316   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":7312:7313   */\n      0x00\n        /* \"#utility.yul\":7309:7310   */\n      dup1\n        /* \"#utility.yul\":7302:7314   */\n      revert\n        /* \"#utility.yul\":7253:7316   */\n    tag_253:\n        /* \"#utility.yul\":7200:7322   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7328:7471   */\n    tag_166:\n        /* \"#utility.yul\":7385:7390   */\n      0x00\n        /* \"#utility.yul\":7416:7422   */\n      dup2\n        /* \"#utility.yul\":7410:7423   */\n      mload\n        /* \"#utility.yul\":7401:7423   */\n      swap1\n      pop\n        /* \"#utility.yul\":7432:7465   */\n      tag_255\n        /* \"#utility.yul\":7459:7464   */\n      dup2\n        /* \"#utility.yul\":7432:7465   */\n      tag_165\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":7328:7471   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7477:7828   */\n    tag_101:\n        /* \"#utility.yul\":7547:7553   */\n      0x00\n        /* \"#utility.yul\":7596:7598   */\n      0x20\n        /* \"#utility.yul\":7584:7593   */\n      dup3\n        /* \"#utility.yul\":7575:7582   */\n      dup5\n        /* \"#utility.yul\":7571:7594   */\n      sub\n        /* \"#utility.yul\":7567:7599   */\n      slt\n        /* \"#utility.yul\":7564:7683   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":7602:7681   */\n      tag_258\n      tag_152\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":7564:7683   */\n    tag_257:\n        /* \"#utility.yul\":7722:7723   */\n      0x00\n        /* \"#utility.yul\":7747:7811   */\n      tag_259\n        /* \"#utility.yul\":7803:7810   */\n      dup5\n        /* \"#utility.yul\":7794:7800   */\n      dup3\n        /* \"#utility.yul\":7783:7792   */\n      dup6\n        /* \"#utility.yul\":7779:7801   */\n      add\n        /* \"#utility.yul\":7747:7811   */\n      tag_166\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":7737:7811   */\n      swap2\n      pop\n        /* \"#utility.yul\":7693:7821   */\n      pop\n        /* \"#utility.yul\":7477:7828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7834:8063   */\n    tag_167:\n        /* \"#utility.yul\":7974:8008   */\n      0x496e73756666696369656e7420746f6b656e2062616c616e636520696e204943\n        /* \"#utility.yul\":7970:7971   */\n      0x00\n        /* \"#utility.yul\":7962:7968   */\n      dup3\n        /* \"#utility.yul\":7958:7972   */\n      add\n        /* \"#utility.yul\":7951:8009   */\n      mstore\n        /* \"#utility.yul\":8043:8055   */\n      0x4f20636f6e747261637400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8038:8040   */\n      0x20\n        /* \"#utility.yul\":8030:8036   */\n      dup3\n        /* \"#utility.yul\":8026:8041   */\n      add\n        /* \"#utility.yul\":8019:8056   */\n      mstore\n        /* \"#utility.yul\":7834:8063   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8069:8435   */\n    tag_168:\n        /* \"#utility.yul\":8211:8214   */\n      0x00\n        /* \"#utility.yul\":8232:8299   */\n      tag_262\n        /* \"#utility.yul\":8296:8298   */\n      0x2a\n        /* \"#utility.yul\":8291:8294   */\n      dup4\n        /* \"#utility.yul\":8232:8299   */\n      tag_156\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":8225:8299   */\n      swap2\n      pop\n        /* \"#utility.yul\":8308:8401   */\n      tag_263\n        /* \"#utility.yul\":8397:8400   */\n      dup3\n        /* \"#utility.yul\":8308:8401   */\n      tag_167\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8426:8428   */\n      0x40\n        /* \"#utility.yul\":8421:8424   */\n      dup3\n        /* \"#utility.yul\":8417:8429   */\n      add\n        /* \"#utility.yul\":8410:8429   */\n      swap1\n      pop\n        /* \"#utility.yul\":8069:8435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8441:8860   */\n    tag_104:\n        /* \"#utility.yul\":8607:8611   */\n      0x00\n        /* \"#utility.yul\":8645:8647   */\n      0x20\n        /* \"#utility.yul\":8634:8643   */\n      dup3\n        /* \"#utility.yul\":8630:8648   */\n      add\n        /* \"#utility.yul\":8622:8648   */\n      swap1\n      pop\n        /* \"#utility.yul\":8694:8703   */\n      dup2\n        /* \"#utility.yul\":8688:8692   */\n      dup2\n        /* \"#utility.yul\":8684:8704   */\n      sub\n        /* \"#utility.yul\":8680:8681   */\n      0x00\n        /* \"#utility.yul\":8669:8678   */\n      dup4\n        /* \"#utility.yul\":8665:8682   */\n      add\n        /* \"#utility.yul\":8658:8705   */\n      mstore\n        /* \"#utility.yul\":8722:8853   */\n      tag_265\n        /* \"#utility.yul\":8848:8852   */\n      dup2\n        /* \"#utility.yul\":8722:8853   */\n      tag_168\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":8714:8853   */\n      swap1\n      pop\n        /* \"#utility.yul\":8441:8860   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8866:9198   */\n    tag_107:\n        /* \"#utility.yul\":8987:8991   */\n      0x00\n        /* \"#utility.yul\":9025:9027   */\n      0x40\n        /* \"#utility.yul\":9014:9023   */\n      dup3\n        /* \"#utility.yul\":9010:9028   */\n      add\n        /* \"#utility.yul\":9002:9028   */\n      swap1\n      pop\n        /* \"#utility.yul\":9038:9109   */\n      tag_267\n        /* \"#utility.yul\":9106:9107   */\n      0x00\n        /* \"#utility.yul\":9095:9104   */\n      dup4\n        /* \"#utility.yul\":9091:9108   */\n      add\n        /* \"#utility.yul\":9082:9088   */\n      dup6\n        /* \"#utility.yul\":9038:9109   */\n      tag_145\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":9119:9191   */\n      tag_268\n        /* \"#utility.yul\":9187:9189   */\n      0x20\n        /* \"#utility.yul\":9176:9185   */\n      dup4\n        /* \"#utility.yul\":9172:9190   */\n      add\n        /* \"#utility.yul\":9163:9169   */\n      dup5\n        /* \"#utility.yul\":9119:9191   */\n      tag_142\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":8866:9198   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9204:9294   */\n    tag_169:\n        /* \"#utility.yul\":9238:9245   */\n      0x00\n        /* \"#utility.yul\":9281:9286   */\n      dup2\n        /* \"#utility.yul\":9274:9287   */\n      iszero\n        /* \"#utility.yul\":9267:9288   */\n      iszero\n        /* \"#utility.yul\":9256:9288   */\n      swap1\n      pop\n        /* \"#utility.yul\":9204:9294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9300:9416   */\n    tag_170:\n        /* \"#utility.yul\":9370:9391   */\n      tag_271\n        /* \"#utility.yul\":9385:9390   */\n      dup2\n        /* \"#utility.yul\":9370:9391   */\n      tag_169\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":9363:9368   */\n      dup2\n        /* \"#utility.yul\":9360:9392   */\n      eq\n        /* \"#utility.yul\":9350:9410   */\n      tag_272\n      jumpi\n        /* \"#utility.yul\":9406:9407   */\n      0x00\n        /* \"#utility.yul\":9403:9404   */\n      dup1\n        /* \"#utility.yul\":9396:9408   */\n      revert\n        /* \"#utility.yul\":9350:9410   */\n    tag_272:\n        /* \"#utility.yul\":9300:9416   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9422:9559   */\n    tag_171:\n        /* \"#utility.yul\":9476:9481   */\n      0x00\n        /* \"#utility.yul\":9507:9513   */\n      dup2\n        /* \"#utility.yul\":9501:9514   */\n      mload\n        /* \"#utility.yul\":9492:9514   */\n      swap1\n      pop\n        /* \"#utility.yul\":9523:9553   */\n      tag_274\n        /* \"#utility.yul\":9547:9552   */\n      dup2\n        /* \"#utility.yul\":9523:9553   */\n      tag_170\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":9422:9559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9565:9910   */\n    tag_111:\n        /* \"#utility.yul\":9632:9638   */\n      0x00\n        /* \"#utility.yul\":9681:9683   */\n      0x20\n        /* \"#utility.yul\":9669:9678   */\n      dup3\n        /* \"#utility.yul\":9660:9667   */\n      dup5\n        /* \"#utility.yul\":9656:9679   */\n      sub\n        /* \"#utility.yul\":9652:9684   */\n      slt\n        /* \"#utility.yul\":9649:9768   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":9687:9766   */\n      tag_277\n      tag_152\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":9649:9768   */\n    tag_276:\n        /* \"#utility.yul\":9807:9808   */\n      0x00\n        /* \"#utility.yul\":9832:9893   */\n      tag_278\n        /* \"#utility.yul\":9885:9892   */\n      dup5\n        /* \"#utility.yul\":9876:9882   */\n      dup3\n        /* \"#utility.yul\":9865:9874   */\n      dup6\n        /* \"#utility.yul\":9861:9883   */\n      add\n        /* \"#utility.yul\":9832:9893   */\n      tag_171\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":9822:9893   */\n      swap2\n      pop\n        /* \"#utility.yul\":9778:9903   */\n      pop\n        /* \"#utility.yul\":9565:9910   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9916:10087   */\n    tag_172:\n        /* \"#utility.yul\":10056:10079   */\n      0x49434f2068617320616c726561647920656e6465640000000000000000000000\n        /* \"#utility.yul\":10052:10053   */\n      0x00\n        /* \"#utility.yul\":10044:10050   */\n      dup3\n        /* \"#utility.yul\":10040:10054   */\n      add\n        /* \"#utility.yul\":10033:10080   */\n      mstore\n        /* \"#utility.yul\":9916:10087   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10093:10459   */\n    tag_173:\n        /* \"#utility.yul\":10235:10238   */\n      0x00\n        /* \"#utility.yul\":10256:10323   */\n      tag_281\n        /* \"#utility.yul\":10320:10322   */\n      0x15\n        /* \"#utility.yul\":10315:10318   */\n      dup4\n        /* \"#utility.yul\":10256:10323   */\n      tag_156\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":10249:10323   */\n      swap2\n      pop\n        /* \"#utility.yul\":10332:10425   */\n      tag_282\n        /* \"#utility.yul\":10421:10424   */\n      dup3\n        /* \"#utility.yul\":10332:10425   */\n      tag_172\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":10450:10452   */\n      0x20\n        /* \"#utility.yul\":10445:10448   */\n      dup3\n        /* \"#utility.yul\":10441:10453   */\n      add\n        /* \"#utility.yul\":10434:10453   */\n      swap1\n      pop\n        /* \"#utility.yul\":10093:10459   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10465:10884   */\n    tag_120:\n        /* \"#utility.yul\":10631:10635   */\n      0x00\n        /* \"#utility.yul\":10669:10671   */\n      0x20\n        /* \"#utility.yul\":10658:10667   */\n      dup3\n        /* \"#utility.yul\":10654:10672   */\n      add\n        /* \"#utility.yul\":10646:10672   */\n      swap1\n      pop\n        /* \"#utility.yul\":10718:10727   */\n      dup2\n        /* \"#utility.yul\":10712:10716   */\n      dup2\n        /* \"#utility.yul\":10708:10728   */\n      sub\n        /* \"#utility.yul\":10704:10705   */\n      0x00\n        /* \"#utility.yul\":10693:10702   */\n      dup4\n        /* \"#utility.yul\":10689:10706   */\n      add\n        /* \"#utility.yul\":10682:10729   */\n      mstore\n        /* \"#utility.yul\":10746:10877   */\n      tag_284\n        /* \"#utility.yul\":10872:10876   */\n      dup2\n        /* \"#utility.yul\":10746:10877   */\n      tag_173\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":10738:10877   */\n      swap1\n      pop\n        /* \"#utility.yul\":10465:10884   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10890:11071   */\n    tag_174:\n        /* \"#utility.yul\":11030:11063   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":11026:11027   */\n      0x00\n        /* \"#utility.yul\":11018:11024   */\n      dup3\n        /* \"#utility.yul\":11014:11028   */\n      add\n        /* \"#utility.yul\":11007:11064   */\n      mstore\n        /* \"#utility.yul\":10890:11071   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11077:11443   */\n    tag_175:\n        /* \"#utility.yul\":11219:11222   */\n      0x00\n        /* \"#utility.yul\":11240:11307   */\n      tag_287\n        /* \"#utility.yul\":11304:11306   */\n      0x1f\n        /* \"#utility.yul\":11299:11302   */\n      dup4\n        /* \"#utility.yul\":11240:11307   */\n      tag_156\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":11233:11307   */\n      swap2\n      pop\n        /* \"#utility.yul\":11316:11409   */\n      tag_288\n        /* \"#utility.yul\":11405:11408   */\n      dup3\n        /* \"#utility.yul\":11316:11409   */\n      tag_174\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":11434:11436   */\n      0x20\n        /* \"#utility.yul\":11429:11432   */\n      dup3\n        /* \"#utility.yul\":11425:11437   */\n      add\n        /* \"#utility.yul\":11418:11437   */\n      swap1\n      pop\n        /* \"#utility.yul\":11077:11443   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11449:11868   */\n    tag_138:\n        /* \"#utility.yul\":11615:11619   */\n      0x00\n        /* \"#utility.yul\":11653:11655   */\n      0x20\n        /* \"#utility.yul\":11642:11651   */\n      dup3\n        /* \"#utility.yul\":11638:11656   */\n      add\n        /* \"#utility.yul\":11630:11656   */\n      swap1\n      pop\n        /* \"#utility.yul\":11702:11711   */\n      dup2\n        /* \"#utility.yul\":11696:11700   */\n      dup2\n        /* \"#utility.yul\":11692:11712   */\n      sub\n        /* \"#utility.yul\":11688:11689   */\n      0x00\n        /* \"#utility.yul\":11677:11686   */\n      dup4\n        /* \"#utility.yul\":11673:11690   */\n      add\n        /* \"#utility.yul\":11666:11713   */\n      mstore\n        /* \"#utility.yul\":11730:11861   */\n      tag_290\n        /* \"#utility.yul\":11856:11860   */\n      dup2\n        /* \"#utility.yul\":11730:11861   */\n      tag_175\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":11722:11861   */\n      swap1\n      pop\n        /* \"#utility.yul\":11449:11868   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122003347e3a7fb929a27efc0c22c84b1671736990f0391eb4893ce5eea60aa646ec64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_391": {
									"entryPoint": null,
									"id": 391,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 405,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_ddb9187ba157d4f16ad245999ec95a32a59c2ed61cba0e20883f94f7496b8193_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ddb9187ba157d4f16ad245999ec95a32a59c2ed61cba0e20883f94f7496b8193__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_ddb9187ba157d4f16ad245999ec95a32a59c2ed61cba0e20883f94f7496b8193": {
									"entryPoint": 886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3648:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:5",
														"type": ""
													}
												],
												"src": "334:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:5",
														"type": ""
													}
												],
												"src": "466:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:5"
															},
															"nodeType": "YulIf",
															"src": "621:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:5",
														"type": ""
													}
												],
												"src": "568:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:5",
														"type": ""
													}
												],
												"src": "696:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "900:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "911:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "882:7:5",
														"type": ""
													}
												],
												"src": "845:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:5"
															},
															"nodeType": "YulIf",
															"src": "981:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:5",
														"type": ""
													}
												],
												"src": "928:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:5",
														"type": ""
													}
												],
												"src": "1056:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1299:413:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1345:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1312:32:5"
															},
															"nodeType": "YulIf",
															"src": "1309:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1438:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1482:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1576:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1621:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1261:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1272:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1284:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1292:6:5",
														"type": ""
													}
												],
												"src": "1205:507:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1783:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1800:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1823:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1805:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1805:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1793:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1793:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1793:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1771:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1778:3:5",
														"type": ""
													}
												],
												"src": "1718:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1940:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1950:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1962:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1958:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1958:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1950:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2030:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2043:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2054:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2039:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2039:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1986:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1986:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1986:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1912:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1924:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1935:4:5",
														"type": ""
													}
												],
												"src": "1842:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2166:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2183:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2188:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2176:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2176:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2176:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2204:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2223:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2228:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2219:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2219:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2204:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2138:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2143:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2154:11:5",
														"type": ""
													}
												],
												"src": "2070:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2351:114:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2373:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2381:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2369:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2369:14:5"
																	},
																	{
																		"hexValue": "566f6c756d546f6b656e20616464726573732063616e6e6f74206265207a6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2385:34:5",
																		"type": "",
																		"value": "VolumToken address cannot be zer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2362:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2362:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2441:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2449:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2437:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2437:15:5"
																	},
																	{
																		"hexValue": "6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2454:3:5",
																		"type": "",
																		"value": "o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2430:28:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2430:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_ddb9187ba157d4f16ad245999ec95a32a59c2ed61cba0e20883f94f7496b8193",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2343:6:5",
														"type": ""
													}
												],
												"src": "2245:220:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2617:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2627:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2693:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2698:2:5",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2634:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2634:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2627:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2799:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ddb9187ba157d4f16ad245999ec95a32a59c2ed61cba0e20883f94f7496b8193",
																	"nodeType": "YulIdentifier",
																	"src": "2710:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2710:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2710:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2812:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2823:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2828:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2812:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ddb9187ba157d4f16ad245999ec95a32a59c2ed61cba0e20883f94f7496b8193_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2605:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2613:3:5",
														"type": ""
													}
												],
												"src": "2471:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3014:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3024:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3036:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3047:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3032:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3032:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3024:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3071:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3082:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3067:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3067:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3090:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3096:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3086:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3086:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3060:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3060:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3060:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3116:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3250:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ddb9187ba157d4f16ad245999ec95a32a59c2ed61cba0e20883f94f7496b8193_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3124:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3124:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3116:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ddb9187ba157d4f16ad245999ec95a32a59c2ed61cba0e20883f94f7496b8193__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2994:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3009:4:5",
														"type": ""
													}
												],
												"src": "2843:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3296:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3313:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3316:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3306:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3306:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3306:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3410:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3413:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3403:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3403:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3403:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3434:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3437:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3427:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3427:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3427:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3268:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3498:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3508:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3531:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3513:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3513:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3508:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3542:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3565:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3547:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3547:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3542:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3576:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3587:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3590:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3583:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3583:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3576:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3616:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3618:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3618:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3618:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3608:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3611:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3605:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3605:10:5"
															},
															"nodeType": "YulIf",
															"src": "3602:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3485:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3488:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3494:3:5",
														"type": ""
													}
												],
												"src": "3454:191:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ddb9187ba157d4f16ad245999ec95a32a59c2ed61cba0e20883f94f7496b8193(memPtr) {\n\n        mstore(add(memPtr, 0), \"VolumToken address cannot be zer\")\n\n        mstore(add(memPtr, 32), \"o\")\n\n    }\n\n    function abi_encode_t_stringliteral_ddb9187ba157d4f16ad245999ec95a32a59c2ed61cba0e20883f94f7496b8193_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_ddb9187ba157d4f16ad245999ec95a32a59c2ed61cba0e20883f94f7496b8193(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ddb9187ba157d4f16ad245999ec95a32a59c2ed61cba0e20883f94f7496b8193__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ddb9187ba157d4f16ad245999ec95a32a59c2ed61cba0e20883f94f7496b8193_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600160055534801562000015575f80fd5b50604051620013a0380380620013a083398181016040528101906200003b9190620002f5565b3360015f819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b6575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000ad91906200034b565b60405180910390fd5b620000c7816200019560201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000139576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200013090620003ea565b60405180910390fd5b8160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550804262000187919062000437565b600481905550505062000471565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000287826200025c565b9050919050565b62000299816200027b565b8114620002a4575f80fd5b50565b5f81519050620002b7816200028e565b92915050565b5f819050919050565b620002d181620002bd565b8114620002dc575f80fd5b50565b5f81519050620002ef81620002c6565b92915050565b5f80604083850312156200030e576200030d62000258565b5b5f6200031d85828601620002a7565b92505060206200033085828601620002df565b9150509250929050565b62000345816200027b565b82525050565b5f602082019050620003605f8301846200033a565b92915050565b5f82825260208201905092915050565b7f566f6c756d546f6b656e20616464726573732063616e6e6f74206265207a65725f8201527f6f00000000000000000000000000000000000000000000000000000000000000602082015250565b5f620003d260218362000366565b9150620003df8262000376565b604082019050919050565b5f6020820190508181035f8301526200040381620003c4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6200044382620002bd565b91506200045083620002bd565b92508282019050808211156200046b576200046a6200040a565b5b92915050565b610f21806200047f5f395ff3fe6080604052600436106100a6575f3560e01c80639af08dd5116100635780639af08dd51461017e578063a715bf33146101a8578063b0a65b3e146101d2578063d0febe4c146101fc578063e657807b14610206578063f2fde38b1461021c576100a6565b806324600fc3146100aa5780634513ef7a146100c0578063518ab2a8146100ea578063715018a6146101145780637e1055b61461012a5780638da5cb5b14610154575b5f80fd5b3480156100b5575f80fd5b506100be610244565b005b3480156100cb575f80fd5b506100d4610299565b6040516100e19190610907565b60405180910390f35b3480156100f5575f80fd5b506100fe61029f565b60405161010b9190610907565b60405180910390f35b34801561011f575f80fd5b506101286102a5565b005b348015610135575f80fd5b5061013e6102b8565b60405161014b9190610907565b60405180910390f35b34801561015f575f80fd5b506101686102be565b604051610175919061095f565b60405180910390f35b348015610189575f80fd5b506101926102e6565b60405161019f91906109d3565b60405180910390f35b3480156101b3575f80fd5b506101bc61030b565b6040516101c99190610907565b60405180910390f35b3480156101dd575f80fd5b506101e6610317565b6040516101f39190610907565b60405180910390f35b610204610326565b005b348015610211575f80fd5b5061021a61066f565b005b348015610227575f80fd5b50610242600480360381019061023d9190610a1a565b6106c4565b005b61024c610748565b6102546102be565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610296573d5f803e3d5ffd5b50565b60055481565b60035481565b6102ad610748565b6102b65f6107cf565b565b60045481565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a764000081565b6af8277896582678ac00000081565b61032e610892565b6004544210610372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036990610a9f565b60405180910390fd5b5f34116103b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90610b2d565b60405180910390fd5b5f670de0b6b3a7640000346103c99190610ba5565b90505f811161040d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040490610b2d565b60405180910390fd5b6af8277896582678ac000000816003546104279190610bd5565b1115610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f90610c52565b60405180910390fd5b5f6064600554836104799190610c70565b6104839190610ba5565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104df919061095f565b602060405180830381865afa1580156104fa573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061051e9190610cdb565b811115610560576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055790610d76565b60405180910390fd5b8160035f8282546105719190610bd5565b9250508190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016105d4929190610d94565b6020604051808303815f875af11580156105f0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106149190610df0565b503373ffffffffffffffffffffffffffffffffffffffff167f8f28852646c20cc973d3a8218f7eefed58c25c909f78f0265af4818c3d4dc2718360405161065b9190610907565b60405180910390a2505061066d6108df565b565b610677610748565b60045442106106bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b290610e65565b60405180910390fd5b42600481905550565b6106cc610748565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361073c575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610733919061095f565b60405180910390fd5b610745816107cf565b50565b6107506108e8565b73ffffffffffffffffffffffffffffffffffffffff1661076e6102be565b73ffffffffffffffffffffffffffffffffffffffff16146107cd576107916108e8565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107c4919061095f565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60025f54036108d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cd90610ecd565b60405180910390fd5b60025f81905550565b60015f81905550565b5f33905090565b5f819050919050565b610901816108ef565b82525050565b5f60208201905061091a5f8301846108f8565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61094982610920565b9050919050565b6109598161093f565b82525050565b5f6020820190506109725f830184610950565b92915050565b5f819050919050565b5f61099b61099661099184610920565b610978565b610920565b9050919050565b5f6109ac82610981565b9050919050565b5f6109bd826109a2565b9050919050565b6109cd816109b3565b82525050565b5f6020820190506109e65f8301846109c4565b92915050565b5f80fd5b6109f98161093f565b8114610a03575f80fd5b50565b5f81359050610a14816109f0565b92915050565b5f60208284031215610a2f57610a2e6109ec565b5b5f610a3c84828501610a06565b91505092915050565b5f82825260208201905092915050565b7f49434f2068617320656e646564000000000000000000000000000000000000005f82015250565b5f610a89600d83610a45565b9150610a9482610a55565b602082019050919050565b5f6020820190508181035f830152610ab681610a7d565b9050919050565b7f416d6f756e7420746f207075726368617365206d7573742062652067726561745f8201527f6572207468616e20300000000000000000000000000000000000000000000000602082015250565b5f610b17602983610a45565b9150610b2282610abd565b604082019050919050565b5f6020820190508181035f830152610b4481610b0b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610baf826108ef565b9150610bba836108ef565b925082610bca57610bc9610b4b565b5b828204905092915050565b5f610bdf826108ef565b9150610bea836108ef565b9250828201905080821115610c0257610c01610b78565b5b92915050565b7f49434f20616c6c6f636174696f6e2065786365656465640000000000000000005f82015250565b5f610c3c601783610a45565b9150610c4782610c08565b602082019050919050565b5f6020820190508181035f830152610c6981610c30565b9050919050565b5f610c7a826108ef565b9150610c85836108ef565b9250828202610c93816108ef565b91508282048414831517610caa57610ca9610b78565b5b5092915050565b610cba816108ef565b8114610cc4575f80fd5b50565b5f81519050610cd581610cb1565b92915050565b5f60208284031215610cf057610cef6109ec565b5b5f610cfd84828501610cc7565b91505092915050565b7f496e73756666696369656e7420746f6b656e2062616c616e636520696e2049435f8201527f4f20636f6e747261637400000000000000000000000000000000000000000000602082015250565b5f610d60602a83610a45565b9150610d6b82610d06565b604082019050919050565b5f6020820190508181035f830152610d8d81610d54565b9050919050565b5f604082019050610da75f830185610950565b610db460208301846108f8565b9392505050565b5f8115159050919050565b610dcf81610dbb565b8114610dd9575f80fd5b50565b5f81519050610dea81610dc6565b92915050565b5f60208284031215610e0557610e046109ec565b5b5f610e1284828501610ddc565b91505092915050565b7f49434f2068617320616c726561647920656e64656400000000000000000000005f82015250565b5f610e4f601583610a45565b9150610e5a82610e1b565b602082019050919050565b5f6020820190508181035f830152610e7c81610e43565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610eb7601f83610a45565b9150610ec282610e83565b602082019050919050565b5f6020820190508181035f830152610ee481610eab565b905091905056fea264697066735822122003347e3a7fb929a27efc0c22c84b1671736990f0391eb4893ce5eea60aa646ec64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13A0 CODESIZE SUB DUP1 PUSH3 0x13A0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3B SWAP2 SWAP1 PUSH3 0x2F5 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xAD SWAP2 SWAP1 PUSH3 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC7 DUP2 PUSH3 0x195 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x139 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x130 SWAP1 PUSH3 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 TIMESTAMP PUSH3 0x187 SWAP2 SWAP1 PUSH3 0x437 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x471 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x287 DUP3 PUSH3 0x25C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x299 DUP2 PUSH3 0x27B JUMP JUMPDEST DUP2 EQ PUSH3 0x2A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2B7 DUP2 PUSH3 0x28E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2D1 DUP2 PUSH3 0x2BD JUMP JUMPDEST DUP2 EQ PUSH3 0x2DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2EF DUP2 PUSH3 0x2C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x30E JUMPI PUSH3 0x30D PUSH3 0x258 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x31D DUP6 DUP3 DUP7 ADD PUSH3 0x2A7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x330 DUP6 DUP3 DUP7 ADD PUSH3 0x2DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x345 DUP2 PUSH3 0x27B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x360 PUSH0 DUP4 ADD DUP5 PUSH3 0x33A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x566F6C756D546F6B656E20616464726573732063616E6E6F74206265207A6572 PUSH0 DUP3 ADD MSTORE PUSH32 0x6F00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x3D2 PUSH1 0x21 DUP4 PUSH3 0x366 JUMP JUMPDEST SWAP2 POP PUSH3 0x3DF DUP3 PUSH3 0x376 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x403 DUP2 PUSH3 0x3C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0x443 DUP3 PUSH3 0x2BD JUMP JUMPDEST SWAP2 POP PUSH3 0x450 DUP4 PUSH3 0x2BD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x46B JUMPI PUSH3 0x46A PUSH3 0x40A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF21 DUP1 PUSH3 0x47F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9AF08DD5 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x9AF08DD5 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xA715BF33 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xB0A65B3E EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xE657807B EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21C JUMPI PUSH2 0xA6 JUMP JUMPDEST DUP1 PUSH4 0x24600FC3 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x4513EF7A EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0x518AB2A8 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x7E1055B6 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x154 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x244 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x29F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x2A5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH2 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x326 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x66F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24C PUSH2 0x748 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x2BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x296 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x748 JUMP JUMPDEST PUSH2 0x2B6 PUSH0 PUSH2 0x7CF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH11 0xF8277896582678AC000000 DUP2 JUMP JUMPDEST PUSH2 0x32E PUSH2 0x892 JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x372 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x3B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AB SWAP1 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0xBA5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x40D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x404 SWAP1 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH11 0xF8277896582678AC000000 DUP2 PUSH1 0x3 SLOAD PUSH2 0x427 SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST GT ISZERO PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0xC52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x5 SLOAD DUP4 PUSH2 0x479 SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH2 0x483 SWAP2 SWAP1 PUSH2 0xBA5 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4FA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51E SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x557 SWAP1 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x571 SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP3 SWAP2 SWAP1 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x614 SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8F28852646C20CC973D3A8218F7EEFED58C25C909F78F0265AF4818C3D4DC271 DUP4 PUSH1 0x40 MLOAD PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x66D PUSH2 0x8DF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x677 PUSH2 0x748 JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x6BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x6CC PUSH2 0x748 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x73C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x733 SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x745 DUP2 PUSH2 0x7CF JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x750 PUSH2 0x8E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x76E PUSH2 0x2BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7CD JUMPI PUSH2 0x791 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C4 SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CD SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x901 DUP2 PUSH2 0x8EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x91A PUSH0 DUP4 ADD DUP5 PUSH2 0x8F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x949 DUP3 PUSH2 0x920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x959 DUP2 PUSH2 0x93F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x972 PUSH0 DUP4 ADD DUP5 PUSH2 0x950 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x99B PUSH2 0x996 PUSH2 0x991 DUP5 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x978 JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9AC DUP3 PUSH2 0x981 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9BD DUP3 PUSH2 0x9A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9CD DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x9C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9F9 DUP2 PUSH2 0x93F JUMP JUMPDEST DUP2 EQ PUSH2 0xA03 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA14 DUP2 PUSH2 0x9F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2F JUMPI PUSH2 0xA2E PUSH2 0x9EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA3C DUP5 DUP3 DUP6 ADD PUSH2 0xA06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x49434F2068617320656E64656400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA89 PUSH1 0xD DUP4 PUSH2 0xA45 JUMP JUMPDEST SWAP2 POP PUSH2 0xA94 DUP3 PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAB6 DUP2 PUSH2 0xA7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E7420746F207075726368617365206D757374206265206772656174 PUSH0 DUP3 ADD MSTORE PUSH32 0x6572207468616E20300000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB17 PUSH1 0x29 DUP4 PUSH2 0xA45 JUMP JUMPDEST SWAP2 POP PUSH2 0xB22 DUP3 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB44 DUP2 PUSH2 0xB0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xBAF DUP3 PUSH2 0x8EF JUMP JUMPDEST SWAP2 POP PUSH2 0xBBA DUP4 PUSH2 0x8EF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xBCA JUMPI PUSH2 0xBC9 PUSH2 0xB4B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBDF DUP3 PUSH2 0x8EF JUMP JUMPDEST SWAP2 POP PUSH2 0xBEA DUP4 PUSH2 0x8EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC02 JUMPI PUSH2 0xC01 PUSH2 0xB78 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x49434F20616C6C6F636174696F6E206578636565646564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC3C PUSH1 0x17 DUP4 PUSH2 0xA45 JUMP JUMPDEST SWAP2 POP PUSH2 0xC47 DUP3 PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC69 DUP2 PUSH2 0xC30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC7A DUP3 PUSH2 0x8EF JUMP JUMPDEST SWAP2 POP PUSH2 0xC85 DUP4 PUSH2 0x8EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC93 DUP2 PUSH2 0x8EF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xCAA JUMPI PUSH2 0xCA9 PUSH2 0xB78 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCBA DUP2 PUSH2 0x8EF JUMP JUMPDEST DUP2 EQ PUSH2 0xCC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCD5 DUP2 PUSH2 0xCB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF0 JUMPI PUSH2 0xCEF PUSH2 0x9EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCFD DUP5 DUP3 DUP6 ADD PUSH2 0xCC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E636520696E204943 PUSH0 DUP3 ADD MSTORE PUSH32 0x4F20636F6E747261637400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD60 PUSH1 0x2A DUP4 PUSH2 0xA45 JUMP JUMPDEST SWAP2 POP PUSH2 0xD6B DUP3 PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD8D DUP2 PUSH2 0xD54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDA7 PUSH0 DUP4 ADD DUP6 PUSH2 0x950 JUMP JUMPDEST PUSH2 0xDB4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8F8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDCF DUP2 PUSH2 0xDBB JUMP JUMPDEST DUP2 EQ PUSH2 0xDD9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDEA DUP2 PUSH2 0xDC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE05 JUMPI PUSH2 0xE04 PUSH2 0x9EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE12 DUP5 DUP3 DUP6 ADD PUSH2 0xDDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x49434F2068617320616C726561647920656E6465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE4F PUSH1 0x15 DUP4 PUSH2 0xA45 JUMP JUMPDEST SWAP2 POP PUSH2 0xE5A DUP3 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE7C DUP2 PUSH2 0xE43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEB7 PUSH1 0x1F DUP4 PUSH2 0xA45 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC2 DUP3 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEE4 DUP2 PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB CALLVALUE PUSH31 0x3A7FB929A27EFC0C22C84B1671736990F0391EB4893CE5EEA60AA646EC6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "238:1858:4:-:0;;;572:1;541:32;;694:283;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;764:10;1716:1:1;1821:7;:22;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;825:1:4::1;795:32;;:18;:32;;::::0;787:78:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;896:18;876:10;;:39;;;;;;;;;;;;;;;;;;957:12;939:15;:30;;;;:::i;:::-;926:10;:43;;;;694:283:::0;;238:1858;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:5:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:118::-;1805:24;1823:5;1805:24;:::i;:::-;1800:3;1793:37;1718:118;;:::o;1842:222::-;1935:4;1973:2;1962:9;1958:18;1950:26;;1986:71;2054:1;2043:9;2039:17;2030:6;1986:71;:::i;:::-;1842:222;;;;:::o;2070:169::-;2154:11;2188:6;2183:3;2176:19;2228:4;2223:3;2219:14;2204:29;;2070:169;;;;:::o;2245:220::-;2385:34;2381:1;2373:6;2369:14;2362:58;2454:3;2449:2;2441:6;2437:15;2430:28;2245:220;:::o;2471:366::-;2613:3;2634:67;2698:2;2693:3;2634:67;:::i;:::-;2627:74;;2710:93;2799:3;2710:93;:::i;:::-;2828:2;2823:3;2819:12;2812:19;;2471:366;;;:::o;2843:419::-;3009:4;3047:2;3036:9;3032:18;3024:26;;3096:9;3090:4;3086:20;3082:1;3071:9;3067:17;3060:47;3124:131;3250:4;3124:131;:::i;:::-;3116:139;;2843:419;;;:::o;3268:180::-;3316:77;3313:1;3306:88;3413:4;3410:1;3403:15;3437:4;3434:1;3427:15;3454:191;3494:3;3513:20;3531:1;3513:20;:::i;:::-;3508:25;;3547:20;3565:1;3547:20;:::i;:::-;3542:25;;3590:1;3587;3583:9;3576:16;;3611:3;3608:1;3605:10;3602:36;;;3618:18;;:::i;:::-;3602:36;3454:191;;;;:::o;238:1858:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ICO_ALLOCATION_340": {
									"entryPoint": 791,
									"id": 340,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ICO_PRICE_343": {
									"entryPoint": 779,
									"id": 343,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1864,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_302": {
									"entryPoint": 2280,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": 2271,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 2194,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1999,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burnRateOnBuy_350": {
									"entryPoint": 665,
									"id": 350,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyTokens_476": {
									"entryPoint": 806,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@endIco_514": {
									"entryPoint": 1647,
									"id": 514,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@icoEndTime_347": {
									"entryPoint": 696,
									"id": 347,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 702,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 677,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokensSold_345": {
									"entryPoint": 671,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1732,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@volumToken_332": {
									"entryPoint": 742,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawFunds_495": {
									"entryPoint": 580,
									"id": 495,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack": {
									"entryPoint": 2500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_2001d0d5385711945314ba6c39eab40afa28114401a8af64bba16b92a74161a2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_39ea4dec594d9ac9bc850ec9f977643e1f67f93311400c6a4e8207e22c0b1ff4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5746de827aa31ac23aa9dd808d9c319c3de47d572ecf91a6b385ad5f492f8e40_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b10b7d5b99de83495b14aed5f421558dda011b4ef4a548e201e5ec2451284878_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fdd0490266a0518014ed151987973b5a078f147b2909a65cf96386cde7912b2c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3476,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed": {
									"entryPoint": 2515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2001d0d5385711945314ba6c39eab40afa28114401a8af64bba16b92a74161a2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_39ea4dec594d9ac9bc850ec9f977643e1f67f93311400c6a4e8207e22c0b1ff4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5746de827aa31ac23aa9dd808d9c319c3de47d572ecf91a6b385ad5f492f8e40__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b10b7d5b99de83495b14aed5f421558dda011b4ef4a548e201e5ec2451284878__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fdd0490266a0518014ed151987973b5a078f147b2909a65cf96386cde7912b2c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$290_to_t_address": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2891,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2540,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_2001d0d5385711945314ba6c39eab40afa28114401a8af64bba16b92a74161a2": {
									"entryPoint": 3334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_39ea4dec594d9ac9bc850ec9f977643e1f67f93311400c6a4e8207e22c0b1ff4": {
									"entryPoint": 2645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5746de827aa31ac23aa9dd808d9c319c3de47d572ecf91a6b385ad5f492f8e40": {
									"entryPoint": 2749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b10b7d5b99de83495b14aed5f421558dda011b4ef4a548e201e5ec2451284878": {
									"entryPoint": 3611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 3715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fdd0490266a0518014ed151987973b5a078f147b2909a65cf96386cde7912b2c": {
									"entryPoint": 3080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11871:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:5",
														"type": ""
													}
												],
												"src": "90:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:5",
														"type": ""
													}
												],
												"src": "214:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "487:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "497:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "519:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "479:7:5",
														"type": ""
													}
												],
												"src": "442:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "619:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "629:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "658:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "640:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "629:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "601:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "611:7:5",
														"type": ""
													}
												],
												"src": "574:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:5",
														"type": ""
													}
												],
												"src": "676:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:5",
														"type": ""
													}
												],
												"src": "800:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1060:28:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1070:12:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1077:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1070:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1046:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1056:3:5",
														"type": ""
													}
												],
												"src": "1028:60:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:82:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1164:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1222:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "1204:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1204:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1195:8:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1195:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1177:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1177:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1164:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1134:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1144:9:5",
														"type": ""
													}
												],
												"src": "1094:142:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1302:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1312:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1356:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1325:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1325:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1312:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1282:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1292:9:5",
														"type": ""
													}
												],
												"src": "1242:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1448:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1458:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1502:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1471:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1458:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$290_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1428:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1438:9:5",
														"type": ""
													}
												],
												"src": "1374:140:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1599:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1616:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1666:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$290_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1621:44:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1621:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1609:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1609:64:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1609:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1587:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1594:3:5",
														"type": ""
													}
												],
												"src": "1520:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1797:138:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1807:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1819:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1830:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1815:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1815:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1807:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1901:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1914:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1925:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1910:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1843:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:85:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1843:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1769:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1781:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1792:4:5",
														"type": ""
													}
												],
												"src": "1685:250:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1981:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1991:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2007:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2001:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1991:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1974:6:5",
														"type": ""
													}
												],
												"src": "1941:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2111:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2128:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2121:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2121:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2121:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2022:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2234:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2251:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2254:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2244:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2244:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2244:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2145:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2311:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2368:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2377:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2370:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2370:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2370:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2334:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2359:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2341:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2341:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2331:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2331:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:43:5"
															},
															"nodeType": "YulIf",
															"src": "2321:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2304:5:5",
														"type": ""
													}
												],
												"src": "2268:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2448:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2458:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2480:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2467:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2458:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2523:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2496:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2496:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2496:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2426:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2434:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2442:5:5",
														"type": ""
													}
												],
												"src": "2396:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2607:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2653:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2655:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2655:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2655:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2628:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2637:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2624:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2649:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2620:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2620:32:5"
															},
															"nodeType": "YulIf",
															"src": "2617:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2746:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2761:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2775:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2765:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2790:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2825:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2836:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2821:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2821:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2845:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2800:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2800:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2790:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2577:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2588:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2600:6:5",
														"type": ""
													}
												],
												"src": "2541:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2972:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2989:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2994:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2982:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2982:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2982:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3010:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3029:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3034:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3025:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3025:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3010:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2944:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2949:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2960:11:5",
														"type": ""
													}
												],
												"src": "2876:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3157:57:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3179:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3187:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3175:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3175:14:5"
																	},
																	{
																		"hexValue": "49434f2068617320656e646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3191:15:5",
																		"type": "",
																		"value": "ICO has ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3168:39:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3168:39:5"
														}
													]
												},
												"name": "store_literal_in_memory_39ea4dec594d9ac9bc850ec9f977643e1f67f93311400c6a4e8207e22c0b1ff4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3149:6:5",
														"type": ""
													}
												],
												"src": "3051:163:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3366:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3376:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3442:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:2:5",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3383:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3376:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3548:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_39ea4dec594d9ac9bc850ec9f977643e1f67f93311400c6a4e8207e22c0b1ff4",
																	"nodeType": "YulIdentifier",
																	"src": "3459:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3459:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3459:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3561:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3572:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3577:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3568:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3568:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3561:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_39ea4dec594d9ac9bc850ec9f977643e1f67f93311400c6a4e8207e22c0b1ff4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3354:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3362:3:5",
														"type": ""
													}
												],
												"src": "3220:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3763:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3773:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3785:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3796:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3781:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3781:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3773:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3820:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3831:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3816:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3816:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3839:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3845:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3835:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3835:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3809:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3809:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3809:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3865:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3999:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_39ea4dec594d9ac9bc850ec9f977643e1f67f93311400c6a4e8207e22c0b1ff4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3873:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3873:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3865:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_39ea4dec594d9ac9bc850ec9f977643e1f67f93311400c6a4e8207e22c0b1ff4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3743:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3758:4:5",
														"type": ""
													}
												],
												"src": "3592:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4123:122:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4145:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4153:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4141:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4141:14:5"
																	},
																	{
																		"hexValue": "416d6f756e7420746f207075726368617365206d757374206265206772656174",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4157:34:5",
																		"type": "",
																		"value": "Amount to purchase must be great"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4134:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4134:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4134:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4213:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4221:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4209:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4209:15:5"
																	},
																	{
																		"hexValue": "6572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4226:11:5",
																		"type": "",
																		"value": "er than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4202:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4202:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4202:36:5"
														}
													]
												},
												"name": "store_literal_in_memory_5746de827aa31ac23aa9dd808d9c319c3de47d572ecf91a6b385ad5f492f8e40",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4115:6:5",
														"type": ""
													}
												],
												"src": "4017:228:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4397:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4407:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4473:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4478:2:5",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4414:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4414:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4407:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4579:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5746de827aa31ac23aa9dd808d9c319c3de47d572ecf91a6b385ad5f492f8e40",
																	"nodeType": "YulIdentifier",
																	"src": "4490:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4490:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4490:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4592:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4603:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4608:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4599:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4599:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4592:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5746de827aa31ac23aa9dd808d9c319c3de47d572ecf91a6b385ad5f492f8e40_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4385:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4393:3:5",
														"type": ""
													}
												],
												"src": "4251:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4794:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4804:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4816:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4827:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4812:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4812:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4804:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4851:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4862:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4847:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4847:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4870:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4876:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4866:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4866:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4840:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4840:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4840:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4896:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5030:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5746de827aa31ac23aa9dd808d9c319c3de47d572ecf91a6b385ad5f492f8e40_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4904:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4904:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4896:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5746de827aa31ac23aa9dd808d9c319c3de47d572ecf91a6b385ad5f492f8e40__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4774:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4789:4:5",
														"type": ""
													}
												],
												"src": "4623:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5076:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5093:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5096:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5086:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5086:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5086:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5190:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5193:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5183:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5183:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5183:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5214:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5217:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5207:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5207:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5207:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "5048:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5262:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5279:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5282:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5272:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5272:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5272:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5376:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5379:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5369:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5369:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5400:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5403:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5393:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5393:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5393:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5234:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5462:143:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5472:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5495:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5477:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5477:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5472:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5506:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5529:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5511:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5511:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5506:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5553:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5555:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5555:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5555:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5550:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5543:9:5"
															},
															"nodeType": "YulIf",
															"src": "5540:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5585:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5594:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5597:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5590:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5590:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5585:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5451:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5454:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5460:1:5",
														"type": ""
													}
												],
												"src": "5420:185:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5655:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5665:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5688:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5670:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5670:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5665:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5699:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5722:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5704:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5704:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5699:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5733:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5744:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5747:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5740:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5740:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5733:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5773:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5775:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5775:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5775:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5765:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5768:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5762:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5762:10:5"
															},
															"nodeType": "YulIf",
															"src": "5759:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5642:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5645:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5651:3:5",
														"type": ""
													}
												],
												"src": "5611:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5914:67:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5936:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5944:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5932:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5932:14:5"
																	},
																	{
																		"hexValue": "49434f20616c6c6f636174696f6e206578636565646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5948:25:5",
																		"type": "",
																		"value": "ICO allocation exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:49:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5925:49:5"
														}
													]
												},
												"name": "store_literal_in_memory_fdd0490266a0518014ed151987973b5a078f147b2909a65cf96386cde7912b2c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5906:6:5",
														"type": ""
													}
												],
												"src": "5808:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6133:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6143:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6209:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6214:2:5",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6150:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6150:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6143:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6315:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fdd0490266a0518014ed151987973b5a078f147b2909a65cf96386cde7912b2c",
																	"nodeType": "YulIdentifier",
																	"src": "6226:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6226:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6226:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6328:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6339:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6344:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6335:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6335:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6328:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fdd0490266a0518014ed151987973b5a078f147b2909a65cf96386cde7912b2c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6121:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6129:3:5",
														"type": ""
													}
												],
												"src": "5987:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6530:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6540:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6552:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6563:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6548:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6548:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6540:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6587:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6598:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6583:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6583:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6606:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6612:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6602:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6602:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6576:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6576:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6632:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6766:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fdd0490266a0518014ed151987973b5a078f147b2909a65cf96386cde7912b2c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6640:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6640:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6632:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fdd0490266a0518014ed151987973b5a078f147b2909a65cf96386cde7912b2c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6510:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6525:4:5",
														"type": ""
													}
												],
												"src": "6359:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6832:362:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6842:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6865:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6847:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6847:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6842:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6876:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6899:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6881:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6881:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6876:1:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6910:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6933:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6936:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6929:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6929:9:5"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "6914:11:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6947:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "6976:11:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6958:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6958:30:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6947:7:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7165:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7167:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7167:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7167:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7098:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7091:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7091:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "7121:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "7128:7:5"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "7137:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "7124:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7124:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "7118:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7118:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "7071:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7071:83:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7051:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7051:113:5"
															},
															"nodeType": "YulIf",
															"src": "7048:139:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6815:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6818:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6824:7:5",
														"type": ""
													}
												],
												"src": "6784:410:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7243:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7300:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7309:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7312:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7302:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7302:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7302:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7266:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7291:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "7273:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7273:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7263:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7263:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7256:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7256:43:5"
															},
															"nodeType": "YulIf",
															"src": "7253:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7236:5:5",
														"type": ""
													}
												],
												"src": "7200:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7391:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7401:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7416:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7410:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7410:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7401:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7459:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7432:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7432:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7432:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7369:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7377:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7385:5:5",
														"type": ""
													}
												],
												"src": "7328:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7554:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7600:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7602:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7602:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7602:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7575:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7584:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7571:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7571:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7596:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7567:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7567:32:5"
															},
															"nodeType": "YulIf",
															"src": "7564:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "7693:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7708:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7722:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7712:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7737:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7783:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7794:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7779:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7779:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7803:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7747:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7747:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7737:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7524:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7535:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7547:6:5",
														"type": ""
													}
												],
												"src": "7477:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7940:123:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7962:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7970:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7958:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7958:14:5"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420746f6b656e2062616c616e636520696e204943",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7974:34:5",
																		"type": "",
																		"value": "Insufficient token balance in IC"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7951:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7951:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7951:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8030:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8038:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8026:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8026:15:5"
																	},
																	{
																		"hexValue": "4f20636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8043:12:5",
																		"type": "",
																		"value": "O contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8019:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8019:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8019:37:5"
														}
													]
												},
												"name": "store_literal_in_memory_2001d0d5385711945314ba6c39eab40afa28114401a8af64bba16b92a74161a2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7932:6:5",
														"type": ""
													}
												],
												"src": "7834:229:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8215:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8225:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8291:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8296:2:5",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8232:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8232:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8225:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8397:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2001d0d5385711945314ba6c39eab40afa28114401a8af64bba16b92a74161a2",
																	"nodeType": "YulIdentifier",
																	"src": "8308:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8308:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8308:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8410:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8421:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8426:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8417:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8417:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8410:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2001d0d5385711945314ba6c39eab40afa28114401a8af64bba16b92a74161a2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8203:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8211:3:5",
														"type": ""
													}
												],
												"src": "8069:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8612:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8622:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8634:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8645:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8630:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8630:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8622:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8669:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8680:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8665:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8665:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8688:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8694:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8684:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8684:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8658:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8658:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8658:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8714:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8848:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2001d0d5385711945314ba6c39eab40afa28114401a8af64bba16b92a74161a2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8722:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8722:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8714:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2001d0d5385711945314ba6c39eab40afa28114401a8af64bba16b92a74161a2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8592:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8607:4:5",
														"type": ""
													}
												],
												"src": "8441:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8992:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9002:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9014:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9025:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9010:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9010:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9002:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9082:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9095:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9106:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9091:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9091:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9038:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9038:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9038:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9163:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9176:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9187:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9172:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9172:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9119:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9119:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9119:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8956:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8968:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8976:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8987:4:5",
														"type": ""
													}
												],
												"src": "8866:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9246:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9256:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9281:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9274:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9274:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9267:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9267:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9256:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9228:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9238:7:5",
														"type": ""
													}
												],
												"src": "9204:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9340:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9394:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9403:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9406:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9396:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9396:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9396:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9363:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9385:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "9370:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9370:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9360:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9360:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9353:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9353:40:5"
															},
															"nodeType": "YulIf",
															"src": "9350:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9333:5:5",
														"type": ""
													}
												],
												"src": "9300:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9482:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9492:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9507:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9501:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9501:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9492:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9547:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9523:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9523:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9523:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9460:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9468:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9476:5:5",
														"type": ""
													}
												],
												"src": "9422:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9639:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9685:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9687:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9687:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9687:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9660:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9669:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9656:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9656:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9681:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9652:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9652:32:5"
															},
															"nodeType": "YulIf",
															"src": "9649:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "9778:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9793:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9807:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9797:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9822:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9865:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9876:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9861:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9861:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9885:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9832:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9832:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9822:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9609:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9620:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9632:6:5",
														"type": ""
													}
												],
												"src": "9565:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10022:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10044:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10052:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10040:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10040:14:5"
																	},
																	{
																		"hexValue": "49434f2068617320616c726561647920656e646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10056:23:5",
																		"type": "",
																		"value": "ICO has already ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10033:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10033:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10033:47:5"
														}
													]
												},
												"name": "store_literal_in_memory_b10b7d5b99de83495b14aed5f421558dda011b4ef4a548e201e5ec2451284878",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10014:6:5",
														"type": ""
													}
												],
												"src": "9916:171:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10239:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10249:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10315:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10320:2:5",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10256:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10256:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10249:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10421:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b10b7d5b99de83495b14aed5f421558dda011b4ef4a548e201e5ec2451284878",
																	"nodeType": "YulIdentifier",
																	"src": "10332:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10332:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10332:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10434:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10445:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10450:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10441:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10441:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10434:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b10b7d5b99de83495b14aed5f421558dda011b4ef4a548e201e5ec2451284878_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10227:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10235:3:5",
														"type": ""
													}
												],
												"src": "10093:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10636:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10646:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10658:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10669:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10654:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10654:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10646:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10693:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10704:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10689:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10689:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10712:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10718:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10708:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10708:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10682:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10682:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10682:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10738:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10872:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b10b7d5b99de83495b14aed5f421558dda011b4ef4a548e201e5ec2451284878_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10746:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10746:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10738:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b10b7d5b99de83495b14aed5f421558dda011b4ef4a548e201e5ec2451284878__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10616:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10631:4:5",
														"type": ""
													}
												],
												"src": "10465:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10996:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11018:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11026:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11014:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11014:14:5"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11030:33:5",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11007:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11007:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11007:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10988:6:5",
														"type": ""
													}
												],
												"src": "10890:181:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11223:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11233:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11299:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11304:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11240:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11240:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11233:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11405:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "11316:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11316:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11316:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11418:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11429:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11434:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11425:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11425:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11418:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11211:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11219:3:5",
														"type": ""
													}
												],
												"src": "11077:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11620:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11630:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11642:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11653:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11638:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11638:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11630:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11677:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11688:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11673:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11673:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11696:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11702:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11692:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11692:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11666:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11666:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11666:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11722:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11856:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11730:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11730:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11722:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11600:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11615:4:5",
														"type": ""
													}
												],
												"src": "11449:419:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$290_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$290_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$290__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$290_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_39ea4dec594d9ac9bc850ec9f977643e1f67f93311400c6a4e8207e22c0b1ff4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ICO has ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_39ea4dec594d9ac9bc850ec9f977643e1f67f93311400c6a4e8207e22c0b1ff4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_39ea4dec594d9ac9bc850ec9f977643e1f67f93311400c6a4e8207e22c0b1ff4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_39ea4dec594d9ac9bc850ec9f977643e1f67f93311400c6a4e8207e22c0b1ff4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_39ea4dec594d9ac9bc850ec9f977643e1f67f93311400c6a4e8207e22c0b1ff4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5746de827aa31ac23aa9dd808d9c319c3de47d572ecf91a6b385ad5f492f8e40(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount to purchase must be great\")\n\n        mstore(add(memPtr, 32), \"er than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_5746de827aa31ac23aa9dd808d9c319c3de47d572ecf91a6b385ad5f492f8e40_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_5746de827aa31ac23aa9dd808d9c319c3de47d572ecf91a6b385ad5f492f8e40(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5746de827aa31ac23aa9dd808d9c319c3de47d572ecf91a6b385ad5f492f8e40__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5746de827aa31ac23aa9dd808d9c319c3de47d572ecf91a6b385ad5f492f8e40_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_fdd0490266a0518014ed151987973b5a078f147b2909a65cf96386cde7912b2c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ICO allocation exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_fdd0490266a0518014ed151987973b5a078f147b2909a65cf96386cde7912b2c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_fdd0490266a0518014ed151987973b5a078f147b2909a65cf96386cde7912b2c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fdd0490266a0518014ed151987973b5a078f147b2909a65cf96386cde7912b2c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fdd0490266a0518014ed151987973b5a078f147b2909a65cf96386cde7912b2c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_2001d0d5385711945314ba6c39eab40afa28114401a8af64bba16b92a74161a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient token balance in IC\")\n\n        mstore(add(memPtr, 32), \"O contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_2001d0d5385711945314ba6c39eab40afa28114401a8af64bba16b92a74161a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_2001d0d5385711945314ba6c39eab40afa28114401a8af64bba16b92a74161a2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2001d0d5385711945314ba6c39eab40afa28114401a8af64bba16b92a74161a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2001d0d5385711945314ba6c39eab40afa28114401a8af64bba16b92a74161a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_b10b7d5b99de83495b14aed5f421558dda011b4ef4a548e201e5ec2451284878(memPtr) {\n\n        mstore(add(memPtr, 0), \"ICO has already ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_b10b7d5b99de83495b14aed5f421558dda011b4ef4a548e201e5ec2451284878_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_b10b7d5b99de83495b14aed5f421558dda011b4ef4a548e201e5ec2451284878(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b10b7d5b99de83495b14aed5f421558dda011b4ef4a548e201e5ec2451284878__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b10b7d5b99de83495b14aed5f421558dda011b4ef4a548e201e5ec2451284878_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a6575f3560e01c80639af08dd5116100635780639af08dd51461017e578063a715bf33146101a8578063b0a65b3e146101d2578063d0febe4c146101fc578063e657807b14610206578063f2fde38b1461021c576100a6565b806324600fc3146100aa5780634513ef7a146100c0578063518ab2a8146100ea578063715018a6146101145780637e1055b61461012a5780638da5cb5b14610154575b5f80fd5b3480156100b5575f80fd5b506100be610244565b005b3480156100cb575f80fd5b506100d4610299565b6040516100e19190610907565b60405180910390f35b3480156100f5575f80fd5b506100fe61029f565b60405161010b9190610907565b60405180910390f35b34801561011f575f80fd5b506101286102a5565b005b348015610135575f80fd5b5061013e6102b8565b60405161014b9190610907565b60405180910390f35b34801561015f575f80fd5b506101686102be565b604051610175919061095f565b60405180910390f35b348015610189575f80fd5b506101926102e6565b60405161019f91906109d3565b60405180910390f35b3480156101b3575f80fd5b506101bc61030b565b6040516101c99190610907565b60405180910390f35b3480156101dd575f80fd5b506101e6610317565b6040516101f39190610907565b60405180910390f35b610204610326565b005b348015610211575f80fd5b5061021a61066f565b005b348015610227575f80fd5b50610242600480360381019061023d9190610a1a565b6106c4565b005b61024c610748565b6102546102be565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610296573d5f803e3d5ffd5b50565b60055481565b60035481565b6102ad610748565b6102b65f6107cf565b565b60045481565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b670de0b6b3a764000081565b6af8277896582678ac00000081565b61032e610892565b6004544210610372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036990610a9f565b60405180910390fd5b5f34116103b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab90610b2d565b60405180910390fd5b5f670de0b6b3a7640000346103c99190610ba5565b90505f811161040d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040490610b2d565b60405180910390fd5b6af8277896582678ac000000816003546104279190610bd5565b1115610468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045f90610c52565b60405180910390fd5b5f6064600554836104799190610c70565b6104839190610ba5565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104df919061095f565b602060405180830381865afa1580156104fa573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061051e9190610cdb565b811115610560576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055790610d76565b60405180910390fd5b8160035f8282546105719190610bd5565b9250508190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016105d4929190610d94565b6020604051808303815f875af11580156105f0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106149190610df0565b503373ffffffffffffffffffffffffffffffffffffffff167f8f28852646c20cc973d3a8218f7eefed58c25c909f78f0265af4818c3d4dc2718360405161065b9190610907565b60405180910390a2505061066d6108df565b565b610677610748565b60045442106106bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b290610e65565b60405180910390fd5b42600481905550565b6106cc610748565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361073c575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610733919061095f565b60405180910390fd5b610745816107cf565b50565b6107506108e8565b73ffffffffffffffffffffffffffffffffffffffff1661076e6102be565b73ffffffffffffffffffffffffffffffffffffffff16146107cd576107916108e8565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107c4919061095f565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60025f54036108d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cd90610ecd565b60405180910390fd5b60025f81905550565b60015f81905550565b5f33905090565b5f819050919050565b610901816108ef565b82525050565b5f60208201905061091a5f8301846108f8565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61094982610920565b9050919050565b6109598161093f565b82525050565b5f6020820190506109725f830184610950565b92915050565b5f819050919050565b5f61099b61099661099184610920565b610978565b610920565b9050919050565b5f6109ac82610981565b9050919050565b5f6109bd826109a2565b9050919050565b6109cd816109b3565b82525050565b5f6020820190506109e65f8301846109c4565b92915050565b5f80fd5b6109f98161093f565b8114610a03575f80fd5b50565b5f81359050610a14816109f0565b92915050565b5f60208284031215610a2f57610a2e6109ec565b5b5f610a3c84828501610a06565b91505092915050565b5f82825260208201905092915050565b7f49434f2068617320656e646564000000000000000000000000000000000000005f82015250565b5f610a89600d83610a45565b9150610a9482610a55565b602082019050919050565b5f6020820190508181035f830152610ab681610a7d565b9050919050565b7f416d6f756e7420746f207075726368617365206d7573742062652067726561745f8201527f6572207468616e20300000000000000000000000000000000000000000000000602082015250565b5f610b17602983610a45565b9150610b2282610abd565b604082019050919050565b5f6020820190508181035f830152610b4481610b0b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610baf826108ef565b9150610bba836108ef565b925082610bca57610bc9610b4b565b5b828204905092915050565b5f610bdf826108ef565b9150610bea836108ef565b9250828201905080821115610c0257610c01610b78565b5b92915050565b7f49434f20616c6c6f636174696f6e2065786365656465640000000000000000005f82015250565b5f610c3c601783610a45565b9150610c4782610c08565b602082019050919050565b5f6020820190508181035f830152610c6981610c30565b9050919050565b5f610c7a826108ef565b9150610c85836108ef565b9250828202610c93816108ef565b91508282048414831517610caa57610ca9610b78565b5b5092915050565b610cba816108ef565b8114610cc4575f80fd5b50565b5f81519050610cd581610cb1565b92915050565b5f60208284031215610cf057610cef6109ec565b5b5f610cfd84828501610cc7565b91505092915050565b7f496e73756666696369656e7420746f6b656e2062616c616e636520696e2049435f8201527f4f20636f6e747261637400000000000000000000000000000000000000000000602082015250565b5f610d60602a83610a45565b9150610d6b82610d06565b604082019050919050565b5f6020820190508181035f830152610d8d81610d54565b9050919050565b5f604082019050610da75f830185610950565b610db460208301846108f8565b9392505050565b5f8115159050919050565b610dcf81610dbb565b8114610dd9575f80fd5b50565b5f81519050610dea81610dc6565b92915050565b5f60208284031215610e0557610e046109ec565b5b5f610e1284828501610ddc565b91505092915050565b7f49434f2068617320616c726561647920656e64656400000000000000000000005f82015250565b5f610e4f601583610a45565b9150610e5a82610e1b565b602082019050919050565b5f6020820190508181035f830152610e7c81610e43565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610eb7601f83610a45565b9150610ec282610e83565b602082019050919050565b5f6020820190508181035f830152610ee481610eab565b905091905056fea264697066735822122003347e3a7fb929a27efc0c22c84b1671736990f0391eb4893ce5eea60aa646ec64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9AF08DD5 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x9AF08DD5 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xA715BF33 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xB0A65B3E EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xE657807B EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21C JUMPI PUSH2 0xA6 JUMP JUMPDEST DUP1 PUSH4 0x24600FC3 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x4513EF7A EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0x518AB2A8 EQ PUSH2 0xEA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x7E1055B6 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x154 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x244 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH2 0x29F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x2A5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x168 PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x192 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BC PUSH2 0x30B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x326 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x211 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A PUSH2 0x66F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24C PUSH2 0x748 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x2BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x296 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x748 JUMP JUMPDEST PUSH2 0x2B6 PUSH0 PUSH2 0x7CF JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH11 0xF8277896582678AC000000 DUP2 JUMP JUMPDEST PUSH2 0x32E PUSH2 0x892 JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x372 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x3B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AB SWAP1 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0x3C9 SWAP2 SWAP1 PUSH2 0xBA5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x40D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x404 SWAP1 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH11 0xF8277896582678AC000000 DUP2 PUSH1 0x3 SLOAD PUSH2 0x427 SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST GT ISZERO PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP1 PUSH2 0xC52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x5 SLOAD DUP4 PUSH2 0x479 SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH2 0x483 SWAP2 SWAP1 PUSH2 0xBA5 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4FA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51E SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x557 SWAP1 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x571 SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP3 SWAP2 SWAP1 PUSH2 0xD94 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x614 SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8F28852646C20CC973D3A8218F7EEFED58C25C909F78F0265AF4818C3D4DC271 DUP4 PUSH1 0x40 MLOAD PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x66D PUSH2 0x8DF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x677 PUSH2 0x748 JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x6BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B2 SWAP1 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x6CC PUSH2 0x748 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x73C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x733 SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x745 DUP2 PUSH2 0x7CF JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x750 PUSH2 0x8E8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x76E PUSH2 0x2BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7CD JUMPI PUSH2 0x791 PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C4 SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x8D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CD SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x901 DUP2 PUSH2 0x8EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x91A PUSH0 DUP4 ADD DUP5 PUSH2 0x8F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x949 DUP3 PUSH2 0x920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x959 DUP2 PUSH2 0x93F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x972 PUSH0 DUP4 ADD DUP5 PUSH2 0x950 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x99B PUSH2 0x996 PUSH2 0x991 DUP5 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x978 JUMP JUMPDEST PUSH2 0x920 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9AC DUP3 PUSH2 0x981 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9BD DUP3 PUSH2 0x9A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9CD DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x9C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9F9 DUP2 PUSH2 0x93F JUMP JUMPDEST DUP2 EQ PUSH2 0xA03 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA14 DUP2 PUSH2 0x9F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA2F JUMPI PUSH2 0xA2E PUSH2 0x9EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA3C DUP5 DUP3 DUP6 ADD PUSH2 0xA06 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x49434F2068617320656E64656400000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA89 PUSH1 0xD DUP4 PUSH2 0xA45 JUMP JUMPDEST SWAP2 POP PUSH2 0xA94 DUP3 PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAB6 DUP2 PUSH2 0xA7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E7420746F207075726368617365206D757374206265206772656174 PUSH0 DUP3 ADD MSTORE PUSH32 0x6572207468616E20300000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB17 PUSH1 0x29 DUP4 PUSH2 0xA45 JUMP JUMPDEST SWAP2 POP PUSH2 0xB22 DUP3 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB44 DUP2 PUSH2 0xB0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xBAF DUP3 PUSH2 0x8EF JUMP JUMPDEST SWAP2 POP PUSH2 0xBBA DUP4 PUSH2 0x8EF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xBCA JUMPI PUSH2 0xBC9 PUSH2 0xB4B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xBDF DUP3 PUSH2 0x8EF JUMP JUMPDEST SWAP2 POP PUSH2 0xBEA DUP4 PUSH2 0x8EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC02 JUMPI PUSH2 0xC01 PUSH2 0xB78 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x49434F20616C6C6F636174696F6E206578636565646564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC3C PUSH1 0x17 DUP4 PUSH2 0xA45 JUMP JUMPDEST SWAP2 POP PUSH2 0xC47 DUP3 PUSH2 0xC08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC69 DUP2 PUSH2 0xC30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC7A DUP3 PUSH2 0x8EF JUMP JUMPDEST SWAP2 POP PUSH2 0xC85 DUP4 PUSH2 0x8EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xC93 DUP2 PUSH2 0x8EF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xCAA JUMPI PUSH2 0xCA9 PUSH2 0xB78 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCBA DUP2 PUSH2 0x8EF JUMP JUMPDEST DUP2 EQ PUSH2 0xCC4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCD5 DUP2 PUSH2 0xCB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF0 JUMPI PUSH2 0xCEF PUSH2 0x9EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCFD DUP5 DUP3 DUP6 ADD PUSH2 0xCC7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420746F6B656E2062616C616E636520696E204943 PUSH0 DUP3 ADD MSTORE PUSH32 0x4F20636F6E747261637400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD60 PUSH1 0x2A DUP4 PUSH2 0xA45 JUMP JUMPDEST SWAP2 POP PUSH2 0xD6B DUP3 PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD8D DUP2 PUSH2 0xD54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xDA7 PUSH0 DUP4 ADD DUP6 PUSH2 0x950 JUMP JUMPDEST PUSH2 0xDB4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8F8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDCF DUP2 PUSH2 0xDBB JUMP JUMPDEST DUP2 EQ PUSH2 0xDD9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDEA DUP2 PUSH2 0xDC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE05 JUMPI PUSH2 0xE04 PUSH2 0x9EC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE12 DUP5 DUP3 DUP6 ADD PUSH2 0xDDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x49434F2068617320616C726561647920656E6465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE4F PUSH1 0x15 DUP4 PUSH2 0xA45 JUMP JUMPDEST SWAP2 POP PUSH2 0xE5A DUP3 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE7C DUP2 PUSH2 0xE43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEB7 PUSH1 0x1F DUP4 PUSH2 0xA45 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC2 DUP3 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEE4 DUP2 PUSH2 0xEAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB CALLVALUE PUSH31 0x3A7FB929A27EFC0C22C84B1671736990F0391EB4893CE5EEA60AA646EC6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "238:1858:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1790:111;;;;;;;;;;;;;:::i;:::-;;541:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;477:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;509:25:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;291:24:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;394:43;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;322:65;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;985:797;;;:::i;:::-;;1909:184;;;;;;;;;;;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1790:111:4;1531:13:0;:11;:13::i;:::-;1853:7:4::1;:5;:7::i;:::-;1845:25;;:48;1871:21;1845:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1790:111::o:0;541:32::-;;;;:::o;477:25::-;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;509:25:4:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;291:24:4:-;;;;;;;;;;;;;:::o;394:43::-;430:7;394:43;:::o;322:65::-;363:24;322:65;:::o;985:797::-;2261:21:1;:19;:21::i;:::-;1073:10:4::1;;1055:15;:28;1047:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1132:1;1120:9;:13;1112:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1192:24;430:7;1219:9;:21;;;;:::i;:::-;1192:48;;1278:1;1259:16;:20;1251:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;363:24;1357:16;1344:10;;:29;;;;:::i;:::-;:47;;1336:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1432:18;1490:3;1473:13;;1454:16;:32;;;;:::i;:::-;1453:40;;;;:::i;:::-;1432:61;;1526:10;;;;;;;;;;;:20;;;1555:4;1526:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1512:10;:49;;1504:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;1635:16;1621:10;;:30;;;;;;;:::i;:::-;;;;;;;;1662:10;;;;;;;;;;;:19;;;1682:10;1694:16;1662:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1745:10;1729:45;;;1757:16;1729:45;;;;;;:::i;:::-;;;;;;;;1036:746;;2303:20:1::0;:18;:20::i;:::-;985:797:4:o;1909:184::-;1531:13:0;:11;:13::i;:::-;1983:10:4::1;;1965:15;:28;1957:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2043:15;2030:10;:28;;;;1909:184::o:0;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;7:77:5:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:96::-;611:7;640:24;658:5;640:24;:::i;:::-;629:35;;574:96;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1028:60::-;1056:3;1077:5;1070:12;;1028:60;;;:::o;1094:142::-;1144:9;1177:53;1195:34;1204:24;1222:5;1204:24;:::i;:::-;1195:34;:::i;:::-;1177:53;:::i;:::-;1164:66;;1094:142;;;:::o;1242:126::-;1292:9;1325:37;1356:5;1325:37;:::i;:::-;1312:50;;1242:126;;;:::o;1374:140::-;1438:9;1471:37;1502:5;1471:37;:::i;:::-;1458:50;;1374:140;;;:::o;1520:159::-;1621:51;1666:5;1621:51;:::i;:::-;1616:3;1609:64;1520:159;;:::o;1685:250::-;1792:4;1830:2;1819:9;1815:18;1807:26;;1843:85;1925:1;1914:9;1910:17;1901:6;1843:85;:::i;:::-;1685:250;;;;:::o;2022:117::-;2131:1;2128;2121:12;2268:122;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:329::-;2600:6;2649:2;2637:9;2628:7;2624:23;2620:32;2617:119;;;2655:79;;:::i;:::-;2617:119;2775:1;2800:53;2845:7;2836:6;2825:9;2821:22;2800:53;:::i;:::-;2790:63;;2746:117;2541:329;;;;:::o;2876:169::-;2960:11;2994:6;2989:3;2982:19;3034:4;3029:3;3025:14;3010:29;;2876:169;;;;:::o;3051:163::-;3191:15;3187:1;3179:6;3175:14;3168:39;3051:163;:::o;3220:366::-;3362:3;3383:67;3447:2;3442:3;3383:67;:::i;:::-;3376:74;;3459:93;3548:3;3459:93;:::i;:::-;3577:2;3572:3;3568:12;3561:19;;3220:366;;;:::o;3592:419::-;3758:4;3796:2;3785:9;3781:18;3773:26;;3845:9;3839:4;3835:20;3831:1;3820:9;3816:17;3809:47;3873:131;3999:4;3873:131;:::i;:::-;3865:139;;3592:419;;;:::o;4017:228::-;4157:34;4153:1;4145:6;4141:14;4134:58;4226:11;4221:2;4213:6;4209:15;4202:36;4017:228;:::o;4251:366::-;4393:3;4414:67;4478:2;4473:3;4414:67;:::i;:::-;4407:74;;4490:93;4579:3;4490:93;:::i;:::-;4608:2;4603:3;4599:12;4592:19;;4251:366;;;:::o;4623:419::-;4789:4;4827:2;4816:9;4812:18;4804:26;;4876:9;4870:4;4866:20;4862:1;4851:9;4847:17;4840:47;4904:131;5030:4;4904:131;:::i;:::-;4896:139;;4623:419;;;:::o;5048:180::-;5096:77;5093:1;5086:88;5193:4;5190:1;5183:15;5217:4;5214:1;5207:15;5234:180;5282:77;5279:1;5272:88;5379:4;5376:1;5369:15;5403:4;5400:1;5393:15;5420:185;5460:1;5477:20;5495:1;5477:20;:::i;:::-;5472:25;;5511:20;5529:1;5511:20;:::i;:::-;5506:25;;5550:1;5540:35;;5555:18;;:::i;:::-;5540:35;5597:1;5594;5590:9;5585:14;;5420:185;;;;:::o;5611:191::-;5651:3;5670:20;5688:1;5670:20;:::i;:::-;5665:25;;5704:20;5722:1;5704:20;:::i;:::-;5699:25;;5747:1;5744;5740:9;5733:16;;5768:3;5765:1;5762:10;5759:36;;;5775:18;;:::i;:::-;5759:36;5611:191;;;;:::o;5808:173::-;5948:25;5944:1;5936:6;5932:14;5925:49;5808:173;:::o;5987:366::-;6129:3;6150:67;6214:2;6209:3;6150:67;:::i;:::-;6143:74;;6226:93;6315:3;6226:93;:::i;:::-;6344:2;6339:3;6335:12;6328:19;;5987:366;;;:::o;6359:419::-;6525:4;6563:2;6552:9;6548:18;6540:26;;6612:9;6606:4;6602:20;6598:1;6587:9;6583:17;6576:47;6640:131;6766:4;6640:131;:::i;:::-;6632:139;;6359:419;;;:::o;6784:410::-;6824:7;6847:20;6865:1;6847:20;:::i;:::-;6842:25;;6881:20;6899:1;6881:20;:::i;:::-;6876:25;;6936:1;6933;6929:9;6958:30;6976:11;6958:30;:::i;:::-;6947:41;;7137:1;7128:7;7124:15;7121:1;7118:22;7098:1;7091:9;7071:83;7048:139;;7167:18;;:::i;:::-;7048:139;6832:362;6784:410;;;;:::o;7200:122::-;7273:24;7291:5;7273:24;:::i;:::-;7266:5;7263:35;7253:63;;7312:1;7309;7302:12;7253:63;7200:122;:::o;7328:143::-;7385:5;7416:6;7410:13;7401:22;;7432:33;7459:5;7432:33;:::i;:::-;7328:143;;;;:::o;7477:351::-;7547:6;7596:2;7584:9;7575:7;7571:23;7567:32;7564:119;;;7602:79;;:::i;:::-;7564:119;7722:1;7747:64;7803:7;7794:6;7783:9;7779:22;7747:64;:::i;:::-;7737:74;;7693:128;7477:351;;;;:::o;7834:229::-;7974:34;7970:1;7962:6;7958:14;7951:58;8043:12;8038:2;8030:6;8026:15;8019:37;7834:229;:::o;8069:366::-;8211:3;8232:67;8296:2;8291:3;8232:67;:::i;:::-;8225:74;;8308:93;8397:3;8308:93;:::i;:::-;8426:2;8421:3;8417:12;8410:19;;8069:366;;;:::o;8441:419::-;8607:4;8645:2;8634:9;8630:18;8622:26;;8694:9;8688:4;8684:20;8680:1;8669:9;8665:17;8658:47;8722:131;8848:4;8722:131;:::i;:::-;8714:139;;8441:419;;;:::o;8866:332::-;8987:4;9025:2;9014:9;9010:18;9002:26;;9038:71;9106:1;9095:9;9091:17;9082:6;9038:71;:::i;:::-;9119:72;9187:2;9176:9;9172:18;9163:6;9119:72;:::i;:::-;8866:332;;;;;:::o;9204:90::-;9238:7;9281:5;9274:13;9267:21;9256:32;;9204:90;;;:::o;9300:116::-;9370:21;9385:5;9370:21;:::i;:::-;9363:5;9360:32;9350:60;;9406:1;9403;9396:12;9350:60;9300:116;:::o;9422:137::-;9476:5;9507:6;9501:13;9492:22;;9523:30;9547:5;9523:30;:::i;:::-;9422:137;;;;:::o;9565:345::-;9632:6;9681:2;9669:9;9660:7;9656:23;9652:32;9649:119;;;9687:79;;:::i;:::-;9649:119;9807:1;9832:61;9885:7;9876:6;9865:9;9861:22;9832:61;:::i;:::-;9822:71;;9778:125;9565:345;;;;:::o;9916:171::-;10056:23;10052:1;10044:6;10040:14;10033:47;9916:171;:::o;10093:366::-;10235:3;10256:67;10320:2;10315:3;10256:67;:::i;:::-;10249:74;;10332:93;10421:3;10332:93;:::i;:::-;10450:2;10445:3;10441:12;10434:19;;10093:366;;;:::o;10465:419::-;10631:4;10669:2;10658:9;10654:18;10646:26;;10718:9;10712:4;10708:20;10704:1;10693:9;10689:17;10682:47;10746:131;10872:4;10746:131;:::i;:::-;10738:139;;10465:419;;;:::o;10890:181::-;11030:33;11026:1;11018:6;11014:14;11007:57;10890:181;:::o;11077:366::-;11219:3;11240:67;11304:2;11299:3;11240:67;:::i;:::-;11233:74;;11316:93;11405:3;11316:93;:::i;:::-;11434:2;11429:3;11425:12;11418:19;;11077:366;;;:::o;11449:419::-;11615:4;11653:2;11642:9;11638:18;11630:26;;11702:9;11696:4;11692:20;11688:1;11677:9;11673:17;11666:47;11730:131;11856:4;11730:131;:::i;:::-;11722:139;;11449:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "774600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ICO_ALLOCATION()": "369",
								"ICO_PRICE()": "347",
								"burnRateOnBuy()": "2448",
								"buyTokens()": "infinite",
								"endIco()": "infinite",
								"icoEndTime()": "2514",
								"owner()": "2626",
								"renounceOwnership()": "infinite",
								"tokensSold()": "2470",
								"transferOwnership(address)": "infinite",
								"volumToken()": "infinite",
								"withdrawFunds()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 238,
									"end": 2096,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 238,
									"end": 2096,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 238,
									"end": 2096,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 572,
									"end": 573,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 541,
									"end": 573,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 541,
									"end": 573,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 694,
									"end": 977,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 694,
									"end": 977,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 694,
									"end": 977,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 694,
									"end": 977,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 694,
									"end": 977,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 694,
									"end": 977,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 977,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 694,
									"end": 977,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 764,
									"end": 774,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 825,
									"end": 826,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 795,
									"end": 827,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 795,
									"end": 827,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 795,
									"end": 813,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 795,
									"end": 827,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 795,
									"end": 827,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 795,
									"end": 827,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 787,
									"end": 865,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 787,
									"end": 865,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 896,
									"end": 914,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 876,
									"end": 886,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 876,
									"end": 886,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 876,
									"end": 915,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 957,
									"end": 969,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 939,
									"end": 954,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 4
								},
								{
									"begin": 939,
									"end": 969,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 939,
									"end": 969,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 939,
									"end": 969,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 939,
									"end": 969,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 939,
									"end": 969,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 939,
									"end": 969,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 939,
									"end": 969,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 926,
									"end": 936,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 926,
									"end": 969,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 926,
									"end": 969,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 926,
									"end": 969,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 926,
									"end": 969,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 977,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 238,
									"end": 2096,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 238,
									"end": 2096,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1718,
									"end": 1836,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1718,
									"end": 1836,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1805,
									"end": 1829,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1823,
									"end": 1828,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1805,
									"end": 1829,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 1805,
									"end": 1829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1805,
									"end": 1829,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1805,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1800,
									"end": 1803,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1793,
									"end": 1830,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1718,
									"end": 1836,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1718,
									"end": 1836,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1718,
									"end": 1836,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1935,
									"end": 1939,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1973,
									"end": 1975,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1962,
									"end": 1971,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1958,
									"end": 1976,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1950,
									"end": 1976,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1950,
									"end": 1976,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1986,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2043,
									"end": 2052,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2039,
									"end": 2056,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2030,
									"end": 2036,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1986,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1986,
									"end": 2057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1986,
									"end": 2057,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 1986,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1842,
									"end": 2064,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1842,
									"end": 2064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2154,
									"end": 2165,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2188,
									"end": 2194,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2183,
									"end": 2186,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2176,
									"end": 2195,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2228,
									"end": 2232,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2223,
									"end": 2226,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2219,
									"end": 2233,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2204,
									"end": 2233,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2204,
									"end": 2233,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2070,
									"end": 2239,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2070,
									"end": 2239,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2245,
									"end": 2465,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 2245,
									"end": 2465,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2385,
									"end": 2419,
									"name": "PUSH",
									"source": 5,
									"value": "566F6C756D546F6B656E20616464726573732063616E6E6F74206265207A6572"
								},
								{
									"begin": 2381,
									"end": 2382,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2373,
									"end": 2379,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2369,
									"end": 2383,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2420,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2454,
									"end": 2457,
									"name": "PUSH",
									"source": 5,
									"value": "6F00000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2449,
									"end": 2451,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2441,
									"end": 2447,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2437,
									"end": 2452,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2430,
									"end": 2458,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2245,
									"end": 2465,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2245,
									"end": 2465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2471,
									"end": 2837,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 2471,
									"end": 2837,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2613,
									"end": 2616,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2634,
									"end": 2701,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 2698,
									"end": 2700,
									"name": "PUSH",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 2693,
									"end": 2696,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2634,
									"end": 2701,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 2634,
									"end": 2701,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2634,
									"end": 2701,
									"name": "tag",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 2634,
									"end": 2701,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2627,
									"end": 2701,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2627,
									"end": 2701,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2710,
									"end": 2803,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2799,
									"end": 2802,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2710,
									"end": 2803,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 2710,
									"end": 2803,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2710,
									"end": 2803,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2710,
									"end": 2803,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2828,
									"end": 2830,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2823,
									"end": 2826,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2819,
									"end": 2831,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2812,
									"end": 2831,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2812,
									"end": 2831,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2471,
									"end": 2837,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2471,
									"end": 2837,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2471,
									"end": 2837,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2471,
									"end": 2837,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2843,
									"end": 3262,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 2843,
									"end": 3262,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3009,
									"end": 3013,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3047,
									"end": 3049,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3036,
									"end": 3045,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3032,
									"end": 3050,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3024,
									"end": 3050,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3024,
									"end": 3050,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3096,
									"end": 3105,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3090,
									"end": 3094,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3086,
									"end": 3106,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 3082,
									"end": 3083,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3071,
									"end": 3080,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3067,
									"end": 3084,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3060,
									"end": 3107,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3124,
									"end": 3255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 3250,
									"end": 3254,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3124,
									"end": 3255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 3124,
									"end": 3255,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3124,
									"end": 3255,
									"name": "tag",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 3124,
									"end": 3255,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3116,
									"end": 3255,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3116,
									"end": 3255,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2843,
									"end": 3262,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2843,
									"end": 3262,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2843,
									"end": 3262,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2843,
									"end": 3262,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3268,
									"end": 3448,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 3268,
									"end": 3448,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3316,
									"end": 3393,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3313,
									"end": 3314,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3306,
									"end": 3394,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3413,
									"end": 3417,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 3410,
									"end": 3411,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 3403,
									"end": 3418,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3437,
									"end": 3441,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3434,
									"end": 3435,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3427,
									"end": 3442,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3454,
									"end": 3645,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 3454,
									"end": 3645,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3494,
									"end": 3497,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3513,
									"end": 3533,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3531,
									"end": 3532,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3513,
									"end": 3533,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 3513,
									"end": 3533,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3513,
									"end": 3533,
									"name": "tag",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3513,
									"end": 3533,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3508,
									"end": 3533,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3508,
									"end": 3533,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3547,
									"end": 3567,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 3565,
									"end": 3566,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3547,
									"end": 3567,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 3547,
									"end": 3567,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3547,
									"end": 3567,
									"name": "tag",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 3547,
									"end": 3567,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3542,
									"end": 3567,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3542,
									"end": 3567,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3590,
									"end": 3591,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3587,
									"end": 3588,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3583,
									"end": 3592,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3576,
									"end": 3592,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3576,
									"end": 3592,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3611,
									"end": 3614,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3608,
									"end": 3609,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3605,
									"end": 3615,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3602,
									"end": 3638,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3602,
									"end": 3638,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 3602,
									"end": 3638,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3618,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 3618,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 3618,
									"end": 3636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3618,
									"end": 3636,
									"name": "tag",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 3618,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3602,
									"end": 3638,
									"name": "tag",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 3602,
									"end": 3638,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3454,
									"end": 3645,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3454,
									"end": 3645,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3454,
									"end": 3645,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3454,
									"end": 3645,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3454,
									"end": 3645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 238,
									"end": 2096,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 238,
									"end": 2096,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 238,
									"end": 2096,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 238,
									"end": 2096,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 238,
									"end": 2096,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 238,
									"end": 2096,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 2096,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 238,
									"end": 2096,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 2096,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122003347e3a7fb929a27efc0c22c84b1671736990f0391eb4893ce5eea60aa646ec64736f6c63430008140033",
									".code": [
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "9AF08DD5"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "9AF08DD5"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "A715BF33"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "B0A65B3E"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "D0FEBE4C"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "E657807B"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "24600FC3"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "4513EF7A"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "518AB2A8"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "7E1055B6"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 238,
											"end": 2096,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1790,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 541,
											"end": 573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 541,
											"end": 573,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 573,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 541,
											"end": 573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 541,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 541,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 541,
											"end": 573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 573,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 541,
											"end": 573,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 541,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 541,
											"end": 573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 541,
											"end": 573,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 477,
											"end": 502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 477,
											"end": 502,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 477,
											"end": 502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 477,
											"end": 502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 477,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 477,
											"end": 502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 477,
											"end": 502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 477,
											"end": 502,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 477,
											"end": 502,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 477,
											"end": 502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 477,
											"end": 502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 477,
											"end": 502,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 509,
											"end": 534,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 509,
											"end": 534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 509,
											"end": 534,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 534,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 509,
											"end": 534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 509,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 509,
											"end": 534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 509,
											"end": 534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 534,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 509,
											"end": 534,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 509,
											"end": 534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 509,
											"end": 534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 534,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 291,
											"end": 315,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 291,
											"end": 315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 291,
											"end": 315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 394,
											"end": 437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 394,
											"end": 437,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 394,
											"end": 437,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 394,
											"end": 437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 394,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 394,
											"end": 437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 394,
											"end": 437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 394,
											"end": 437,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 394,
											"end": 437,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 394,
											"end": 437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 394,
											"end": 437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 394,
											"end": 437,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 322,
											"end": 387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 322,
											"end": 387,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 322,
											"end": 387,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 322,
											"end": 387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 322,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 322,
											"end": 387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 322,
											"end": 387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 322,
											"end": 387,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 322,
											"end": 387,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 322,
											"end": 387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 322,
											"end": 387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 322,
											"end": 387,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1782,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 985,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 985,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 985,
											"end": 1782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1782,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 985,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1782,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1909,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1853,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1853,
											"end": 1858,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1853,
											"end": 1860,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1853,
											"end": 1860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1853,
											"end": 1860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1870,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8FC"
										},
										{
											"begin": 1871,
											"end": 1892,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1893,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1893,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 541,
											"end": 573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 541,
											"end": 573,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 541,
											"end": 573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 477,
											"end": 502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 477,
											"end": 502,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 477,
											"end": 502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 509,
											"end": 534,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 509,
											"end": 534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 509,
											"end": 534,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 509,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 315,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 291,
											"end": 315,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 291,
											"end": 315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 394,
											"end": 437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 430,
											"end": 437,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 394,
											"end": 437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 322,
											"end": 387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 363,
											"end": 387,
											"name": "PUSH",
											"source": 4,
											"value": "F8277896582678AC000000"
										},
										{
											"begin": 322,
											"end": 387,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 322,
											"end": 387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1782,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 985,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1073,
											"end": 1083,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1070,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1055,
											"end": 1083,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1047,
											"end": 1101,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1047,
											"end": 1101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1129,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1133,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1112,
											"end": 1179,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1112,
											"end": 1179,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1219,
											"end": 1228,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1219,
											"end": 1240,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1219,
											"end": 1240,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1240,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1219,
											"end": 1240,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1240,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1278,
											"end": 1279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1279,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1251,
											"end": 1325,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1251,
											"end": 1325,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 363,
											"end": 387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "F8277896582678AC000000"
										},
										{
											"begin": 1357,
											"end": 1373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1344,
											"end": 1354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1344,
											"end": 1354,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1344,
											"end": 1373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1344,
											"end": 1373,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1344,
											"end": 1373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1344,
											"end": 1373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1344,
											"end": 1373,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1344,
											"end": 1373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1344,
											"end": 1373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1344,
											"end": 1391,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1344,
											"end": 1391,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1336,
											"end": 1419,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1336,
											"end": 1419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1473,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1473,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1470,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1454,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1454,
											"end": 1486,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1486,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1454,
											"end": 1486,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1453,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1453,
											"end": 1493,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1453,
											"end": 1493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1453,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1453,
											"end": 1493,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1453,
											"end": 1493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1453,
											"end": 1493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1493,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1526,
											"end": 1536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1526,
											"end": 1536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1536,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1526,
											"end": 1536,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1536,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1526,
											"end": 1536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1526,
											"end": 1546,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1555,
											"end": 1559,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1526,
											"end": 1561,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1526,
											"end": 1561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1526,
											"end": 1561,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1526,
											"end": 1561,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1512,
											"end": 1522,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1512,
											"end": 1561,
											"modifierDepth": 1,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1512,
											"end": 1561,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1504,
											"end": 1608,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1504,
											"end": 1608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1621,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1621,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1651,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1621,
											"end": 1651,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1621,
											"end": 1651,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1621,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1621,
											"end": 1651,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1621,
											"end": 1651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1621,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1621,
											"end": 1651,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1621,
											"end": 1651,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1621,
											"end": 1651,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1621,
											"end": 1651,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1621,
											"end": 1651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1621,
											"end": 1651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1621,
											"end": 1651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1621,
											"end": 1651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1621,
											"end": 1651,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1621,
											"end": 1651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1662,
											"end": 1672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1672,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1672,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1672,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1662,
											"end": 1672,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1672,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1672,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1672,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1662,
											"end": 1672,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1662,
											"end": 1681,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1682,
											"end": 1692,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1710,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1662,
											"end": 1711,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1711,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1662,
											"end": 1711,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1711,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1755,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8F28852646C20CC973D3A8218F7EEFED58C25C909F78F0265AF4818C3D4DC271"
										},
										{
											"begin": 1757,
											"end": 1773,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1729,
											"end": 1774,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1774,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1782,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1782,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 985,
											"end": 1782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1909,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1983,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1983,
											"end": 1993,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1965,
											"end": 1980,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1965,
											"end": 1993,
											"modifierDepth": 1,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1957,
											"end": 2019,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1957,
											"end": 2019,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2058,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2030,
											"end": 2058,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2058,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2058,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 2093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 574,
											"end": 670,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 574,
											"end": 670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 640,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 664,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 629,
											"end": 664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 629,
											"end": 664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 574,
											"end": 670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 574,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1088,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1028,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1056,
											"end": 1059,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1088,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1028,
											"end": 1088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1236,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1094,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1153,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1195,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1204,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1204,
											"end": 1228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1228,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1204,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1195,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1195,
											"end": 1229,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1195,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1177,
											"end": 1230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1230,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1177,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1164,
											"end": 1230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1164,
											"end": 1230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1301,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1356,
											"end": 1361,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1325,
											"end": 1362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1325,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1312,
											"end": 1362,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1312,
											"end": 1362,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1514,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1374,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1471,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1471,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1514,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1374,
											"end": 1514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1679,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1520,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1666,
											"end": 1671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1621,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1672,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1621,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1619,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1609,
											"end": 1673,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1679,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1679,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1792,
											"end": 1796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1832,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1828,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1815,
											"end": 1833,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1833,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1923,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1910,
											"end": 1927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1907,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1843,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1843,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1935,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2139,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2022,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2133,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2341,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2339,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2366,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2523,
											"end": 2528,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2496,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2870,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2541,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2600,
											"end": 2606,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2651,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2637,
											"end": 2646,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2647,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2652,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2617,
											"end": 2736,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2617,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2617,
											"end": 2736,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2655,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2655,
											"end": 2734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2734,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2655,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2617,
											"end": 2736,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2617,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2845,
											"end": 2852,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2825,
											"end": 2834,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2821,
											"end": 2843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2800,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 2853,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2800,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2746,
											"end": 2863,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2870,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2870,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2870,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 3045,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2876,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2960,
											"end": 2971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 3000,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 2992,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3001,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3038,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3039,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3039,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 3045,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 3045,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 3045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 3045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3214,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 3051,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "PUSH",
											"source": 5,
											"value": "49434F2068617320656E64656400000000000000000000000000000000000000"
										},
										{
											"begin": 3187,
											"end": 3188,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3189,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3168,
											"end": 3207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3586,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3220,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3362,
											"end": 3365,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 3442,
											"end": 3445,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3383,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3450,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3383,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3376,
											"end": 3450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3376,
											"end": 3450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3548,
											"end": 3551,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 3459,
											"end": 3552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3552,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3459,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3577,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3580,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3586,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3220,
											"end": 3586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 4011,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3592,
											"end": 4011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3794,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3781,
											"end": 3799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3839,
											"end": 3843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3835,
											"end": 3855,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3831,
											"end": 3832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3816,
											"end": 3833,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3809,
											"end": 3856,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3999,
											"end": 4003,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 4004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3873,
											"end": 4004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 4004,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3873,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 4004,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 4004,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 4011,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 4011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 4011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 4011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4017,
											"end": 4245,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4017,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4157,
											"end": 4191,
											"name": "PUSH",
											"source": 5,
											"value": "416D6F756E7420746F207075726368617365206D757374206265206772656174"
										},
										{
											"begin": 4153,
											"end": 4154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4145,
											"end": 4151,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4141,
											"end": 4155,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4134,
											"end": 4192,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4237,
											"name": "PUSH",
											"source": 5,
											"value": "6572207468616E20300000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4221,
											"end": 4223,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4213,
											"end": 4219,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4209,
											"end": 4224,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4202,
											"end": 4238,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4017,
											"end": 4245,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4017,
											"end": 4245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4617,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4251,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4393,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 4478,
											"end": 4480,
											"name": "PUSH",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 4473,
											"end": 4476,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4414,
											"end": 4481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4414,
											"end": 4481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4414,
											"end": 4481,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 4414,
											"end": 4481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4407,
											"end": 4481,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4407,
											"end": 4481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 4579,
											"end": 4582,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4490,
											"end": 4583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4583,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 4490,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4608,
											"end": 4610,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4603,
											"end": 4606,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4599,
											"end": 4611,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4592,
											"end": 4611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4592,
											"end": 4611,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4617,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4251,
											"end": 4617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4623,
											"end": 5042,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4623,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4789,
											"end": 4793,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4829,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4816,
											"end": 4825,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4812,
											"end": 4830,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4804,
											"end": 4830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4804,
											"end": 4830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4885,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 4874,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4866,
											"end": 4886,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4863,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4851,
											"end": 4860,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4847,
											"end": 4864,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4840,
											"end": 4887,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4904,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 5030,
											"end": 5034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4904,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4904,
											"end": 5035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4904,
											"end": 5035,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4904,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4896,
											"end": 5035,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4896,
											"end": 5035,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4623,
											"end": 5042,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4623,
											"end": 5042,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4623,
											"end": 5042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4623,
											"end": 5042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5048,
											"end": 5228,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 5048,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5096,
											"end": 5173,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5086,
											"end": 5174,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5193,
											"end": 5197,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 5190,
											"end": 5191,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5183,
											"end": 5198,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5217,
											"end": 5221,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5214,
											"end": 5215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5207,
											"end": 5222,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5234,
											"end": 5414,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 5234,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5359,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5279,
											"end": 5280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5272,
											"end": 5360,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5379,
											"end": 5383,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5376,
											"end": 5377,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5369,
											"end": 5384,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5403,
											"end": 5407,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5400,
											"end": 5401,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5408,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5420,
											"end": 5605,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 5420,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5495,
											"end": 5496,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5477,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5477,
											"end": 5497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5477,
											"end": 5497,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5477,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5472,
											"end": 5497,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5472,
											"end": 5497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5511,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5529,
											"end": 5530,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5511,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5511,
											"end": 5531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5511,
											"end": 5531,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5511,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5506,
											"end": 5531,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5506,
											"end": 5531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5540,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5540,
											"end": 5575,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 5555,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 5555,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5555,
											"end": 5573,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 5555,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5540,
											"end": 5575,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5540,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5597,
											"end": 5598,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5594,
											"end": 5595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5590,
											"end": 5599,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5585,
											"end": 5599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5420,
											"end": 5605,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5420,
											"end": 5605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5420,
											"end": 5605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5420,
											"end": 5605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5420,
											"end": 5605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 5802,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 5611,
											"end": 5802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5651,
											"end": 5654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5688,
											"end": 5689,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5670,
											"end": 5690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5670,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5690,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5704,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5722,
											"end": 5723,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5704,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5704,
											"end": 5724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5704,
											"end": 5724,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5704,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5724,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5747,
											"end": 5748,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5744,
											"end": 5745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5740,
											"end": 5749,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5733,
											"end": 5749,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5733,
											"end": 5749,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5768,
											"end": 5771,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5765,
											"end": 5766,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5762,
											"end": 5772,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5759,
											"end": 5795,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5759,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5759,
											"end": 5795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 5775,
											"end": 5793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 5775,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5759,
											"end": 5795,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5759,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 5802,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 5802,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 5802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 5802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 5802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5981,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 5808,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5973,
											"name": "PUSH",
											"source": 5,
											"value": "49434F20616C6C6F636174696F6E206578636565646564000000000000000000"
										},
										{
											"begin": 5944,
											"end": 5945,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 5942,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5932,
											"end": 5946,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5925,
											"end": 5974,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5808,
											"end": 5981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5987,
											"end": 6353,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 5987,
											"end": 6353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6129,
											"end": 6132,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6150,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 6214,
											"end": 6216,
											"name": "PUSH",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 6209,
											"end": 6212,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6150,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 6150,
											"end": 6217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6150,
											"end": 6217,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 6150,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6143,
											"end": 6217,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6143,
											"end": 6217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6226,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 6315,
											"end": 6318,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6226,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6226,
											"end": 6319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6226,
											"end": 6319,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 6226,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6344,
											"end": 6346,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6339,
											"end": 6342,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6335,
											"end": 6347,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6328,
											"end": 6347,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6328,
											"end": 6347,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5987,
											"end": 6353,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5987,
											"end": 6353,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5987,
											"end": 6353,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5987,
											"end": 6353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6359,
											"end": 6778,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 6359,
											"end": 6778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6525,
											"end": 6529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6563,
											"end": 6565,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6548,
											"end": 6566,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6540,
											"end": 6566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6540,
											"end": 6566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6612,
											"end": 6621,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6610,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6622,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6598,
											"end": 6599,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6587,
											"end": 6596,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6583,
											"end": 6600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6623,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 6766,
											"end": 6770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6640,
											"end": 6771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6640,
											"end": 6771,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 6640,
											"end": 6771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6632,
											"end": 6771,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6632,
											"end": 6771,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6359,
											"end": 6778,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6359,
											"end": 6778,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6359,
											"end": 6778,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6359,
											"end": 6778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 7194,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 6784,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6824,
											"end": 6831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6847,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 6865,
											"end": 6866,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6847,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 6847,
											"end": 6867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6847,
											"end": 6867,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 6847,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6842,
											"end": 6867,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6842,
											"end": 6867,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 6899,
											"end": 6900,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 6881,
											"end": 6901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6901,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 6881,
											"end": 6901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6876,
											"end": 6901,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6876,
											"end": 6901,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6936,
											"end": 6937,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6933,
											"end": 6934,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6929,
											"end": 6938,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6958,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6958,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 6958,
											"end": 6988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6958,
											"end": 6988,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 6958,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6947,
											"end": 6988,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6947,
											"end": 6988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7137,
											"end": 7138,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7128,
											"end": 7135,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7124,
											"end": 7139,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7118,
											"end": 7140,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7098,
											"end": 7099,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7091,
											"end": 7100,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7071,
											"end": 7154,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 7048,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 7048,
											"end": 7187,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7167,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 7167,
											"end": 7185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 7167,
											"end": 7185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7167,
											"end": 7185,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 7167,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7048,
											"end": 7187,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 7048,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6832,
											"end": 7194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 7194,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 7194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 7194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 7194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 7194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7200,
											"end": 7322,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 7200,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 7291,
											"end": 7296,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 7273,
											"end": 7297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 7273,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7266,
											"end": 7271,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7298,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7253,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7253,
											"end": 7316,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7312,
											"end": 7313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7309,
											"end": 7310,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7302,
											"end": 7314,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7253,
											"end": 7316,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7253,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7200,
											"end": 7322,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7200,
											"end": 7322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7328,
											"end": 7471,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 7328,
											"end": 7471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7385,
											"end": 7390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7416,
											"end": 7422,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7410,
											"end": 7423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7401,
											"end": 7423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7401,
											"end": 7423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7432,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 7459,
											"end": 7464,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7432,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 7432,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7432,
											"end": 7465,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 7432,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7328,
											"end": 7471,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7328,
											"end": 7471,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7328,
											"end": 7471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7328,
											"end": 7471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7328,
											"end": 7471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7477,
											"end": 7828,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 7477,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7547,
											"end": 7553,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7596,
											"end": 7598,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7584,
											"end": 7593,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7575,
											"end": 7582,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7571,
											"end": 7594,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7567,
											"end": 7599,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7564,
											"end": 7683,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7564,
											"end": 7683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 7564,
											"end": 7683,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7602,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 7602,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 7602,
											"end": 7681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7602,
											"end": 7681,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 7602,
											"end": 7681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7564,
											"end": 7683,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 7564,
											"end": 7683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7722,
											"end": 7723,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7747,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 7803,
											"end": 7810,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7794,
											"end": 7800,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7783,
											"end": 7792,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7779,
											"end": 7801,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7747,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 7747,
											"end": 7811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7747,
											"end": 7811,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 7747,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7737,
											"end": 7811,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7737,
											"end": 7811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7693,
											"end": 7821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7477,
											"end": 7828,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7477,
											"end": 7828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7477,
											"end": 7828,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7477,
											"end": 7828,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7477,
											"end": 7828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7834,
											"end": 8063,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 7834,
											"end": 8063,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7974,
											"end": 8008,
											"name": "PUSH",
											"source": 5,
											"value": "496E73756666696369656E7420746F6B656E2062616C616E636520696E204943"
										},
										{
											"begin": 7970,
											"end": 7971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 7968,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7958,
											"end": 7972,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7951,
											"end": 8009,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8043,
											"end": 8055,
											"name": "PUSH",
											"source": 5,
											"value": "4F20636F6E747261637400000000000000000000000000000000000000000000"
										},
										{
											"begin": 8038,
											"end": 8040,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8030,
											"end": 8036,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8026,
											"end": 8041,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8019,
											"end": 8056,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7834,
											"end": 8063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7834,
											"end": 8063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8435,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 8069,
											"end": 8435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8211,
											"end": 8214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 8296,
											"end": 8298,
											"name": "PUSH",
											"source": 5,
											"value": "2A"
										},
										{
											"begin": 8291,
											"end": 8294,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8232,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 8232,
											"end": 8299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8232,
											"end": 8299,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 8232,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8225,
											"end": 8299,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8225,
											"end": 8299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8308,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 8397,
											"end": 8400,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8308,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 8308,
											"end": 8401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8308,
											"end": 8401,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 8308,
											"end": 8401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8426,
											"end": 8428,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8421,
											"end": 8424,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8417,
											"end": 8429,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8410,
											"end": 8429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8435,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8069,
											"end": 8435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8441,
											"end": 8860,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 8441,
											"end": 8860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8607,
											"end": 8611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8645,
											"end": 8647,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8634,
											"end": 8643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8630,
											"end": 8648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8622,
											"end": 8648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8622,
											"end": 8648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8694,
											"end": 8703,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8688,
											"end": 8692,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8684,
											"end": 8704,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8680,
											"end": 8681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8669,
											"end": 8678,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8665,
											"end": 8682,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8658,
											"end": 8705,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8722,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 8848,
											"end": 8852,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8722,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 8722,
											"end": 8853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8722,
											"end": 8853,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 8722,
											"end": 8853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8714,
											"end": 8853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8714,
											"end": 8853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8441,
											"end": 8860,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8441,
											"end": 8860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8441,
											"end": 8860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8441,
											"end": 8860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 9198,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 8866,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8987,
											"end": 8991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9025,
											"end": 9027,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9014,
											"end": 9023,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9010,
											"end": 9028,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9002,
											"end": 9028,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9002,
											"end": 9028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9038,
											"end": 9109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 9106,
											"end": 9107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9095,
											"end": 9104,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9091,
											"end": 9108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9082,
											"end": 9088,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9038,
											"end": 9109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 9038,
											"end": 9109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9038,
											"end": 9109,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 9038,
											"end": 9109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 9187,
											"end": 9189,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9176,
											"end": 9185,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9163,
											"end": 9169,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 9119,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9191,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 9119,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 9198,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 9198,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 9198,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 9198,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 9198,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 9198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9294,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 9204,
											"end": 9294,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9238,
											"end": 9245,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9281,
											"end": 9286,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9274,
											"end": 9287,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9267,
											"end": 9288,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9288,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9294,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9294,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9294,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9204,
											"end": 9294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9300,
											"end": 9416,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 9300,
											"end": 9416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 9385,
											"end": 9390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 9370,
											"end": 9391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9370,
											"end": 9391,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 9370,
											"end": 9391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9363,
											"end": 9368,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9360,
											"end": 9392,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9350,
											"end": 9410,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 9350,
											"end": 9410,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9406,
											"end": 9407,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9403,
											"end": 9404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9396,
											"end": 9408,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9350,
											"end": 9410,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 9350,
											"end": 9410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9300,
											"end": 9416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9300,
											"end": 9416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9422,
											"end": 9559,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 9422,
											"end": 9559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9476,
											"end": 9481,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9507,
											"end": 9513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9501,
											"end": 9514,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9492,
											"end": 9514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9492,
											"end": 9514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 9547,
											"end": 9552,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 9523,
											"end": 9553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9553,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 9523,
											"end": 9553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9422,
											"end": 9559,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9422,
											"end": 9559,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9422,
											"end": 9559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9422,
											"end": 9559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9422,
											"end": 9559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9565,
											"end": 9910,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 9565,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9632,
											"end": 9638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9681,
											"end": 9683,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9669,
											"end": 9678,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9660,
											"end": 9667,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9656,
											"end": 9679,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9652,
											"end": 9684,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 9649,
											"end": 9768,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9649,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 9649,
											"end": 9768,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 9766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 9687,
											"end": 9766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 9687,
											"end": 9766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 9766,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 9687,
											"end": 9766,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9649,
											"end": 9768,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 9649,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9807,
											"end": 9808,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9832,
											"end": 9893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 9885,
											"end": 9892,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9876,
											"end": 9882,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9865,
											"end": 9874,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9861,
											"end": 9883,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9832,
											"end": 9893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 9832,
											"end": 9893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9832,
											"end": 9893,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 9832,
											"end": 9893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9822,
											"end": 9893,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9822,
											"end": 9893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9778,
											"end": 9903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9565,
											"end": 9910,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9565,
											"end": 9910,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9565,
											"end": 9910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9565,
											"end": 9910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9565,
											"end": 9910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9916,
											"end": 10087,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 9916,
											"end": 10087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10056,
											"end": 10079,
											"name": "PUSH",
											"source": 5,
											"value": "49434F2068617320616C726561647920656E6465640000000000000000000000"
										},
										{
											"begin": 10052,
											"end": 10053,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10044,
											"end": 10050,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10040,
											"end": 10054,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10033,
											"end": 10080,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9916,
											"end": 10087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9916,
											"end": 10087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10093,
											"end": 10459,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 10093,
											"end": 10459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10235,
											"end": 10238,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10256,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 10320,
											"end": 10322,
											"name": "PUSH",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 10315,
											"end": 10318,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10256,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 10256,
											"end": 10323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10256,
											"end": 10323,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 10256,
											"end": 10323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10249,
											"end": 10323,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10249,
											"end": 10323,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10332,
											"end": 10425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 10421,
											"end": 10424,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10332,
											"end": 10425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 10332,
											"end": 10425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10332,
											"end": 10425,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 10332,
											"end": 10425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10450,
											"end": 10452,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10445,
											"end": 10448,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10441,
											"end": 10453,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10434,
											"end": 10453,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10434,
											"end": 10453,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10093,
											"end": 10459,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10093,
											"end": 10459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10093,
											"end": 10459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10093,
											"end": 10459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10465,
											"end": 10884,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 10465,
											"end": 10884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10631,
											"end": 10635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10669,
											"end": 10671,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10658,
											"end": 10667,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10646,
											"end": 10672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10646,
											"end": 10672,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10718,
											"end": 10727,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10712,
											"end": 10716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10708,
											"end": 10728,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10704,
											"end": 10705,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10693,
											"end": 10702,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10689,
											"end": 10706,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10682,
											"end": 10729,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10746,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 10872,
											"end": 10876,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10746,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 10746,
											"end": 10877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10746,
											"end": 10877,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 10746,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10738,
											"end": 10877,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10738,
											"end": 10877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10465,
											"end": 10884,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10465,
											"end": 10884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10465,
											"end": 10884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10465,
											"end": 10884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10890,
											"end": 11071,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 10890,
											"end": 11071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11063,
											"name": "PUSH",
											"source": 5,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 11026,
											"end": 11027,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11018,
											"end": 11024,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11014,
											"end": 11028,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11007,
											"end": 11064,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10890,
											"end": 11071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10890,
											"end": 11071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11077,
											"end": 11443,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 11077,
											"end": 11443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11219,
											"end": 11222,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11307,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 11304,
											"end": 11306,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 11299,
											"end": 11302,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11240,
											"end": 11307,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 11240,
											"end": 11307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11240,
											"end": 11307,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 11240,
											"end": 11307,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11233,
											"end": 11307,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11233,
											"end": 11307,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11316,
											"end": 11409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 11405,
											"end": 11408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11316,
											"end": 11409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 11316,
											"end": 11409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11316,
											"end": 11409,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 11316,
											"end": 11409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11434,
											"end": 11436,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11429,
											"end": 11432,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11425,
											"end": 11437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11418,
											"end": 11437,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11418,
											"end": 11437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11077,
											"end": 11443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11077,
											"end": 11443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11077,
											"end": 11443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11077,
											"end": 11443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11449,
											"end": 11868,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 11449,
											"end": 11868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11615,
											"end": 11619,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11653,
											"end": 11655,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11642,
											"end": 11651,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11638,
											"end": 11656,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11630,
											"end": 11656,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11630,
											"end": 11656,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11702,
											"end": 11711,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11696,
											"end": 11700,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11692,
											"end": 11712,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11688,
											"end": 11689,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11677,
											"end": 11686,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11673,
											"end": 11690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11666,
											"end": 11713,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11730,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 11856,
											"end": 11860,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11730,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 11730,
											"end": 11861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11730,
											"end": 11861,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 11730,
											"end": 11861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11722,
											"end": 11861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11722,
											"end": 11861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11449,
											"end": 11868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11449,
											"end": 11868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11449,
											"end": 11868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11449,
											"end": 11868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/VolumICO.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ICO_ALLOCATION()": "b0a65b3e",
							"ICO_PRICE()": "a715bf33",
							"burnRateOnBuy()": "4513ef7a",
							"buyTokens()": "d0febe4c",
							"endIco()": "e657807b",
							"icoEndTime()": "7e1055b6",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"tokensSold()": "518ab2a8",
							"transferOwnership(address)": "f2fde38b",
							"volumToken()": "9af08dd5",
							"withdrawFunds()": "24600fc3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_volumTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_icoDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ICO_ALLOCATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ICO_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnRateOnBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endIco\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"icoEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"volumToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VolumICO.sol\":\"VolumICO\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/VolumICO.sol\":{\"keccak256\":\"0x617bf64d7f805e4ef113bc4dac14df5512de73cd2328c04a7be9bd996b504009\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d73c46bf7436cb66cd40826780189072a7466d622235ff05dcbb72dfb12504c5\",\"dweb:/ipfs/Qmf9kQURb3E76s4znxEyNr8HgRDxtH8EMdEsneDB5Z11VM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "contracts/VolumICO.sol:VolumICO",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contracts/VolumICO.sol:VolumICO",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 332,
								"contract": "contracts/VolumICO.sol:VolumICO",
								"label": "volumToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)290"
							},
							{
								"astId": 345,
								"contract": "contracts/VolumICO.sol:VolumICO",
								"label": "tokensSold",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 347,
								"contract": "contracts/VolumICO.sol:VolumICO",
								"label": "icoEndTime",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 350,
								"contract": "contracts/VolumICO.sol:VolumICO",
								"label": "burnRateOnBuy",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)290": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 321,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 320,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								320
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 224,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 233,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 290,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 290,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 290,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 290,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 290,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 290,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 291,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								224,
								233
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 298,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 297,
												"id": 300,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 320,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 307,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 306,
												"id": 309,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 320,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 320,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"contracts/VolumICO.sol": {
				"ast": {
					"absolutePath": "contracts/VolumICO.sol",
					"exportedSymbols": {
						"Context": [
							320
						],
						"IERC20": [
							290
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						],
						"VolumICO": [
							515
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 516,
							"sourceUnit": 291,
							"src": "60:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 516,
							"sourceUnit": 213,
							"src": "118:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 325,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 516,
							"sourceUnit": 148,
							"src": "182:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 326,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"259:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "259:15:4"
									},
									"id": 327,
									"nodeType": "InheritanceSpecifier",
									"src": "259:15:4"
								},
								{
									"baseName": {
										"id": 328,
										"name": "Ownable",
										"nameLocations": [
											"276:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "276:7:4"
									},
									"id": 329,
									"nodeType": "InheritanceSpecifier",
									"src": "276:7:4"
								}
							],
							"canonicalName": "VolumICO",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515,
								147,
								320,
								212
							],
							"name": "VolumICO",
							"nameLocation": "247:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9af08dd5",
									"id": 332,
									"mutability": "mutable",
									"name": "volumToken",
									"nameLocation": "305:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 515,
									"src": "291:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$290",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 331,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 330,
											"name": "IERC20",
											"nameLocations": [
												"291:6:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 290,
											"src": "291:6:4"
										},
										"referencedDeclaration": 290,
										"src": "291:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$290",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "b0a65b3e",
									"id": 340,
									"mutability": "constant",
									"name": "ICO_ALLOCATION",
									"nameLocation": "346:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 515,
									"src": "322:65:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 333,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "322:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_300000000000000000000000000_by_1",
											"typeString": "int_const 300000000000000000000000000"
										},
										"id": 339,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3330305f3030305f303030",
											"id": 334,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "363:11:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_300000000_by_1",
												"typeString": "int_const 300000000"
											},
											"value": "300_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "378:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "384:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "378:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 338,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "377:10:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "363:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_300000000000000000000000000_by_1",
											"typeString": "int_const 300000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a715bf33",
									"id": 343,
									"mutability": "constant",
									"name": "ICO_PRICE",
									"nameLocation": "418:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 515,
									"src": "394:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 341,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "394:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 342,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "430:7:4",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "518ab2a8",
									"id": 345,
									"mutability": "mutable",
									"name": "tokensSold",
									"nameLocation": "492:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 515,
									"src": "477:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 344,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "477:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7e1055b6",
									"id": 347,
									"mutability": "mutable",
									"name": "icoEndTime",
									"nameLocation": "524:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 515,
									"src": "509:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "509:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4513ef7a",
									"id": 350,
									"mutability": "mutable",
									"name": "burnRateOnBuy",
									"nameLocation": "556:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 515,
									"src": "541:32:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 348,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "541:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 349,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "572:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8f28852646c20cc973d3a8218f7eefed58c25c909f78f0265af4818c3d4dc271",
									"id": 356,
									"name": "TokensPurchased",
									"nameLocation": "627:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"indexed": true,
												"mutability": "mutable",
												"name": "purchaser",
												"nameLocation": "659:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "643:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "678:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "670:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "642:43:4"
									},
									"src": "621:65:4"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "776:201:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 368,
																"name": "_volumTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "795:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "825:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "817:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 369,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "817:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "817:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "795:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f6c756d546f6b656e20616464726573732063616e6e6f74206265207a65726f",
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "829:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ddb9187ba157d4f16ad245999ec95a32a59c2ed61cba0e20883f94f7496b8193",
																"typeString": "literal_string \"VolumToken address cannot be zero\""
															},
															"value": "VolumToken address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ddb9187ba157d4f16ad245999ec95a32a59c2ed61cba0e20883f94f7496b8193",
																"typeString": "literal_string \"VolumToken address cannot be zero\""
															}
														],
														"id": 367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "787:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "787:78:4"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "volumToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "876:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 379,
																"name": "_volumTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "896:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 378,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "889:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$290_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "889:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$290",
															"typeString": "contract IERC20"
														}
													},
													"src": "876:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$290",
														"typeString": "contract IERC20"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "876:39:4"
											},
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 383,
														"name": "icoEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "926:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 384,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "939:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "945:9:4",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "939:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 386,
															"name": "_icoDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "957:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "939:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "926:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "926:43:4"
											}
										]
									},
									"id": 391,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 363,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "764:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "768:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "764:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 365,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 362,
												"name": "Ownable",
												"nameLocations": [
													"756:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "756:7:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "756:19:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "_volumTokenAddress",
												"nameLocation": "714:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "706:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "_icoDuration",
												"nameLocation": "742:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "734:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "705:50:4"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:0:4"
									},
									"scope": 515,
									"src": "694:283:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "1036:746:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 397,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1055:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1061:9:4",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1055:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 399,
																"name": "icoEndTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "1073:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1055:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49434f2068617320656e646564",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1085:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_39ea4dec594d9ac9bc850ec9f977643e1f67f93311400c6a4e8207e22c0b1ff4",
																"typeString": "literal_string \"ICO has ended\""
															},
															"value": "ICO has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_39ea4dec594d9ac9bc850ec9f977643e1f67f93311400c6a4e8207e22c0b1ff4",
																"typeString": "literal_string \"ICO has ended\""
															}
														],
														"id": 396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1047:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1047:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "1047:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 405,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1120:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1124:5:4",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1120:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1132:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1120:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e7420746f207075726368617365206d7573742062652067726561746572207468616e2030",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1135:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5746de827aa31ac23aa9dd808d9c319c3de47d572ecf91a6b385ad5f492f8e40",
																"typeString": "literal_string \"Amount to purchase must be greater than 0\""
															},
															"value": "Amount to purchase must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5746de827aa31ac23aa9dd808d9c319c3de47d572ecf91a6b385ad5f492f8e40",
																"typeString": "literal_string \"Amount to purchase must be greater than 0\""
															}
														],
														"id": 404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1112:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "1112:67:4"
											},
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "amountToPurchase",
														"nameLocation": "1200:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 475,
														"src": "1192:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1192:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 418,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 414,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1219:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1223:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1219:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 416,
														"name": "ICO_PRICE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "1231:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1219:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1192:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 420,
																"name": "amountToPurchase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "1259:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1278:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1259:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e7420746f207075726368617365206d7573742062652067726561746572207468616e2030",
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1281:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5746de827aa31ac23aa9dd808d9c319c3de47d572ecf91a6b385ad5f492f8e40",
																"typeString": "literal_string \"Amount to purchase must be greater than 0\""
															},
															"value": "Amount to purchase must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5746de827aa31ac23aa9dd808d9c319c3de47d572ecf91a6b385ad5f492f8e40",
																"typeString": "literal_string \"Amount to purchase must be greater than 0\""
															}
														],
														"id": 419,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1251:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1251:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "1251:74:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 427,
																	"name": "tokensSold",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "1344:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 428,
																	"name": "amountToPurchase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "1357:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1344:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 430,
																"name": "ICO_ALLOCATION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "1377:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1344:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49434f20616c6c6f636174696f6e206578636565646564",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1393:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fdd0490266a0518014ed151987973b5a078f147b2909a65cf96386cde7912b2c",
																"typeString": "literal_string \"ICO allocation exceeded\""
															},
															"value": "ICO allocation exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fdd0490266a0518014ed151987973b5a078f147b2909a65cf96386cde7912b2c",
																"typeString": "literal_string \"ICO allocation exceeded\""
															}
														],
														"id": 426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1336:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1336:83:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "1336:83:4"
											},
											{
												"assignments": [
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "1440:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 475,
														"src": "1432:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 435,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1432:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 443,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 437,
																	"name": "amountToPurchase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "1454:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 438,
																	"name": "burnRateOnBuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "1473:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1454:32:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 440,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1453:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1490:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1453:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1432:61:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 445,
																"name": "burnAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "1512:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 450,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1555:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_VolumICO_$515",
																					"typeString": "contract VolumICO"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_VolumICO_$515",
																					"typeString": "contract VolumICO"
																				}
																			],
																			"id": 449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1547:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 448,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1547:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1547:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 446,
																		"name": "volumToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "1526:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$290",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1537:9:4",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 247,
																	"src": "1526:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1526:35:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1512:49:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420746f6b656e2062616c616e636520696e2049434f20636f6e7472616374",
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1563:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2001d0d5385711945314ba6c39eab40afa28114401a8af64bba16b92a74161a2",
																"typeString": "literal_string \"Insufficient token balance in ICO contract\""
															},
															"value": "Insufficient token balance in ICO contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2001d0d5385711945314ba6c39eab40afa28114401a8af64bba16b92a74161a2",
																"typeString": "literal_string \"Insufficient token balance in ICO contract\""
															}
														],
														"id": 444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1504:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1504:104:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "1504:104:4"
											},
											{
												"expression": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 457,
														"name": "tokensSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "1621:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 458,
														"name": "amountToPurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "1635:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1621:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "1621:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 464,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1682:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1686:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1682:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "amountToPurchase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "1694:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 461,
															"name": "volumToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1662:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$290",
																"typeString": "contract IERC20"
															}
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1673:8:4",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "1662:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1662:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "1662:49:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 470,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1745:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1749:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1745:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "amountToPurchase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "1757:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 469,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "1729:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1729:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "EmitStatement",
												"src": "1724:50:4"
											}
										]
									},
									"functionSelector": "d0febe4c",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 394,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 393,
												"name": "nonReentrant",
												"nameLocations": [
													"1023:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "1023:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1023:12:4"
										}
									],
									"name": "buyTokens",
									"nameLocation": "994:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1003:2:4"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1036:0:4"
									},
									"scope": 515,
									"src": "985:797:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "1834:67:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 489,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1879:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_VolumICO_$515",
																			"typeString": "contract VolumICO"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_VolumICO_$515",
																			"typeString": "contract VolumICO"
																		}
																	],
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1871:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 487,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1871:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1871:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1885:7:4",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "1871:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 483,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "1853:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1853:7:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1845:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 481,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1845:8:4",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1845:16:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1862:8:4",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1845:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1845:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "1845:48:4"
											}
										]
									},
									"functionSelector": "24600fc3",
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 479,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 478,
												"name": "onlyOwner",
												"nameLocations": [
													"1824:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1824:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1824:9:4"
										}
									],
									"name": "withdrawFunds",
									"nameLocation": "1799:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1812:2:4"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:0:4"
									},
									"scope": 515,
									"src": "1790:111:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "1946:147:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 501,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1965:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1971:9:4",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1965:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 503,
																"name": "icoEndTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "1983:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1965:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49434f2068617320616c726561647920656e646564",
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1995:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b10b7d5b99de83495b14aed5f421558dda011b4ef4a548e201e5ec2451284878",
																"typeString": "literal_string \"ICO has already ended\""
															},
															"value": "ICO has already ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b10b7d5b99de83495b14aed5f421558dda011b4ef4a548e201e5ec2451284878",
																"typeString": "literal_string \"ICO has already ended\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1957:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1957:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "1957:62:4"
											},
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 508,
														"name": "icoEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "2030:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 509,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2043:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2049:9:4",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2043:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2030:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "2030:28:4"
											}
										]
									},
									"functionSelector": "e657807b",
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 498,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 497,
												"name": "onlyOwner",
												"nameLocations": [
													"1936:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1936:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1936:9:4"
										}
									],
									"name": "endIco",
									"nameLocation": "1918:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1924:2:4"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:0:4"
									},
									"scope": 515,
									"src": "1909:184:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 516,
							"src": "238:1858:4",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								356
							]
						}
					],
					"src": "33:2065:4"
				},
				"id": 4
			}
		}
	}
}